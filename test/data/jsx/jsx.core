module 'jsx' ['consult'/1,
	      'consult'/2,
	      'decode'/1,
	      'decode'/2,
	      'decoder'/3,
	      'encode'/1,
	      'encode'/2,
	      'encoder'/3,
	      'format'/1,
	      'format'/2,
	      'is_json'/1,
	      'is_json'/2,
	      'is_term'/1,
	      'is_term'/2,
	      'maps_support'/0,
	      'minify'/1,
	      'module_info'/0,
	      'module_info'/1,
	      'parser'/3,
	      'prettify'/1,
	      'resume'/3]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[106|[115|[120|[46|[101|[114|[108]]]]]]],1}],
		%% Line 34
		'export_type' =
		    %% Line 34
		    [{'json_term',0}|[{'json_text',0}|[{'token',0}]]],
		%% Line 35
		'export_type' =
		    %% Line 35
		    [{'encoder',0}|[{'decoder',0}|[{'parser',0}|[{'internal_state',0}]]]],
		%% Line 36
		'export_type' =
		    %% Line 36
		    [{'config',0}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{'json_term',{'type',47,'union',[{'type',47,'list',[{'type',47,'tuple',[{'type',47,'union',[{'type',47,'binary',[]}|[{'type',47,'atom',[]}]]}|[{'user_type',47,'json_term',[]}]]}]}|[{'type',47,'nonempty_list',[{'type',47,'tuple',[]}]}|[{'type',48,'list',[{'user_type',48,'json_term',[]}]}|[{'type',48,'nil',[]}|[{'atom',49,'true'}|[{'atom',49,'false'}|[{'atom',49,'null'}|[{'type',50,'integer',[]}|[{'type',50,'float',[]}|[{'type',51,'binary',[]}|[{'type',51,'atom',[]}|[{'remote_type',52,[{'atom',52,'calendar'}|[{'atom',52,'datetime'}|[[]]]]}]]]]]]]]]]]]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{'json_text',{'type',65,'binary',[]},[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'config',{'remote_type',67,[{'atom',67,'jsx_config'}|[{'atom',67,'config'}|[[]]]]},[]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'encode',1},[{'type',69,'fun',[{'type',69,'product',[{'ann_type',69,[{'var',69,'Source'}|[{'user_type',69,'json_term',[]}]]}]}|[{'user_type',69,'json_text',[]}]]}]}],
		%% Line 73
		'spec' =
		    %% Line 73
		    [{{'encode',2},[{'type',73,'fun',[{'type',73,'product',[{'ann_type',73,[{'var',73,'Source'}|[{'user_type',73,'json_term',[]}]]}|[{'ann_type',73,[{'var',73,'Config'}|[{'remote_type',73,[{'atom',73,'jsx_to_json'}|[{'atom',73,'config'}|[[]]]]}]]}]]}|[{'type',73,'union',[{'user_type',73,'json_text',[]}|[{'type',73,'tuple',[{'atom',73,'incomplete'}|[{'user_type',73,'encoder',[]}]]}]]}]]}]}],
		%% Line 78
		'spec' =
		    %% Line 78
		    [{{'decode',1},[{'type',78,'fun',[{'type',78,'product',[{'ann_type',78,[{'var',78,'Source'}|[{'user_type',78,'json_text',[]}]]}]}|[{'user_type',78,'json_term',[]}]]}]}],
		%% Line 82
		'spec' =
		    %% Line 82
		    [{{'decode',2},[{'type',82,'fun',[{'type',82,'product',[{'ann_type',82,[{'var',82,'Source'}|[{'user_type',82,'json_text',[]}]]}|[{'ann_type',82,[{'var',82,'Config'}|[{'remote_type',82,[{'atom',82,'jsx_to_term'}|[{'atom',82,'config'}|[[]]]]}]]}]]}|[{'type',82,'union',[{'user_type',82,'json_term',[]}|[{'type',82,'tuple',[{'atom',82,'incomplete'}|[{'user_type',82,'decoder',[]}]]}]]}]]}]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'format',1},[{'type',87,'fun',[{'type',87,'product',[{'ann_type',87,[{'var',87,'Source'}|[{'user_type',87,'json_text',[]}]]}]}|[{'user_type',87,'json_text',[]}]]}]}],
		%% Line 91
		'spec' =
		    %% Line 91
		    [{{'format',2},[{'type',91,'fun',[{'type',91,'product',[{'ann_type',91,[{'var',91,'Source'}|[{'user_type',91,'json_text',[]}]]}|[{'ann_type',91,[{'var',91,'Config'}|[{'remote_type',91,[{'atom',91,'jsx_to_json'}|[{'atom',91,'config'}|[[]]]]}]]}]]}|[{'type',91,'union',[{'user_type',91,'json_text',[]}|[{'type',91,'tuple',[{'atom',91,'incomplete'}|[{'user_type',91,'decoder',[]}]]}]]}]]}]}],
		%% Line 96
		'spec' =
		    %% Line 96
		    [{{'minify',1},[{'type',96,'fun',[{'type',96,'product',[{'ann_type',96,[{'var',96,'Source'}|[{'user_type',96,'json_text',[]}]]}]}|[{'user_type',96,'json_text',[]}]]}]}],
		%% Line 101
		'spec' =
		    %% Line 101
		    [{{'prettify',1},[{'type',101,'fun',[{'type',101,'product',[{'ann_type',101,[{'var',101,'Source'}|[{'user_type',101,'json_text',[]}]]}]}|[{'user_type',101,'json_text',[]}]]}]}],
		%% Line 106
		'spec' =
		    %% Line 106
		    [{{'is_json',1},[{'type',106,'fun',[{'type',106,'product',[{'ann_type',106,[{'var',106,'Source'}|[{'type',106,'any',[]}]]}]}|[{'type',106,'boolean',[]}]]}]}],
		%% Line 110
		'spec' =
		    %% Line 110
		    [{{'is_json',2},[{'type',110,'fun',[{'type',110,'product',[{'ann_type',110,[{'var',110,'Source'}|[{'type',110,'any',[]}]]}|[{'ann_type',110,[{'var',110,'Config'}|[{'remote_type',110,[{'atom',110,'jsx_verify'}|[{'atom',110,'config'}|[[]]]]}]]}]]}|[{'type',110,'union',[{'type',110,'boolean',[]}|[{'type',110,'tuple',[{'atom',110,'incomplete'}|[{'user_type',110,'decoder',[]}]]}]]}]]}]}],
		%% Line 115
		'spec' =
		    %% Line 115
		    [{{'is_term',1},[{'type',115,'fun',[{'type',115,'product',[{'ann_type',115,[{'var',115,'Source'}|[{'type',115,'any',[]}]]}]}|[{'type',115,'boolean',[]}]]}]}],
		%% Line 119
		'spec' =
		    %% Line 119
		    [{{'is_term',2},[{'type',119,'fun',[{'type',119,'product',[{'ann_type',119,[{'var',119,'Source'}|[{'type',119,'any',[]}]]}|[{'ann_type',119,[{'var',119,'Config'}|[{'remote_type',119,[{'atom',119,'jsx_verify'}|[{'atom',119,'config'}|[[]]]]}]]}]]}|[{'type',119,'union',[{'type',119,'boolean',[]}|[{'type',119,'tuple',[{'atom',119,'incomplete'}|[{'user_type',119,'encoder',[]}]]}]]}]]}]}],
		%% Line 124
		'spec' =
		    %% Line 124
		    [{{'consult',1},[{'type',124,'fun',[{'type',124,'product',[{'ann_type',124,[{'var',124,'File'}|[{'remote_type',124,[{'atom',124,'file'}|[{'atom',124,'name_all'}|[[]]]]}]]}]}|[{'type',124,'list',[{'user_type',124,'json_term',[]}]}]]}]}],
		%% Line 128
		'spec' =
		    %% Line 128
		    [{{'consult',2},[{'type',128,'fun',[{'type',128,'product',[{'ann_type',128,[{'var',128,'File'}|[{'remote_type',128,[{'atom',128,'file'}|[{'atom',128,'name_all'}|[[]]]]}]]}|[{'ann_type',128,[{'var',128,'Config'}|[{'remote_type',128,[{'atom',128,'jsx_to_term'}|[{'atom',128,'config'}|[[]]]]}]]}]]}|[{'type',128,'list',[{'user_type',128,'json_term',[]}]}]]}]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{'decoder',{'type',133,'fun',[{'type',133,'product',[{'type',133,'union',[{'user_type',133,'json_text',[]}|[{'atom',133,'end_stream'}|[{'atom',133,'end_json'}]]]}]}|[{'type',133,'any',[]}]]},[]}],
		%% Line 135
		'spec' =
		    %% Line 135
		    [{{'decoder',3},[{'type',135,'fun',[{'type',135,'product',[{'ann_type',135,[{'var',135,'Handler'}|[{'type',135,'module',[]}]]}|[{'ann_type',135,[{'var',135,'State'}|[{'type',135,'any',[]}]]}|[{'ann_type',135,[{'var',135,'Config'}|[{'type',135,'list',[]}]]}]]]}|[{'user_type',135,'decoder',[]}]]}]}],
		%% Line 140
		'type' =
		    %% Line 140
		    [{'encoder',{'type',140,'fun',[{'type',140,'product',[{'type',140,'union',[{'user_type',140,'json_term',[]}|[{'atom',140,'end_stream'}|[{'atom',140,'end_json'}]]]}]}|[{'type',140,'any',[]}]]},[]}],
		%% Line 142
		'spec' =
		    %% Line 142
		    [{{'encoder',3},[{'type',142,'fun',[{'type',142,'product',[{'ann_type',142,[{'var',142,'Handler'}|[{'type',142,'module',[]}]]}|[{'ann_type',142,[{'var',142,'State'}|[{'type',142,'any',[]}]]}|[{'ann_type',142,[{'var',142,'Config'}|[{'type',142,'list',[]}]]}]]]}|[{'user_type',142,'encoder',[]}]]}]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'token',{'type',147,'union',[{'type',147,'list',[{'user_type',147,'token',[]}]}|[{'atom',148,'start_object'}|[{'atom',149,'end_object'}|[{'atom',150,'start_array'}|[{'atom',151,'end_array'}|[{'type',152,'tuple',[{'atom',152,'key'}|[{'type',152,'binary',[]}]]}|[{'type',153,'tuple',[{'atom',153,'string'}|[{'type',153,'binary',[]}]]}|[{'type',154,'binary',[]}|[{'type',155,'tuple',[{'atom',155,'number'}|[{'type',155,'union',[{'type',155,'integer',[]}|[{'type',155,'float',[]}]]}]]}|[{'type',156,'tuple',[{'atom',156,'integer'}|[{'type',156,'integer',[]}]]}|[{'type',157,'tuple',[{'atom',157,'float'}|[{'type',157,'float',[]}]]}|[{'type',158,'integer',[]}|[{'type',159,'float',[]}|[{'type',160,'tuple',[{'atom',160,'literal'}|[{'atom',160,'true'}]]}|[{'type',161,'tuple',[{'atom',161,'literal'}|[{'atom',161,'false'}]]}|[{'type',162,'tuple',[{'atom',162,'literal'}|[{'atom',162,'null'}]]}|[{'atom',163,'true'}|[{'atom',164,'false'}|[{'atom',165,'null'}|[{'atom',166,'end_json'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 169
		'type' =
		    %% Line 169
		    [{'parser',{'type',169,'fun',[{'type',169,'product',[{'type',169,'union',[{'user_type',169,'token',[]}|[{'atom',169,'end_stream'}]]}]}|[{'type',169,'any',[]}]]},[]}],
		%% Line 171
		'spec' =
		    %% Line 171
		    [{{'parser',3},[{'type',171,'fun',[{'type',171,'product',[{'ann_type',171,[{'var',171,'Handler'}|[{'type',171,'module',[]}]]}|[{'ann_type',171,[{'var',171,'State'}|[{'type',171,'any',[]}]]}|[{'ann_type',171,[{'var',171,'Config'}|[{'type',171,'list',[]}]]}]]]}|[{'user_type',171,'parser',[]}]]}]}],
		%% Line 175
		'opaque' =
		    %% Line 175
		    [{'internal_state',{'type',175,'tuple','any'},[]}],
		%% Line 177
		'spec' =
		    %% Line 177
		    [{{'resume',3},[{'type',177,'fun',[{'type',177,'product',[{'ann_type',177,[{'var',177,'Term'}|[{'type',177,'union',[{'user_type',177,'json_text',[]}|[{'user_type',177,'token',[]}]]}]]}|[{'ann_type',177,[{'var',177,'InternalState'}|[{'user_type',177,'internal_state',[]}]]}|[{'ann_type',177,[{'var',177,'Config'}|[{'type',177,'list',[]}]]}]]]}|[{'type',177,'any',[]}]]}]}],
		%% Line 185
		'spec' =
		    %% Line 185
		    [{{'maps_support',0},[{'type',185,'fun',[{'type',185,'product',[]}|[{'type',185,'boolean',[]}]]}]}]]
'encode'/1 =
    %% Line 71
    fun (_0) ->
	apply 'encode'/2
	    (_0, [])
'encode'/2 =
    %% Line 75
    fun (_0,_1) ->
	call 'jsx_to_json':'to_json'
	    (_0, _1)
'decode'/1 =
    %% Line 80
    fun (_0) ->
	apply 'decode'/2
	    (_0, [])
'decode'/2 =
    %% Line 84
    fun (_0,_1) ->
	call 'jsx_to_term':'to_term'
	    (_0, _1)
'format'/1 =
    %% Line 89
    fun (_0) ->
	apply 'format'/2
	    (_0, [])
'format'/2 =
    %% Line 93
    fun (_0,_1) ->
	call 'jsx_to_json':'format'
	    (_0, _1)
'minify'/1 =
    %% Line 98
    fun (_0) ->
	apply 'format'/2
	    (_0, [])
'prettify'/1 =
    %% Line 103
    fun (_0) ->
	apply 'format'/2
	    (_0, ['space'|[{'indent',2}]])
'is_json'/1 =
    %% Line 108
    fun (_0) ->
	apply 'is_json'/2
	    (_0, [])
'is_json'/2 =
    %% Line 112
    fun (_0,_1) ->
	call 'jsx_verify':'is_json'
	    (_0, _1)
'is_term'/1 =
    %% Line 117
    fun (_0) ->
	apply 'is_term'/2
	    (_0, [])
'is_term'/2 =
    %% Line 121
    fun (_0,_1) ->
	call 'jsx_verify':'is_term'
	    (_0, _1)
'consult'/1 =
    %% Line 126
    fun (_0) ->
	apply 'consult'/2
	    (_0, [])
'consult'/2 =
    %% Line 130
    fun (_0,_1) ->
	call 'jsx_consult':'consult'
	    (_0, _1)
'decoder'/3 =
    %% Line 137
    fun (_0,_1,_2) ->
	call 'jsx_decoder':'decoder'
	    (_0, _1, _2)
'encoder'/3 =
    %% Line 144
    fun (_0,_1,_2) ->
	call 'jsx_encoder':'encoder'
	    (_0, _1, _2)
'parser'/3 =
    %% Line 173
    fun (_0,_1,_2) ->
	call 'jsx_parser':'parser'
	    (_0, _1, _2)
'resume'/3 =
    %% Line 179
    fun (_0,_1,_2) ->
	case <_0,_1,_2> of
	  <Term,{'decoder',State,Handler,Acc,Stack},Config> when 'true' ->
	      let <_3> =
		  call %% Line 180
		       'jsx_config':%% Line 180
				    'parse_config'
		      (%% Line 180
		       Config)
	      in  %% Line 180
		  call 'jsx_decoder':'resume'
		      (Term, State, Handler, Acc, Stack, _3)
	  %% Line 181
	  <Term,{'parser',State,Handler,Stack},Config> when 'true' ->
	      let <_4> =
		  call %% Line 182
		       'jsx_config':%% Line 182
				    'parse_config'
		      (%% Line 182
		       Config)
	      in  %% Line 182
		  call 'jsx_parser':'resume'
		      (Term, State, Handler, Stack, _4)
	  ( <_7,_6,_5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_7,_6,_5})
		  -| [{'function_name',{'resume',3}}] )
	    -| ['compiler_generated'] )
	end
'maps_support'/0 =
    %% Line 188
    fun () ->
	'false'
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('jsx')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('jsx', _0)
end