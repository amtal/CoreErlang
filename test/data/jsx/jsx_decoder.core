module 'jsx_decoder' ['decoder'/3,
		      'module_info'/0,
		      'module_info'/1,
		      'resume'/6]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[106|[115|[120|[95|[100|[101|[99|[111|[100|[101|[114|[46|[101|[114|[108]]]]]]]]]]]]]]],1}],
		%% Line 27
		'compile' =
		    %% Line 27
		    [{'inline',[{'handle_event',3}]}],
		%% Line 28
		'compile' =
		    %% Line 28
		    [{'inline',[{'format_number',1}]}],
		%% Line 29
		'compile' =
		    %% Line 29
		    [{'inline',[{'maybe_replace',2}]}],
		%% Line 30
		'compile' =
		    %% Line 30
		    [{'inline',[{'doublequote',5}|[{'singlequote',5}]]}],
		%% Line 35
		'spec' =
		    %% Line 35
		    [{{'decoder',3},[{'type',35,'fun',[{'type',35,'product',[{'ann_type',35,[{'var',35,'Handler'}|[{'type',35,'module',[]}]]}|[{'ann_type',35,[{'var',35,'State'}|[{'type',35,'any',[]}]]}|[{'ann_type',35,[{'var',35,'Config'}|[{'type',35,'list',[]}]]}]]]}|[{'remote_type',35,[{'atom',35,'jsx'}|[{'atom',35,'decoder'}|[[]]]]}]]}]}],
		%% Line 43
		'spec' =
		    %% Line 43
		    [{{'resume',6},[{'type',43,'fun',[{'type',43,'product',[{'ann_type',44,[{'var',44,'Rest'}|[{'type',44,'binary',[]}]]}|[{'ann_type',45,[{'var',45,'State'}|[{'type',45,'atom',[]}]]}|[{'ann_type',46,[{'var',46,'Handler'}|[{'type',46,'module',[]}]]}|[{'ann_type',47,[{'var',47,'Acc'}|[{'type',47,'any',[]}]]}|[{'ann_type',48,[{'var',48,'Stack'}|[{'type',48,'list',[{'type',48,'atom',[]}]}]]}|[{'ann_type',49,[{'var',49,'Config'}|[{'remote_type',49,[{'atom',49,'jsx'}|[{'atom',49,'config'}|[[]]]]}]]}]]]]]]}|[{'type',50,'union',[{'remote_type',50,[{'atom',50,'jsx'}|[{'atom',50,'decoder'}|[[]]]]}|[{'type',50,'tuple',[{'atom',50,'incomplete'}|[{'remote_type',50,[{'atom',50,'jsx'}|[{'atom',50,'decoder'}|[[]]]]}]]}]]}]]}]}],
		%% Line 1
		'file' =
		    %% Line 1
		    [{[106|[115|[120|[95|[99|[111|[110|[102|[105|[103|[46|[104|[114|[108]]]]]]]]]]]]]],1}],
		%% Line 1
		'record' =
		    %% Line 1
		    [{'config',[{'typed_record_field',{'record_field',2,{'atom',2,'dirty_strings'},{'atom',2,'false'}},{'type',2,'boolean',[]}}|[{'typed_record_field',{'record_field',3,{'atom',3,'escaped_forward_slashes'},{'atom',3,'false'}},{'type',3,'boolean',[]}}|[{'typed_record_field',{'record_field',4,{'atom',4,'escaped_strings'},{'atom',4,'false'}},{'type',4,'boolean',[]}}|[{'typed_record_field',{'record_field',5,{'atom',5,'multi_term'},{'atom',5,'false'}},{'type',5,'boolean',[]}}|[{'typed_record_field',{'record_field',6,{'atom',6,'strict_comments'},{'atom',6,'false'}},{'type',6,'boolean',[]}}|[{'typed_record_field',{'record_field',7,{'atom',7,'strict_commas'},{'atom',7,'false'}},{'type',7,'boolean',[]}}|[{'typed_record_field',{'record_field',8,{'atom',8,'strict_utf8'},{'atom',8,'false'}},{'type',8,'boolean',[]}}|[{'typed_record_field',{'record_field',9,{'atom',9,'strict_single_quotes'},{'atom',9,'false'}},{'type',9,'boolean',[]}}|[{'typed_record_field',{'record_field',10,{'atom',10,'strict_escapes'},{'atom',10,'false'}},{'type',10,'boolean',[]}}|[{'typed_record_field',{'record_field',11,{'atom',11,'strict_control_codes'},{'atom',11,'false'}},{'type',11,'boolean',[]}}|[{'typed_record_field',{'record_field',12,{'atom',12,'stream'},{'atom',12,'false'}},{'type',12,'boolean',[]}}|[{'typed_record_field',{'record_field',13,{'atom',13,'return_tail'},{'atom',13,'false'}},{'type',13,'boolean',[]}}|[{'typed_record_field',{'record_field',14,{'atom',14,'uescape'},{'atom',14,'false'}},{'type',14,'boolean',[]}}|[{'typed_record_field',{'record_field',15,{'atom',15,'unescaped_jsonp'},{'atom',15,'false'}},{'type',15,'boolean',[]}}|[{'typed_record_field',{'record_field',16,{'atom',16,'error_handler'},{'atom',16,'false'}},{'type',16,'union',[{'atom',16,'false'}|[{'remote_type',16,[{'atom',16,'jsx_config'}|[{'atom',16,'handler'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',17,{'atom',17,'incomplete_handler'},{'atom',17,'false'}},{'type',17,'union',[{'atom',17,'false'}|[{'remote_type',17,[{'atom',17,'jsx_config'}|[{'atom',17,'handler'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]}],
		%% Line 72
		'file' =
		    %% Line 72
		    [{[106|[115|[120|[95|[100|[101|[99|[111|[100|[101|[114|[46|[101|[114|[108]]]]]]]]]]]]]]],72}]]
'decoder'/3 =
    %% Line 37
    fun (_0,_1,_2) ->
	%% Line 38
	( fun (_5) ->
	      let <_4> =
		  call _0:'init'
		      (_1)
	      in  let <_3> =
		      call 'jsx_config':'parse_config'
			  (_2)
		  in  apply 'start'/4
			  (_5, {_0,_4}, [], _3)
	  -| [{'id',{0,0,'-decoder/3-fun-0-'}}] )
'resume'/6 =
    %% Line 52
    fun (_0,_1,_2,_3,_4,_5) ->
	%% Line 53
	case _1 of
	  %% Line 54
	  <'start'> when 'true' ->
	      apply 'start'/4
		  (_0, _2, _4, _5)
	  %% Line 55
	  <'value'> when 'true' ->
	      apply 'value'/4
		  (_0, _2, _4, _5)
	  %% Line 56
	  <'object'> when 'true' ->
	      apply 'object'/4
		  (_0, _2, _4, _5)
	  %% Line 57
	  <'array'> when 'true' ->
	      apply 'array'/4
		  (_0, _2, _4, _5)
	  %% Line 58
	  <'colon'> when 'true' ->
	      apply 'colon'/4
		  (_0, _2, _4, _5)
	  %% Line 59
	  <'key'> when 'true' ->
	      apply 'key'/4
		  (_0, _2, _4, _5)
	  %% Line 60
	  <'string'> when 'true' ->
	      apply 'string'/5
		  (_0, _2, _3, _4, _5)
	  %% Line 61
	  <'number'> when 'true' ->
	      apply 'number'/5
		  (_0, _2, _3, _4, _5)
	  %% Line 62
	  <'true'> when 'true' ->
	      apply 'true'/4
		  (_0, _2, _4, _5)
	  %% Line 63
	  <'false'> when 'true' ->
	      apply 'false'/4
		  (_0, _2, _4, _5)
	  %% Line 64
	  <'null'> when 'true' ->
	      apply 'null'/4
		  (_0, _2, _4, _5)
	  %% Line 65
	  <'comment'> when 'true' ->
	      apply 'comment'/5
		  (_0, _2, _3, _4, _5)
	  %% Line 66
	  <'maybe_done'> when 'true' ->
	      apply 'maybe_done'/4
		  (_0, _2, _4, _5)
	  %% Line 67
	  <'done'> when 'true' ->
	      apply 'done'/4
		  (_0, _2, _4, _5)
	  ( <_6> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_6})
	    -| ['compiler_generated'] )
	end
'incomplete'/5 =
    %% Line 134
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <State,Rest,Handler,Stack,Config = {'config',_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,'false',_24,_25,_26,_27,_28}> when 'true' ->
	      %% Line 135
	      ( case Config of
		  ( <( {'config',_29,_30,_31,_32,_33,_34,_35,_36,_37,_38,_39,_40,_41,_42,_rec0,_43}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec0 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_7> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Rest, {'decoder',State,Handler,'null',Stack}, _7)
			end
		    -| ['compiler_generated'] )
		  ( <_44> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 136
	  <State,Rest,Handler,Stack,Config> when 'true' ->
	      %% Line 137
	      apply 'incomplete'/6
		  (State, Rest, Handler, 'unused', Stack, Config)
	end
'incomplete'/6 =
    %% Line 140
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <State,Rest,Handler,Acc,Stack,Config = {'config',_32,_33,_34,_35,_36,_37,_38,_39,_40,_41,'false',_42,_43,_44,_45,_46}> when 'true' ->
	      %% Line 141
	      ( case Config of
		  ( <( {'config',_47,_48,_49,_50,_51,_52,_53,_54,_55,_56,_57,_58,_59,_60,_rec1,_61}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec1 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_8> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Rest, {'decoder',State,Handler,Acc,Stack}, _8)
			end
		    -| ['compiler_generated'] )
		  ( <_62> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 142
	  <State,Rest,Handler,Acc,Stack,Config = {'config',_63,_64,_65,_66,_67,_68,_69,_70,_71,_72,_73,_74,_75,_76,_77,'false'}> when 'true' ->
	      let <_24> =
		  fun (_22) ->
		      %% Line 143
		      case _22 of
			<Stream>
			    when call 'erlang':'is_binary'
				  (_22) ->
			    let <_10> =
				#{#<%% Line 144
				    Rest>(%% Line 144
					  'all',8,'binary',['unsigned'|['big']]),
				  #<%% Line 144
				    Stream>(%% Line 144
					    'all',8,'binary',['unsigned'|['big']])}#
			    in  %% Line 144
				apply 'resume'/6
				    (_10, State, Handler, Acc, Stack, Config)
			%% Line 145
			<End>
			    when let <_11> =
				  call 'erlang':'=:='
				      (_22, 'end_stream')
			      in  let <_12> =
				      call 'erlang':'=:='
					  (_22, 'end_json')
				  in  call 'erlang':'or'
					  (_11, _12) ->
			    let <_16> =
				#{#<%% Line 146
				    Rest>(%% Line 146
					  'all',8,'binary',['unsigned'|['big']]),
				  %% Line 146
				  #<32>(8,1,'integer',['unsigned'|['big']])}#
			    in  %% Line 146
				case Config of
				  <{'config',_78,_79,_80,_81,_82,_83,_84,_85,_86,_87,_88,_89,_90,_91,_92,_93}> when 'true' ->
				      let <_15> =
					  call 'erlang':'setelement'
					      (12, Config, 'false')
				      in  case apply 'resume'/6
						   (_16, State, Handler, Acc, Stack, _15) of
					    %% Line 147
					    <{'incomplete',_95}> when 'true' ->
						( case Config of
						    ( <( {'config',_96,_97,_98,_99,_100,_101,_102,_103,_104,_105,_106,_107,_108,_109,_rec3,_110}
							 -| ['compiler_generated'] )> when 'true' ->
							  case _rec3 of
							    <'false'> when 'true' ->
								call 'erlang':'error'
								    ('badarg')
							    <F> when 'true' ->
								let <_19> =
								    call 'jsx_config':'config_to_list'
									(Config)
								in  apply F
									(Rest, {'decoder',State,Handler,Acc,Stack}, _19)
							  end
						      -| ['compiler_generated'] )
						    ( <_111> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','config'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    %% Line 148
					    <Else> when 'true' ->
						Else
					  end
				  ( <_94> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','config'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			( <_23> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_23})
				-| [{'function_name',{'-incomplete/6-fun-0-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 143
		  {'incomplete',_24}
	  %% Line 152
	  <State,Rest,Handler,Acc,Stack,Config = {'config',_112,_113,_114,_115,_116,_117,_118,_119,_120,_121,_122,_123,_124,_125,_126,F}> when 'true' ->
	      let <_25> =
		  call %% Line 153
		       'jsx_config':%% Line 153
				    'config_to_list'
		      (%% Line 153
		       Config)
	      in  %% Line 153
		  apply F
		      (Rest, {'decoder',State,Handler,Acc,Stack}, _25)
	  ( <_31,_30,_29,_28,_27,_26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_31,_30,_29,_28,_27,_26})
		  -| [{'function_name',{'incomplete',6}}] )
	    -| ['compiler_generated'] )
	end
'handle_event'/3 =
    %% Line 156
    fun (_0,_1,_2) ->
	case <_0,_1,_2> of
	  <Event,{Handler,State},_X_Config> when 'true' ->
	      let <_3> =
		  call Handler:'handle_event'
		      (Event, State)
	      in  {Handler,_3}
	  ( <_6,_5,_4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_6,_5,_4})
		  -| [{'function_name',{'handle_event',3}}] )
	    -| ['compiler_generated'] )
	end
'start'/4 =
    %% Line 159
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<239>(8,1,'integer',['unsigned'|['big']]),
	     #<187>(8,1,'integer',['unsigned'|['big']]),
	     #<191>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 160
	      apply 'value'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 161
	  <#{#<239>(8,1,'integer',['unsigned'|['big']]),
	     #<187>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 162
	      apply 'incomplete'/5
		  ('start', #{#<239>(8,1,'integer',['unsigned'|['big']]),
			      #<187>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 163
	  <#{#<239>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 164
	      apply 'incomplete'/5
		  ('start', #{#<239>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 165
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 166
	      apply 'incomplete'/5
		  ('start', #{}#, Handler, Stack, Config)
	  %% Line 167
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 168
	      apply 'value'/4
		  (Bin, Handler, Stack, Config)
	end
'value'/4 =
    %% Line 171
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<34>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 172
	      apply 'string'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 173
	  <#{#<32>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 174
	      apply 'value'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 175
	  <#{#<123>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      ( case %% Line 176
		     <Handler,Config> of
		  ( <( {_103,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_104> =
			      call _103:( 'handle_event'
					  -| ['compiler_generated'] )
				  (( 'start_object'
				     -| ['compiler_generated'] ), State)
			  in  let <_4> = {_103,_104}
			      in  %% Line 176
				  apply 'object'/4
				      (Rest, _4, ['key'|Stack], Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( 'start_object'
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 177
	  <#{#<91>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      ( case %% Line 178
		     <Handler,Config> of
		  ( <( {_108,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_109> =
			      call _108:( 'handle_event'
					  -| ['compiler_generated'] )
				  (( 'start_array'
				     -| ['compiler_generated'] ), State)
			  in  let <_5> = {_108,_109}
			      in  %% Line 178
				  apply 'array'/4
				      (Rest, _5, ['array'|Stack], Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( 'start_array'
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 179
	  <#{#<116>(8,1,'integer',['unsigned'|['big']]),
	     #<114>(8,1,'integer',['unsigned'|['big']]),
	     #<117>(8,1,'integer',['unsigned'|['big']]),
	     #<101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      ( case %% Line 180
		     <Handler,Config> of
		  ( <( {_113,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_114> =
			      call _113:( 'handle_event'
					  -| ['compiler_generated'] )
				  (( {'literal','true'}
				     -| ['compiler_generated'] ), State)
			  in  let <_6> = {_113,_114}
			      in  %% Line 180
				  apply 'maybe_done'/4
				      (Rest, _6, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( {'literal','true'}
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 181
	  <#{#<102>(8,1,'integer',['unsigned'|['big']]),
	     #<97>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']]),
	     #<115>(8,1,'integer',['unsigned'|['big']]),
	     #<101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      ( case %% Line 182
		     <Handler,Config> of
		  ( <( {_118,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_119> =
			      call _118:( 'handle_event'
					  -| ['compiler_generated'] )
				  (( {'literal','false'}
				     -| ['compiler_generated'] ), State)
			  in  let <_7> = {_118,_119}
			      in  %% Line 182
				  apply 'maybe_done'/4
				      (Rest, _7, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( {'literal','false'}
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 183
	  <#{#<110>(8,1,'integer',['unsigned'|['big']]),
	     #<117>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      ( case %% Line 184
		     <Handler,Config> of
		  ( <( {_123,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_124> =
			      call _123:( 'handle_event'
					  -| ['compiler_generated'] )
				  (( {'literal','null'}
				     -| ['compiler_generated'] ), State)
			  in  let <_8> = {_123,_124}
			      in  %% Line 184
				  apply 'maybe_done'/4
				      (Rest, _8, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( {'literal','null'}
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 185
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 186
	      apply 'number'/5
		  (Rest, Handler, [48], ['zero'|Stack], Config)
	  %% Line 187
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 188
	      apply 'number'/5
		  (Rest, Handler, [49], ['integer'|Stack], Config)
	  %% Line 189
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 190
	      apply 'number'/5
		  (Rest, Handler, [50], ['integer'|Stack], Config)
	  %% Line 191
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 192
	      apply 'number'/5
		  (Rest, Handler, [51], ['integer'|Stack], Config)
	  %% Line 193
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 194
	      apply 'number'/5
		  (Rest, Handler, [52], ['integer'|Stack], Config)
	  %% Line 195
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 196
	      apply 'number'/5
		  (Rest, Handler, [53], ['integer'|Stack], Config)
	  %% Line 197
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 198
	      apply 'number'/5
		  (Rest, Handler, [54], ['integer'|Stack], Config)
	  %% Line 199
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 200
	      apply 'number'/5
		  (Rest, Handler, [55], ['integer'|Stack], Config)
	  %% Line 201
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 202
	      apply 'number'/5
		  (Rest, Handler, [56], ['integer'|Stack], Config)
	  %% Line 203
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 204
	      apply 'number'/5
		  (Rest, Handler, [57], ['integer'|Stack], Config)
	  %% Line 205
	  <#{#<45>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 206
	      apply 'number'/5
		  (Rest, Handler, [45], ['negative'|Stack], Config)
	  %% Line 207
	  <#{#<10>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 208
	      apply 'value'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 209
	  <#{#<116>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 210
	      apply 'true'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 211
	  <#{#<102>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 212
	      apply 'false'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 213
	  <#{#<110>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 214
	      apply 'null'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 215
	  <#{#<9>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 216
	      apply 'value'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 217
	  <#{#<13>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 218
	      apply 'value'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 219
	  <#{#<39>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_22,_23,_24,_25,_26,_27,_28,'false',_29,_30,_31,_32,_33,_34,_35,_36}> when 'true' ->
	      %% Line 220
	      apply 'string'/4
		  (Rest, Handler, ['singlequote'|Stack], Config)
	  %% Line 221
	  <Rest = #{#<93>(8,1,'integer',['unsigned'|['big']]),
		    #<_37>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_38,_39,_40,_41,_42,'false',_43,_44,_45,_46,_47,_48,_49,_50,_51,_52}> when 'true' ->
	      %% Line 222
	      apply 'maybe_done'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 223
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_53,_54,_55,_56,'true',_57,_58,_59,_60,_61,_62,_63,_64,_65,_66,_67}> when 'true' ->
	      %% Line 224
	      ( case Config of
		  ( <( {'config',_68,_69,_70,_71,_72,_73,_74,_75,_76,_77,_78,_79,_80,_81,_rec4,_82}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec4 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_12> =
				  #{#<47>(8,1,'integer',['unsigned'|['big']]),
				    #<Rest>('all',8,'binary',['unsigned'|['big']])}#
			      in  let <_11> =
				      call 'jsx_config':'config_to_list'
					  (Config)
				  in  apply F
					  (_12, {'decoder','value',Handler,'null',Stack}, _11)
			end
		    -| ['compiler_generated'] )
		  ( <_83> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 225
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 226
	      apply 'comment'/5
		  (Rest, Handler, 'value', ['comment'|Stack], Config)
	  %% Line 227
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 228
	      apply 'comment'/5
		  (Rest, Handler, 'value', ['multicomment'|Stack], Config)
	  %% Line 229
	  <#{#<47>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 230
	      apply 'incomplete'/5
		  ('value', #{#<47>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 231
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 232
	      apply 'incomplete'/5
		  ('value', #{}#, Handler, Stack, Config)
	  %% Line 233
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 234
	      ( case Config of
		  ( <( {'config',_84,_85,_86,_87,_88,_89,_90,_91,_92,_93,_94,_95,_96,_97,_rec5,_98}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec5 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_16> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','value',Handler,'null',Stack}, _16)
			end
		    -| ['compiler_generated'] )
		  ( <_99> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'object'/4 =
    %% Line 237
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<34>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 238
	      apply 'string'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 239
	  <#{#<32>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 240
	      apply 'object'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 241
	  <#{#<125>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,['key'|Stack],Config> when 'true' ->
	      ( case %% Line 242
		     <Handler,Config> of
		  ( <( {_83,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_84> =
			      call _83:( 'handle_event'
					 -| ['compiler_generated'] )
				  (( 'end_object'
				     -| ['compiler_generated'] ), State)
			  in  let <_4> = {_83,_84}
			      in  %% Line 242
				  apply 'maybe_done'/4
				      (Rest, _4, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( 'end_object'
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 243
	  <#{#<10>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 244
	      apply 'object'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 245
	  <#{#<9>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 246
	      apply 'object'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 247
	  <#{#<13>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 248
	      apply 'object'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 249
	  <#{#<39>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_18,_19,_20,_21,_22,_23,_24,'false',_25,_26,_27,_28,_29,_30,_31,_32}> when 'true' ->
	      %% Line 250
	      apply 'string'/4
		  (Rest, Handler, ['singlequote'|Stack], Config)
	  %% Line 251
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_33,_34,_35,_36,'true',_37,_38,_39,_40,_41,_42,_43,_44,_45,_46,_47}> when 'true' ->
	      %% Line 252
	      ( case Config of
		  ( <( {'config',_48,_49,_50,_51,_52,_53,_54,_55,_56,_57,_58,_59,_60,_61,_rec6,_62}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec6 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_8> =
				  #{#<47>(8,1,'integer',['unsigned'|['big']]),
				    #<Rest>('all',8,'binary',['unsigned'|['big']])}#
			      in  let <_7> =
				      call 'jsx_config':'config_to_list'
					  (Config)
				  in  apply F
					  (_8, {'decoder','object',Handler,'null',Stack}, _7)
			end
		    -| ['compiler_generated'] )
		  ( <_63> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 253
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 254
	      apply 'comment'/5
		  (Rest, Handler, 'object', ['comment'|Stack], Config)
	  %% Line 255
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 256
	      apply 'comment'/5
		  (Rest, Handler, 'object', ['multicomment'|Stack], Config)
	  %% Line 257
	  <#{#<47>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 258
	      apply 'incomplete'/5
		  ('object', #{#<47>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 259
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 260
	      apply 'incomplete'/5
		  ('object', #{}#, Handler, Stack, Config)
	  %% Line 261
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 262
	      ( case Config of
		  ( <( {'config',_64,_65,_66,_67,_68,_69,_70,_71,_72,_73,_74,_75,_76,_77,_rec7,_78}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec7 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_12> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','object',Handler,'null',Stack}, _12)
			end
		    -| ['compiler_generated'] )
		  ( <_79> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'array'/4 =
    %% Line 265
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<93>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,['array'|Stack],Config> when 'true' ->
	      ( case %% Line 266
		     <Handler,Config> of
		  ( <( {_28,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_29> =
			      call _28:( 'handle_event'
					 -| ['compiler_generated'] )
				  (( 'end_array'
				     -| ['compiler_generated'] ), State)
			  in  let <_4> = {_28,_29}
			      in  %% Line 266
				  apply 'maybe_done'/4
				      (Rest, _4, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( 'end_array'
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 267
	  <#{#<32>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 268
	      apply 'array'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 269
	  <#{#<10>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 270
	      apply 'array'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 271
	  <#{#<9>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 272
	      apply 'array'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 273
	  <#{#<13>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 274
	      apply 'array'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 275
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_10,_11,_12,_13,'true',_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24}> when 'true' ->
	      let <_5> =
		  #{#<%% Line 276
		      47>(%% Line 276
			  8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 276
		      Rest>(%% Line 276
			    'all',8,'binary',['unsigned'|['big']])}#
	      in  %% Line 276
		  apply 'value'/4
		      (_5, Handler, Stack, Config)
	  %% Line 277
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 278
	      apply 'comment'/5
		  (Rest, Handler, 'array', ['comment'|Stack], Config)
	  %% Line 279
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 280
	      apply 'comment'/5
		  (Rest, Handler, 'array', ['multicomment'|Stack], Config)
	  %% Line 281
	  <#{#<47>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 282
	      apply 'incomplete'/5
		  ('array', #{#<47>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 283
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 284
	      apply 'incomplete'/5
		  ('array', #{}#, Handler, Stack, Config)
	  %% Line 285
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 286
	      apply 'value'/4
		  (Bin, Handler, Stack, Config)
	end
'colon'/4 =
    %% Line 289
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<58>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,['key'|Stack],Config> when 'true' ->
	      %% Line 290
	      apply 'value'/4
		  (Rest, Handler, ['object'|Stack], Config)
	  %% Line 291
	  <#{#<32>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 292
	      apply 'colon'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 293
	  <#{#<10>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 294
	      apply 'colon'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 295
	  <#{#<9>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 296
	      apply 'colon'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 297
	  <#{#<13>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 298
	      apply 'colon'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 299
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_17,_18,_19,_20,'true',_21,_22,_23,_24,_25,_26,_27,_28,_29,_30,_31}> when 'true' ->
	      %% Line 300
	      ( case Config of
		  ( <( {'config',_32,_33,_34,_35,_36,_37,_38,_39,_40,_41,_42,_43,_44,_45,_rec8,_46}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec8 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_7> =
				  #{#<47>(8,1,'integer',['unsigned'|['big']]),
				    #<Rest>('all',8,'binary',['unsigned'|['big']])}#
			      in  let <_6> =
				      call 'jsx_config':'config_to_list'
					  (Config)
				  in  apply F
					  (_7, {'decoder','colon',Handler,'null',Stack}, _6)
			end
		    -| ['compiler_generated'] )
		  ( <_47> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 301
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 302
	      apply 'comment'/5
		  (Rest, Handler, 'colon', ['comment'|Stack], Config)
	  %% Line 303
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 304
	      apply 'comment'/5
		  (Rest, Handler, 'colon', ['multicomment'|Stack], Config)
	  %% Line 305
	  <#{#<47>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 306
	      apply 'incomplete'/5
		  ('colon', #{#<47>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 307
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 308
	      apply 'incomplete'/5
		  ('colon', #{}#, Handler, Stack, Config)
	  %% Line 309
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 310
	      ( case Config of
		  ( <( {'config',_48,_49,_50,_51,_52,_53,_54,_55,_56,_57,_58,_59,_60,_61,_rec9,_62}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec9 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_11> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','colon',Handler,'null',Stack}, _11)
			end
		    -| ['compiler_generated'] )
		  ( <_63> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'key'/4 =
    %% Line 313
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<34>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 314
	      apply 'string'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 315
	  <#{#<32>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 316
	      apply 'key'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 317
	  <#{#<125>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,['key'|Stack],Config = {'config',_18,_19,_20,_21,_22,'false',_23,_24,_25,_26,_27,_28,_29,_30,_31,_32}> when 'true' ->
	      let <_4> =
		  #{#<%% Line 318
		      125>(%% Line 318
			   8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 318
		      Rest>(%% Line 318
			    'all',8,'binary',['unsigned'|['big']])}#
	      in  %% Line 318
		  apply 'maybe_done'/4
		      (_4, Handler, ['object'|Stack], Config)
	  %% Line 319
	  <#{#<10>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 320
	      apply 'key'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 321
	  <#{#<9>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 322
	      apply 'key'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 323
	  <#{#<13>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 324
	      apply 'key'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 325
	  <#{#<39>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_33,_34,_35,_36,_37,_38,_39,'false',_40,_41,_42,_43,_44,_45,_46,_47}> when 'true' ->
	      %% Line 326
	      apply 'string'/4
		  (Rest, Handler, ['singlequote'|Stack], Config)
	  %% Line 327
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_48,_49,_50,_51,'true',_52,_53,_54,_55,_56,_57,_58,_59,_60,_61,_62}> when 'true' ->
	      %% Line 328
	      ( case Config of
		  ( <( {'config',_63,_64,_65,_66,_67,_68,_69,_70,_71,_72,_73,_74,_75,_76,_rec10,_77}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec10 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_8> =
				  #{#<47>(8,1,'integer',['unsigned'|['big']]),
				    #<Rest>('all',8,'binary',['unsigned'|['big']])}#
			      in  let <_7> =
				      call 'jsx_config':'config_to_list'
					  (Config)
				  in  apply F
					  (_8, {'decoder','key',Handler,'null',Stack}, _7)
			end
		    -| ['compiler_generated'] )
		  ( <_78> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 329
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 330
	      apply 'comment'/5
		  (Rest, Handler, 'key', ['comment'|Stack], Config)
	  %% Line 331
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 332
	      apply 'comment'/5
		  (Rest, Handler, 'key', ['multicomment'|Stack], Config)
	  %% Line 333
	  <#{#<47>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 334
	      apply 'incomplete'/5
		  ('key', #{#<47>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 335
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 336
	      apply 'incomplete'/5
		  ('key', #{}#, Handler, Stack, Config)
	  %% Line 337
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 338
	      ( case Config of
		  ( <( {'config',_79,_80,_81,_82,_83,_84,_85,_86,_87,_88,_89,_90,_91,_92,_rec11,_93}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec11 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_12> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','key',Handler,'null',Stack}, _12)
			end
		    -| ['compiler_generated'] )
		  ( <_94> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'string'/4 =
    %% Line 343
    fun (_0,_1,_2,_3) ->
	%% Line 344
	apply 'string'/5
	    (_0, _1, [], _2, _3)
'string'/5 =
    %% Line 347
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <#{#<34>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 624
	      ( case <Rest,Handler,Acc,Stack,Config> of
		  ( <_214,_215,_216,( _217 = ( [( 'key'
						  -| ['compiler_generated'] )|_15]
					       -| ['compiler_generated'] )
				      -| ['compiler_generated'] ),_218> when ( 'true'
									       -| ['compiler_generated'] ) ->
			( let <_5> =
			      call %% Line 625
				   ( 'erlang'
				     -| ['compiler_generated'] ):%% Line 625
								 ( 'iolist_to_binary'
								   -| ['compiler_generated'] )
				  (_216)
			  in  ( let <_219> = {%% Line 625
				     ( 'key'
				       -| ['compiler_generated'] ),_5}
				in  ( case <_219,_215,_218> of
					( <Event,( {_222,State}
						   -| ['compiler_generated'] ),_X_Config> when ( 'true'
												 -| ['compiler_generated'] ) ->
					      ( let <_223> =
						    call _222:( 'handle_event'
								-| ['compiler_generated'] )
							(Event, State)
						in  ( let <_6> = {_222,_223}
						      in  %% Line 625
							  ( apply 'colon'/4
								(_214, _6, _217, _218)
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_6,_224,_225> when ( 'true'
								-| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'function_clause'
							  -| ['compiler_generated'] ),_6,_224,_225}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  %% Line 626
		  ( <_226,_227,_228,( _229 = ( [( 'singlequote'
						  -| ['compiler_generated'] )|_16]
					       -| ['compiler_generated'] )
				      -| ['compiler_generated'] ),_230> when ( 'true'
									       -| ['compiler_generated'] ) ->
			( let <_7> =
			      apply %% Line 627
				    'maybe_replace'/2
				  (%% Line 627
				   ( 34
				     -| ['compiler_generated'] ), _230)
			  in  %% Line 627
			      ( apply 'string'/5
				    (_226, _227, ( [_228|( [_7|( []
								 -| ['compiler_generated'] )]
							   -| ['compiler_generated'] )]
						   -| ['compiler_generated'] ), _229, _230)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  %% Line 628
		  ( <( #{}#
		       -| ['compiler_generated'] ),_231,_232,( _233 = ( [( 'singlequote'
									   -| ['compiler_generated'] )|_17]
									-| ['compiler_generated'] )
							       -| ['compiler_generated'] ),_234> when ( 'true'
													-| ['compiler_generated'] ) ->
			%% Line 629
			( apply 'incomplete'/6
			      (( 'string'
				 -| ['compiler_generated'] ), ( #{#<34>(8,1,'integer',['unsigned'|['big']])}#
								-| ['compiler_generated'] ), _231, _232, _233, _234)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  %% Line 630
		  ( <_235,_236,_237,_238,_239> when ( 'true'
						      -| ['compiler_generated'] ) ->
			( let <_8> =
			      call %% Line 631
				   ( 'erlang'
				     -| ['compiler_generated'] ):%% Line 631
								 ( 'iolist_to_binary'
								   -| ['compiler_generated'] )
				  (_237)
			  in  ( let <_240> = {%% Line 631
				     ( 'string'
				       -| ['compiler_generated'] ),_8}
				in  ( case <_240,_236,_239> of
					( <Event,( {_243,State}
						   -| ['compiler_generated'] ),_X_Config> when ( 'true'
												 -| ['compiler_generated'] ) ->
					      ( let <_244> =
						    call _243:( 'handle_event'
								-| ['compiler_generated'] )
							(Event, State)
						in  ( let <_9> = {_243,_244}
						      in  %% Line 631
							  ( apply 'maybe_done'/4
								(_235, _9, _238, _239)
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_6,_5,_245> when ( 'true'
							      -| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'function_clause'
							  -| ['compiler_generated'] ),_6,_5,_245}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 349
	  <#{#<39>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 634
	      ( case <Rest,Handler,Acc,Stack,Config> of
		  ( <_251,_252,_253,( [( 'singlequote'
					 -| ['compiler_generated'] )|( ( _@r0
									 -| ['compiler_generated'] ) = ( [( 'key'
													    -| ['compiler_generated'] )|_254]
													 -| ['compiler_generated'] )
								       -| ['compiler_generated'] )]
				      -| ['compiler_generated'] ),_255> when ( 'true'
									       -| ['compiler_generated'] ) ->
			( let <_5> =
			      call %% Line 635
				   ( 'erlang'
				     -| ['compiler_generated'] ):%% Line 635
								 ( 'iolist_to_binary'
								   -| ['compiler_generated'] )
				  (_253)
			  in  ( let <_256> = {%% Line 635
				     ( 'key'
				       -| ['compiler_generated'] ),_5}
				in  ( case <_256,_252,_255> of
					( <Event,( {_259,State}
						   -| ['compiler_generated'] ),_X_Config> when ( 'true'
												 -| ['compiler_generated'] ) ->
					      ( let <_260> =
						    call _259:( 'handle_event'
								-| ['compiler_generated'] )
							(Event, State)
						in  ( let <_6> = {_259,_260}
						      in  %% Line 635
							  ( apply 'colon'/4
								(_251, _6, ( _@r0
									     -| ['compiler_generated'] ), _255)
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_6,_261,_262> when ( 'true'
								-| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'function_clause'
							  -| ['compiler_generated'] ),_6,_261,_262}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  %% Line 636
		  ( <_263,_264,_265,( [( 'singlequote'
					 -| ['compiler_generated'] )|_266]
				      -| ['compiler_generated'] ),_267> when ( 'true'
									       -| ['compiler_generated'] ) ->
			( let <_7> =
			      call %% Line 637
				   ( 'erlang'
				     -| ['compiler_generated'] ):%% Line 637
								 ( 'iolist_to_binary'
								   -| ['compiler_generated'] )
				  (_265)
			  in  ( let <_268> = {%% Line 637
				     ( 'string'
				       -| ['compiler_generated'] ),_7}
				in  ( case <_268,_264,_267> of
					( <Event,( {_271,State}
						   -| ['compiler_generated'] ),_X_Config> when ( 'true'
												 -| ['compiler_generated'] ) ->
					      ( let <_272> =
						    call _271:( 'handle_event'
								-| ['compiler_generated'] )
							(Event, State)
						in  ( let <_8> = {_271,_272}
						      in  %% Line 637
							  ( apply 'maybe_done'/4
								(_263, _8, _266, _267)
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_6,_5,_273> when ( 'true'
							      -| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'function_clause'
							  -| ['compiler_generated'] ),_6,_5,_273}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  %% Line 638
		  ( <_274,_275,_276,_277,_278> when ( 'true'
						      -| ['compiler_generated'] ) ->
			%% Line 639
			( apply 'string'/5
			      (_274, _275, ( [_276|( [39]
						     -| ['compiler_generated'] )]
					     -| ['compiler_generated'] ), _277, _278)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 351
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_5> =
		  case %% Line 352
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<47>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 753
		    ( <( _281 = ( {( 'config'
				     -| ['compiler_generated'] ),_117,_118,( 'true'
									     -| ['compiler_generated'] ),_119,_120,_121,_122,_123,_124,_125,_126,_127,_128,_129,_130,_131}
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 754
			  ( case _281 of
			      ( <( {( 'config'
				      -| ['compiler_generated'] ),_132,_rec18,_133,_134,_135,_136,_137,_138,_139,_140,_141,_142,_143,_144,_145,_146}
				   -| ['compiler_generated'] )> when ( 'true'
								       -| ['compiler_generated'] ) ->
				    ( case _rec18 of
					%% Line 755
					( <( 'true'
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
						  #<47>(8,1,'integer',['unsigned'|['big']])}#
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					%% Line 756
					( <( 'false'
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      ( #{#<47>(8,1,'integer',['unsigned'|['big']])}#
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_283> when ( 'true'
							-| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'case_clause'
							  -| ['compiler_generated'] ),_283}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <_147> when ( 'true'
					      -| ['compiler_generated'] ) ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','config'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<47>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 352
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_5|[]]], Stack, Config)
	  %% Line 353
	  <#{#<92>('undefined','undefined','utf8',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 354
	      apply 'unescape'/5
		  (Rest, Handler, Acc, Stack, Config)
	  %% Line 356
	  <Bin = #{#<X>('undefined','undefined','utf8',['unsigned'|['big']]),
		   #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_34,_35,_36,_37,_38,_39,_40,_41,_42,_43,_44,_45,'true',_46,_47,_48}> when 'true' ->
	      %% Line 357
	      case X of
		%% Line 358
		<_49>
		    when call 'erlang':'<'
			  (X,
			   128) ->
		    apply 'count'/5
			(Bin, Handler, Acc, Stack, Config)
		%% Line 359
		<_52> when 'true' ->
		    let <_6> =
			apply 'json_escape_sequence'/1
			    (X)
		    in  apply 'string'/5
			    (Rest, Handler, [Acc|[_6|[]]], Stack, Config)
	      end
	  %% Line 362
	  <#{#<226>(8,1,'integer',['unsigned'|['big']]),
	     #<128>(8,1,'integer',['unsigned'|['big']]),
	     #<168>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_8> =
		  case %% Line 363
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<40>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 759
		    ( <( _292 = ( {( 'config'
				     -| ['compiler_generated'] ),_163,_164,( 'true'
									     -| ['compiler_generated'] ),_165,_166,_167,_168,_169,_170,_171,_172,_173,_174,_175,_176,_177}
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 760
			  ( case _292 of
			      ( <( {( 'config'
				      -| ['compiler_generated'] ),_178,_179,_180,_181,_182,_183,_184,_185,_186,_187,_188,_189,_190,_rec19,_191,_192}
				   -| ['compiler_generated'] )> when ( 'true'
								       -| ['compiler_generated'] ) ->
				    ( case _rec19 of
					%% Line 761
					( <( 'true'
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      ( #{#<226>(8,1,'integer',['unsigned'|['big']]),
						  #<128>(8,1,'integer',['unsigned'|['big']]),
						  #<168>(8,1,'integer',['unsigned'|['big']])}#
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					%% Line 762
					( <( 'false'
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      ( apply 'json_escape_sequence'/1
						    (( 8232
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_9> when ( 'true'
						      -| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'case_clause'
							  -| ['compiler_generated'] ),_9}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <_193> when ( 'true'
					      -| ['compiler_generated'] ) ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','config'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<226>(8,1,'integer',['unsigned'|['big']]),
			      #<128>(8,1,'integer',['unsigned'|['big']]),
			      #<168>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 363
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_8|[]]], Stack, Config)
	  %% Line 365
	  <#{#<226>(8,1,'integer',['unsigned'|['big']]),
	     #<128>(8,1,'integer',['unsigned'|['big']]),
	     #<169>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_9> =
		  case %% Line 366
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<41>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 759
		    ( <( _299 = ( {( 'config'
				     -| ['compiler_generated'] ),_163,_164,( 'true'
									     -| ['compiler_generated'] ),_165,_166,_167,_168,_169,_170,_171,_172,_173,_174,_175,_176,_177}
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 760
			  ( case _299 of
			      ( <( {( 'config'
				      -| ['compiler_generated'] ),_178,_179,_180,_181,_182,_183,_184,_185,_186,_187,_188,_189,_190,_rec19,_191,_192}
				   -| ['compiler_generated'] )> when ( 'true'
								       -| ['compiler_generated'] ) ->
				    ( case _rec19 of
					%% Line 761
					( <( 'true'
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      ( #{#<226>(8,1,'integer',['unsigned'|['big']]),
						  #<128>(8,1,'integer',['unsigned'|['big']]),
						  #<169>(8,1,'integer',['unsigned'|['big']])}#
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					%% Line 762
					( <( 'false'
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      ( apply 'json_escape_sequence'/1
						    (( 8233
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_9> when ( 'true'
						      -| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'case_clause'
							  -| ['compiler_generated'] ),_9}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <_193> when ( 'true'
					      -| ['compiler_generated'] ) ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','config'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<226>(8,1,'integer',['unsigned'|['big']]),
			      #<128>(8,1,'integer',['unsigned'|['big']]),
			      #<169>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 366
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_9|[]]], Stack, Config)
	  %% Line 367
	  <Bin = #{#<X>('undefined','undefined','utf8',['unsigned'|['big']]),
		   #<_53>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_54,_55,_56,_57,_58,_59,_60,_61,_62,'true',_63,_64,_65,_66,_67,_68}>
	      when call 'erlang':'>'
		    (X,
		     31) ->
	      %% Line 368
	      apply 'count'/5
		  (Bin, Handler, Acc, Stack, Config)
	  %% Line 369
	  <Bin = #{#<_69>('undefined','undefined','utf8',['unsigned'|['big']]),
		   #<_70>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_71,_72,_73,_74,_75,_76,_77,_78,_79,'false',_80,_81,_82,_83,_84,_85}> when 'true' ->
	      %% Line 370
	      apply 'count'/5
		  (Bin, Handler, Acc, Stack, Config)
	  %% Line 372
	  <#{#<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config','true',_86,_87,_88,_89,_90,_91,_92,_93,_94,_95,_96,_97,_98,_99,_100}> when 'true' ->
	      %% Line 373
	      apply 'string'/5
		  (Rest, Handler, [Acc|[X|[]]], Stack, Config)
	  %% Line 375
	  <#{#<239>(8,1,'integer',['unsigned'|['big']]),
	     #<191>(8,1,'integer',['unsigned'|['big']]),
	     #<190>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 376
	      apply 'string'/5
		  (Rest, Handler, [Acc|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
					  #<191>(8,1,'integer',['unsigned'|['big']]),
					  #<190>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	  %% Line 377
	  <#{#<239>(8,1,'integer',['unsigned'|['big']]),
	     #<191>(8,1,'integer',['unsigned'|['big']]),
	     #<191>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 378
	      apply 'string'/5
		  (Rest, Handler, [Acc|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
					  #<191>(8,1,'integer',['unsigned'|['big']]),
					  #<191>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	  %% Line 379
	  <#{}#,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 380
	      apply 'incomplete'/6
		  ('string', #{}#, Handler, Acc, Stack, Config)
	  %% Line 381
	  <#{#<X>(8,1,'integer',['unsigned'|['big']])}#,Handler,Acc,Stack,Config>
	      when call 'erlang':'>='
		    (X,
		     192) ->
	      let <_10> =
		  #{#<%% Line 382
		      X>(%% Line 382
			 8,1,'integer',['unsigned'|['big']])}#
	      in  %% Line 382
		  apply 'incomplete'/6
		      ('string', _10, Handler, Acc, Stack, Config)
	  %% Line 383
	  <#{#<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Y>(8,1,'integer',['unsigned'|['big']])}#,Handler,Acc,Stack,Config>
	      when let <_11> =
		    call 'erlang':'>='
			(X, 224)
		in  let <_12> =
			call 'erlang':'>='
			    (Y, 128)
		    in  call 'erlang':'and'
			    (_11, _12) ->
	      let <_13> =
		  #{#<%% Line 384
		      X>(%% Line 384
			 8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 384
		      Y>(%% Line 384
			 8,1,'integer',['unsigned'|['big']])}#
	      in  %% Line 384
		  apply 'incomplete'/6
		      ('string', _13, Handler, Acc, Stack, Config)
	  %% Line 385
	  <#{#<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Y>(8,1,'integer',['unsigned'|['big']]),
	     #<Z>(8,1,'integer',['unsigned'|['big']])}#,Handler,Acc,Stack,Config>
	      when %% Line 386
		try
		    let <_14> =
			call 'erlang':'>='
			    (X, 224)
		    in  let <_15> =
			    call 'erlang':'>='
				(Y, 128)
			in  let <_16> =
				call 'erlang':'>='
				    (Z, 128)
			    in  let <_17> =
				    call 'erlang':'and'
					(_15, _16)
				in  call 'erlang':'and'
					(_14, _17)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_18> =
		  #{#<%% Line 387
		      X>(%% Line 387
			 8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 387
		      Y>(%% Line 387
			 8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 387
		      Z>(%% Line 387
			 8,1,'integer',['unsigned'|['big']])}#
	      in  %% Line 387
		  apply 'incomplete'/6
		      ('string', _18, Handler, Acc, Stack, Config)
	  %% Line 389
	  <#{#<237>(8,1,'integer',['unsigned'|['big']]),
	     #<X>(8,1,'integer',['unsigned'|['big']]),
	     #<_101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_102,_103,_104,_105,_106,_107,'false',_108,_109,_110,_111,_112,_113,_114,_115,_116}>
	      when %% Line 390
		call 'erlang':'>='
		    (X,
		     160) ->
	      %% Line 391
	      apply 'string'/5
		  (Rest, Handler, [Acc|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
					  #<191>(8,1,'integer',['unsigned'|['big']]),
					  #<189>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	  %% Line 393
	  <#{#<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_117,_118,_119,_120,_121,_122,'false',_123,_124,_125,_126,_127,_128,_129,_130,_131}>
	      when let <_19> =
		    call %% Line 394
			 'erlang':%% Line 394
				  '>='
			(%% Line 394
			 X, %% Line 394
			    192)
		in  let <_20> =
			call %% Line 394
			     'erlang':%% Line 394
				      '=<'
			    (%% Line 394
			     X, %% Line 394
				223)
		    in  %% Line 394
			call 'erlang':'and'
			    (_19, _20) ->
	      %% Line 395
	      apply 'strip_continuations'/6
		  (Rest, Handler, Acc, Stack, Config, 1)
	  %% Line 397
	  <#{#<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_132,_133,_134,_135,_136,_137,'false',_138,_139,_140,_141,_142,_143,_144,_145,_146}>
	      when let <_21> =
		    call %% Line 398
			 'erlang':%% Line 398
				  '>='
			(%% Line 398
			 X, %% Line 398
			    224)
		in  let <_22> =
			call %% Line 398
			     'erlang':%% Line 398
				      '=<'
			    (%% Line 398
			     X, %% Line 398
				239)
		    in  %% Line 398
			call 'erlang':'and'
			    (_21, _22) ->
	      %% Line 399
	      apply 'strip_continuations'/6
		  (Rest, Handler, Acc, Stack, Config, 2)
	  %% Line 401
	  <#{#<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_147,_148,_149,_150,_151,_152,'false',_153,_154,_155,_156,_157,_158,_159,_160,_161}>
	      when let <_23> =
		    call %% Line 402
			 'erlang':%% Line 402
				  '>='
			(%% Line 402
			 X, %% Line 402
			    240)
		in  let <_24> =
			call %% Line 402
			     'erlang':%% Line 402
				      '=<'
			    (%% Line 402
			     X, %% Line 402
				247)
		    in  %% Line 402
			call 'erlang':'and'
			    (_23, _24) ->
	      %% Line 403
	      apply 'strip_continuations'/6
		  (Rest, Handler, Acc, Stack, Config, 3)
	  %% Line 405
	  <#{#<_162>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_163,_164,_165,_166,_167,_168,'false',_169,_170,_171,_172,_173,_174,_175,_176,_177}> when 'true' ->
	      %% Line 406
	      apply 'string'/5
		  (Rest, Handler, [Acc|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
					  #<191>(8,1,'integer',['unsigned'|['big']]),
					  #<189>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	  %% Line 407
	  <Bin,Handler,Acc,Stack,Config> when 'true' ->
	      ( case Config of
		  ( <( {'config',_178,_179,_180,_181,_182,_183,_184,_185,_186,_187,_188,_189,_190,_191,_rec12,_192}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec12 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_27> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','string',Handler,Acc,Stack}, _27)
			end
		    -| ['compiler_generated'] )
		  ( <_193> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'count'/5 =
    %% Line 410
    fun (_0,_1,_2,_3,_4) ->
	let <Size> =
	    apply %% Line 411
		  'count'/3
		(_0, %% Line 411
		     0, _4)
	in  %% Line 412
	    case _0 of
	      <#{#<Clean>(Size,8,'binary',['unsigned'|['big']]),
		 #<Rest>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
		  %% Line 413
		  apply 'string'/5
		      (Rest, _1, [_2|[Clean|[]]], _3, _4)
	      ( <_6> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_6})
		-| ['compiler_generated'] )
	    end
'count'/3 =
    %% Line 418
    fun (_0,_1,_2) ->
	case <_0,_1,_2> of
	  <#{#<32>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_3> =
		  call %% Line 419
		       'erlang':%% Line 419
				'+'
		      (%% Line 419
		       N, %% Line 419
			  1)
	      in  %% Line 419
		  apply 'count'/3
		      (Rest, _3, Config)
	  %% Line 420
	  <#{#<33>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_4> =
		  call %% Line 421
		       'erlang':%% Line 421
				'+'
		      (%% Line 421
		       N, %% Line 421
			  1)
	      in  %% Line 421
		  apply 'count'/3
		      (Rest, _4, Config)
	  %% Line 422
	  <#{#<34>(8,1,'integer',['unsigned'|['big']]),
	     #<_104>('all',8,'binary',['unsigned'|['big']])}#,N,_105> when 'true' ->
	      N
	  %% Line 423
	  <#{#<35>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_5> =
		  call %% Line 424
		       'erlang':%% Line 424
				'+'
		      (%% Line 424
		       N, %% Line 424
			  1)
	      in  %% Line 424
		  apply 'count'/3
		      (Rest, _5, Config)
	  %% Line 425
	  <#{#<36>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_6> =
		  call %% Line 426
		       'erlang':%% Line 426
				'+'
		      (%% Line 426
		       N, %% Line 426
			  1)
	      in  %% Line 426
		  apply 'count'/3
		      (Rest, _6, Config)
	  %% Line 427
	  <#{#<37>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_7> =
		  call %% Line 428
		       'erlang':%% Line 428
				'+'
		      (%% Line 428
		       N, %% Line 428
			  1)
	      in  %% Line 428
		  apply 'count'/3
		      (Rest, _7, Config)
	  %% Line 429
	  <#{#<38>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_8> =
		  call %% Line 430
		       'erlang':%% Line 430
				'+'
		      (%% Line 430
		       N, %% Line 430
			  1)
	      in  %% Line 430
		  apply 'count'/3
		      (Rest, _8, Config)
	  %% Line 431
	  <#{#<39>(8,1,'integer',['unsigned'|['big']]),
	     #<_106>('all',8,'binary',['unsigned'|['big']])}#,N,_107> when 'true' ->
	      N
	  %% Line 432
	  <#{#<40>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_9> =
		  call %% Line 433
		       'erlang':%% Line 433
				'+'
		      (%% Line 433
		       N, %% Line 433
			  1)
	      in  %% Line 433
		  apply 'count'/3
		      (Rest, _9, Config)
	  %% Line 434
	  <#{#<41>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_10> =
		  call %% Line 435
		       'erlang':%% Line 435
				'+'
		      (%% Line 435
		       N, %% Line 435
			  1)
	      in  %% Line 435
		  apply 'count'/3
		      (Rest, _10, Config)
	  %% Line 436
	  <#{#<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_11> =
		  call %% Line 437
		       'erlang':%% Line 437
				'+'
		      (%% Line 437
		       N, %% Line 437
			  1)
	      in  %% Line 437
		  apply 'count'/3
		      (Rest, _11, Config)
	  %% Line 438
	  <#{#<43>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_12> =
		  call %% Line 439
		       'erlang':%% Line 439
				'+'
		      (%% Line 439
		       N, %% Line 439
			  1)
	      in  %% Line 439
		  apply 'count'/3
		      (Rest, _12, Config)
	  %% Line 440
	  <#{#<44>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_13> =
		  call %% Line 441
		       'erlang':%% Line 441
				'+'
		      (%% Line 441
		       N, %% Line 441
			  1)
	      in  %% Line 441
		  apply 'count'/3
		      (Rest, _13, Config)
	  %% Line 442
	  <#{#<45>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_14> =
		  call %% Line 443
		       'erlang':%% Line 443
				'+'
		      (%% Line 443
		       N, %% Line 443
			  1)
	      in  %% Line 443
		  apply 'count'/3
		      (Rest, _14, Config)
	  %% Line 444
	  <#{#<46>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_15> =
		  call %% Line 445
		       'erlang':%% Line 445
				'+'
		      (%% Line 445
		       N, %% Line 445
			  1)
	      in  %% Line 445
		  apply 'count'/3
		      (Rest, _15, Config)
	  %% Line 446
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<_108>('all',8,'binary',['unsigned'|['big']])}#,N,_109> when 'true' ->
	      N
	  %% Line 447
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_16> =
		  call %% Line 448
		       'erlang':%% Line 448
				'+'
		      (%% Line 448
		       N, %% Line 448
			  1)
	      in  %% Line 448
		  apply 'count'/3
		      (Rest, _16, Config)
	  %% Line 449
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_17> =
		  call %% Line 450
		       'erlang':%% Line 450
				'+'
		      (%% Line 450
		       N, %% Line 450
			  1)
	      in  %% Line 450
		  apply 'count'/3
		      (Rest, _17, Config)
	  %% Line 451
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_18> =
		  call %% Line 452
		       'erlang':%% Line 452
				'+'
		      (%% Line 452
		       N, %% Line 452
			  1)
	      in  %% Line 452
		  apply 'count'/3
		      (Rest, _18, Config)
	  %% Line 453
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_19> =
		  call %% Line 454
		       'erlang':%% Line 454
				'+'
		      (%% Line 454
		       N, %% Line 454
			  1)
	      in  %% Line 454
		  apply 'count'/3
		      (Rest, _19, Config)
	  %% Line 455
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_20> =
		  call %% Line 456
		       'erlang':%% Line 456
				'+'
		      (%% Line 456
		       N, %% Line 456
			  1)
	      in  %% Line 456
		  apply 'count'/3
		      (Rest, _20, Config)
	  %% Line 457
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_21> =
		  call %% Line 458
		       'erlang':%% Line 458
				'+'
		      (%% Line 458
		       N, %% Line 458
			  1)
	      in  %% Line 458
		  apply 'count'/3
		      (Rest, _21, Config)
	  %% Line 459
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_22> =
		  call %% Line 460
		       'erlang':%% Line 460
				'+'
		      (%% Line 460
		       N, %% Line 460
			  1)
	      in  %% Line 460
		  apply 'count'/3
		      (Rest, _22, Config)
	  %% Line 461
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_23> =
		  call %% Line 462
		       'erlang':%% Line 462
				'+'
		      (%% Line 462
		       N, %% Line 462
			  1)
	      in  %% Line 462
		  apply 'count'/3
		      (Rest, _23, Config)
	  %% Line 463
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_24> =
		  call %% Line 464
		       'erlang':%% Line 464
				'+'
		      (%% Line 464
		       N, %% Line 464
			  1)
	      in  %% Line 464
		  apply 'count'/3
		      (Rest, _24, Config)
	  %% Line 465
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_25> =
		  call %% Line 466
		       'erlang':%% Line 466
				'+'
		      (%% Line 466
		       N, %% Line 466
			  1)
	      in  %% Line 466
		  apply 'count'/3
		      (Rest, _25, Config)
	  %% Line 467
	  <#{#<58>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_26> =
		  call %% Line 468
		       'erlang':%% Line 468
				'+'
		      (%% Line 468
		       N, %% Line 468
			  1)
	      in  %% Line 468
		  apply 'count'/3
		      (Rest, _26, Config)
	  %% Line 469
	  <#{#<59>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_27> =
		  call %% Line 470
		       'erlang':%% Line 470
				'+'
		      (%% Line 470
		       N, %% Line 470
			  1)
	      in  %% Line 470
		  apply 'count'/3
		      (Rest, _27, Config)
	  %% Line 471
	  <#{#<60>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_28> =
		  call %% Line 472
		       'erlang':%% Line 472
				'+'
		      (%% Line 472
		       N, %% Line 472
			  1)
	      in  %% Line 472
		  apply 'count'/3
		      (Rest, _28, Config)
	  %% Line 473
	  <#{#<61>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_29> =
		  call %% Line 474
		       'erlang':%% Line 474
				'+'
		      (%% Line 474
		       N, %% Line 474
			  1)
	      in  %% Line 474
		  apply 'count'/3
		      (Rest, _29, Config)
	  %% Line 475
	  <#{#<62>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_30> =
		  call %% Line 476
		       'erlang':%% Line 476
				'+'
		      (%% Line 476
		       N, %% Line 476
			  1)
	      in  %% Line 476
		  apply 'count'/3
		      (Rest, _30, Config)
	  %% Line 477
	  <#{#<63>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_31> =
		  call %% Line 478
		       'erlang':%% Line 478
				'+'
		      (%% Line 478
		       N, %% Line 478
			  1)
	      in  %% Line 478
		  apply 'count'/3
		      (Rest, _31, Config)
	  %% Line 479
	  <#{#<64>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_32> =
		  call %% Line 480
		       'erlang':%% Line 480
				'+'
		      (%% Line 480
		       N, %% Line 480
			  1)
	      in  %% Line 480
		  apply 'count'/3
		      (Rest, _32, Config)
	  %% Line 481
	  <#{#<65>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_33> =
		  call %% Line 482
		       'erlang':%% Line 482
				'+'
		      (%% Line 482
		       N, %% Line 482
			  1)
	      in  %% Line 482
		  apply 'count'/3
		      (Rest, _33, Config)
	  %% Line 483
	  <#{#<66>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_34> =
		  call %% Line 484
		       'erlang':%% Line 484
				'+'
		      (%% Line 484
		       N, %% Line 484
			  1)
	      in  %% Line 484
		  apply 'count'/3
		      (Rest, _34, Config)
	  %% Line 485
	  <#{#<67>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_35> =
		  call %% Line 486
		       'erlang':%% Line 486
				'+'
		      (%% Line 486
		       N, %% Line 486
			  1)
	      in  %% Line 486
		  apply 'count'/3
		      (Rest, _35, Config)
	  %% Line 487
	  <#{#<68>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_36> =
		  call %% Line 488
		       'erlang':%% Line 488
				'+'
		      (%% Line 488
		       N, %% Line 488
			  1)
	      in  %% Line 488
		  apply 'count'/3
		      (Rest, _36, Config)
	  %% Line 489
	  <#{#<69>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_37> =
		  call %% Line 490
		       'erlang':%% Line 490
				'+'
		      (%% Line 490
		       N, %% Line 490
			  1)
	      in  %% Line 490
		  apply 'count'/3
		      (Rest, _37, Config)
	  %% Line 491
	  <#{#<70>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_38> =
		  call %% Line 492
		       'erlang':%% Line 492
				'+'
		      (%% Line 492
		       N, %% Line 492
			  1)
	      in  %% Line 492
		  apply 'count'/3
		      (Rest, _38, Config)
	  %% Line 493
	  <#{#<71>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_39> =
		  call %% Line 494
		       'erlang':%% Line 494
				'+'
		      (%% Line 494
		       N, %% Line 494
			  1)
	      in  %% Line 494
		  apply 'count'/3
		      (Rest, _39, Config)
	  %% Line 495
	  <#{#<72>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_40> =
		  call %% Line 496
		       'erlang':%% Line 496
				'+'
		      (%% Line 496
		       N, %% Line 496
			  1)
	      in  %% Line 496
		  apply 'count'/3
		      (Rest, _40, Config)
	  %% Line 497
	  <#{#<73>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_41> =
		  call %% Line 498
		       'erlang':%% Line 498
				'+'
		      (%% Line 498
		       N, %% Line 498
			  1)
	      in  %% Line 498
		  apply 'count'/3
		      (Rest, _41, Config)
	  %% Line 499
	  <#{#<74>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_42> =
		  call %% Line 500
		       'erlang':%% Line 500
				'+'
		      (%% Line 500
		       N, %% Line 500
			  1)
	      in  %% Line 500
		  apply 'count'/3
		      (Rest, _42, Config)
	  %% Line 501
	  <#{#<75>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_43> =
		  call %% Line 502
		       'erlang':%% Line 502
				'+'
		      (%% Line 502
		       N, %% Line 502
			  1)
	      in  %% Line 502
		  apply 'count'/3
		      (Rest, _43, Config)
	  %% Line 503
	  <#{#<76>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_44> =
		  call %% Line 504
		       'erlang':%% Line 504
				'+'
		      (%% Line 504
		       N, %% Line 504
			  1)
	      in  %% Line 504
		  apply 'count'/3
		      (Rest, _44, Config)
	  %% Line 505
	  <#{#<77>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_45> =
		  call %% Line 506
		       'erlang':%% Line 506
				'+'
		      (%% Line 506
		       N, %% Line 506
			  1)
	      in  %% Line 506
		  apply 'count'/3
		      (Rest, _45, Config)
	  %% Line 507
	  <#{#<78>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_46> =
		  call %% Line 508
		       'erlang':%% Line 508
				'+'
		      (%% Line 508
		       N, %% Line 508
			  1)
	      in  %% Line 508
		  apply 'count'/3
		      (Rest, _46, Config)
	  %% Line 509
	  <#{#<79>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_47> =
		  call %% Line 510
		       'erlang':%% Line 510
				'+'
		      (%% Line 510
		       N, %% Line 510
			  1)
	      in  %% Line 510
		  apply 'count'/3
		      (Rest, _47, Config)
	  %% Line 511
	  <#{#<80>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_48> =
		  call %% Line 512
		       'erlang':%% Line 512
				'+'
		      (%% Line 512
		       N, %% Line 512
			  1)
	      in  %% Line 512
		  apply 'count'/3
		      (Rest, _48, Config)
	  %% Line 513
	  <#{#<81>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_49> =
		  call %% Line 514
		       'erlang':%% Line 514
				'+'
		      (%% Line 514
		       N, %% Line 514
			  1)
	      in  %% Line 514
		  apply 'count'/3
		      (Rest, _49, Config)
	  %% Line 515
	  <#{#<82>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_50> =
		  call %% Line 516
		       'erlang':%% Line 516
				'+'
		      (%% Line 516
		       N, %% Line 516
			  1)
	      in  %% Line 516
		  apply 'count'/3
		      (Rest, _50, Config)
	  %% Line 517
	  <#{#<83>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_51> =
		  call %% Line 518
		       'erlang':%% Line 518
				'+'
		      (%% Line 518
		       N, %% Line 518
			  1)
	      in  %% Line 518
		  apply 'count'/3
		      (Rest, _51, Config)
	  %% Line 519
	  <#{#<84>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_52> =
		  call %% Line 520
		       'erlang':%% Line 520
				'+'
		      (%% Line 520
		       N, %% Line 520
			  1)
	      in  %% Line 520
		  apply 'count'/3
		      (Rest, _52, Config)
	  %% Line 521
	  <#{#<85>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_53> =
		  call %% Line 522
		       'erlang':%% Line 522
				'+'
		      (%% Line 522
		       N, %% Line 522
			  1)
	      in  %% Line 522
		  apply 'count'/3
		      (Rest, _53, Config)
	  %% Line 523
	  <#{#<86>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_54> =
		  call %% Line 524
		       'erlang':%% Line 524
				'+'
		      (%% Line 524
		       N, %% Line 524
			  1)
	      in  %% Line 524
		  apply 'count'/3
		      (Rest, _54, Config)
	  %% Line 525
	  <#{#<87>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_55> =
		  call %% Line 526
		       'erlang':%% Line 526
				'+'
		      (%% Line 526
		       N, %% Line 526
			  1)
	      in  %% Line 526
		  apply 'count'/3
		      (Rest, _55, Config)
	  %% Line 527
	  <#{#<88>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_56> =
		  call %% Line 528
		       'erlang':%% Line 528
				'+'
		      (%% Line 528
		       N, %% Line 528
			  1)
	      in  %% Line 528
		  apply 'count'/3
		      (Rest, _56, Config)
	  %% Line 529
	  <#{#<89>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_57> =
		  call %% Line 530
		       'erlang':%% Line 530
				'+'
		      (%% Line 530
		       N, %% Line 530
			  1)
	      in  %% Line 530
		  apply 'count'/3
		      (Rest, _57, Config)
	  %% Line 531
	  <#{#<90>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_58> =
		  call %% Line 532
		       'erlang':%% Line 532
				'+'
		      (%% Line 532
		       N, %% Line 532
			  1)
	      in  %% Line 532
		  apply 'count'/3
		      (Rest, _58, Config)
	  %% Line 533
	  <#{#<91>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_59> =
		  call %% Line 534
		       'erlang':%% Line 534
				'+'
		      (%% Line 534
		       N, %% Line 534
			  1)
	      in  %% Line 534
		  apply 'count'/3
		      (Rest, _59, Config)
	  %% Line 535
	  <#{#<92>(8,1,'integer',['unsigned'|['big']]),
	     #<_110>('all',8,'binary',['unsigned'|['big']])}#,N,_111> when 'true' ->
	      N
	  %% Line 536
	  <#{#<93>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_60> =
		  call %% Line 537
		       'erlang':%% Line 537
				'+'
		      (%% Line 537
		       N, %% Line 537
			  1)
	      in  %% Line 537
		  apply 'count'/3
		      (Rest, _60, Config)
	  %% Line 538
	  <#{#<94>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_61> =
		  call %% Line 539
		       'erlang':%% Line 539
				'+'
		      (%% Line 539
		       N, %% Line 539
			  1)
	      in  %% Line 539
		  apply 'count'/3
		      (Rest, _61, Config)
	  %% Line 540
	  <#{#<95>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_62> =
		  call %% Line 541
		       'erlang':%% Line 541
				'+'
		      (%% Line 541
		       N, %% Line 541
			  1)
	      in  %% Line 541
		  apply 'count'/3
		      (Rest, _62, Config)
	  %% Line 542
	  <#{#<96>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_63> =
		  call %% Line 543
		       'erlang':%% Line 543
				'+'
		      (%% Line 543
		       N, %% Line 543
			  1)
	      in  %% Line 543
		  apply 'count'/3
		      (Rest, _63, Config)
	  %% Line 544
	  <#{#<97>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_64> =
		  call %% Line 545
		       'erlang':%% Line 545
				'+'
		      (%% Line 545
		       N, %% Line 545
			  1)
	      in  %% Line 545
		  apply 'count'/3
		      (Rest, _64, Config)
	  %% Line 546
	  <#{#<98>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_65> =
		  call %% Line 547
		       'erlang':%% Line 547
				'+'
		      (%% Line 547
		       N, %% Line 547
			  1)
	      in  %% Line 547
		  apply 'count'/3
		      (Rest, _65, Config)
	  %% Line 548
	  <#{#<99>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_66> =
		  call %% Line 549
		       'erlang':%% Line 549
				'+'
		      (%% Line 549
		       N, %% Line 549
			  1)
	      in  %% Line 549
		  apply 'count'/3
		      (Rest, _66, Config)
	  %% Line 550
	  <#{#<100>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_67> =
		  call %% Line 551
		       'erlang':%% Line 551
				'+'
		      (%% Line 551
		       N, %% Line 551
			  1)
	      in  %% Line 551
		  apply 'count'/3
		      (Rest, _67, Config)
	  %% Line 552
	  <#{#<101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_68> =
		  call %% Line 553
		       'erlang':%% Line 553
				'+'
		      (%% Line 553
		       N, %% Line 553
			  1)
	      in  %% Line 553
		  apply 'count'/3
		      (Rest, _68, Config)
	  %% Line 554
	  <#{#<102>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_69> =
		  call %% Line 555
		       'erlang':%% Line 555
				'+'
		      (%% Line 555
		       N, %% Line 555
			  1)
	      in  %% Line 555
		  apply 'count'/3
		      (Rest, _69, Config)
	  %% Line 556
	  <#{#<103>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_70> =
		  call %% Line 557
		       'erlang':%% Line 557
				'+'
		      (%% Line 557
		       N, %% Line 557
			  1)
	      in  %% Line 557
		  apply 'count'/3
		      (Rest, _70, Config)
	  %% Line 558
	  <#{#<104>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_71> =
		  call %% Line 559
		       'erlang':%% Line 559
				'+'
		      (%% Line 559
		       N, %% Line 559
			  1)
	      in  %% Line 559
		  apply 'count'/3
		      (Rest, _71, Config)
	  %% Line 560
	  <#{#<105>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_72> =
		  call %% Line 561
		       'erlang':%% Line 561
				'+'
		      (%% Line 561
		       N, %% Line 561
			  1)
	      in  %% Line 561
		  apply 'count'/3
		      (Rest, _72, Config)
	  %% Line 562
	  <#{#<106>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_73> =
		  call %% Line 563
		       'erlang':%% Line 563
				'+'
		      (%% Line 563
		       N, %% Line 563
			  1)
	      in  %% Line 563
		  apply 'count'/3
		      (Rest, _73, Config)
	  %% Line 564
	  <#{#<107>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_74> =
		  call %% Line 565
		       'erlang':%% Line 565
				'+'
		      (%% Line 565
		       N, %% Line 565
			  1)
	      in  %% Line 565
		  apply 'count'/3
		      (Rest, _74, Config)
	  %% Line 566
	  <#{#<108>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_75> =
		  call %% Line 567
		       'erlang':%% Line 567
				'+'
		      (%% Line 567
		       N, %% Line 567
			  1)
	      in  %% Line 567
		  apply 'count'/3
		      (Rest, _75, Config)
	  %% Line 568
	  <#{#<109>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_76> =
		  call %% Line 569
		       'erlang':%% Line 569
				'+'
		      (%% Line 569
		       N, %% Line 569
			  1)
	      in  %% Line 569
		  apply 'count'/3
		      (Rest, _76, Config)
	  %% Line 570
	  <#{#<110>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_77> =
		  call %% Line 571
		       'erlang':%% Line 571
				'+'
		      (%% Line 571
		       N, %% Line 571
			  1)
	      in  %% Line 571
		  apply 'count'/3
		      (Rest, _77, Config)
	  %% Line 572
	  <#{#<111>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_78> =
		  call %% Line 573
		       'erlang':%% Line 573
				'+'
		      (%% Line 573
		       N, %% Line 573
			  1)
	      in  %% Line 573
		  apply 'count'/3
		      (Rest, _78, Config)
	  %% Line 574
	  <#{#<112>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_79> =
		  call %% Line 575
		       'erlang':%% Line 575
				'+'
		      (%% Line 575
		       N, %% Line 575
			  1)
	      in  %% Line 575
		  apply 'count'/3
		      (Rest, _79, Config)
	  %% Line 576
	  <#{#<113>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_80> =
		  call %% Line 577
		       'erlang':%% Line 577
				'+'
		      (%% Line 577
		       N, %% Line 577
			  1)
	      in  %% Line 577
		  apply 'count'/3
		      (Rest, _80, Config)
	  %% Line 578
	  <#{#<114>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_81> =
		  call %% Line 579
		       'erlang':%% Line 579
				'+'
		      (%% Line 579
		       N, %% Line 579
			  1)
	      in  %% Line 579
		  apply 'count'/3
		      (Rest, _81, Config)
	  %% Line 580
	  <#{#<115>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_82> =
		  call %% Line 581
		       'erlang':%% Line 581
				'+'
		      (%% Line 581
		       N, %% Line 581
			  1)
	      in  %% Line 581
		  apply 'count'/3
		      (Rest, _82, Config)
	  %% Line 582
	  <#{#<116>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_83> =
		  call %% Line 583
		       'erlang':%% Line 583
				'+'
		      (%% Line 583
		       N, %% Line 583
			  1)
	      in  %% Line 583
		  apply 'count'/3
		      (Rest, _83, Config)
	  %% Line 584
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_84> =
		  call %% Line 585
		       'erlang':%% Line 585
				'+'
		      (%% Line 585
		       N, %% Line 585
			  1)
	      in  %% Line 585
		  apply 'count'/3
		      (Rest, _84, Config)
	  %% Line 586
	  <#{#<118>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_85> =
		  call %% Line 587
		       'erlang':%% Line 587
				'+'
		      (%% Line 587
		       N, %% Line 587
			  1)
	      in  %% Line 587
		  apply 'count'/3
		      (Rest, _85, Config)
	  %% Line 588
	  <#{#<119>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_86> =
		  call %% Line 589
		       'erlang':%% Line 589
				'+'
		      (%% Line 589
		       N, %% Line 589
			  1)
	      in  %% Line 589
		  apply 'count'/3
		      (Rest, _86, Config)
	  %% Line 590
	  <#{#<120>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_87> =
		  call %% Line 591
		       'erlang':%% Line 591
				'+'
		      (%% Line 591
		       N, %% Line 591
			  1)
	      in  %% Line 591
		  apply 'count'/3
		      (Rest, _87, Config)
	  %% Line 592
	  <#{#<121>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_88> =
		  call %% Line 593
		       'erlang':%% Line 593
				'+'
		      (%% Line 593
		       N, %% Line 593
			  1)
	      in  %% Line 593
		  apply 'count'/3
		      (Rest, _88, Config)
	  %% Line 594
	  <#{#<122>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_89> =
		  call %% Line 595
		       'erlang':%% Line 595
				'+'
		      (%% Line 595
		       N, %% Line 595
			  1)
	      in  %% Line 595
		  apply 'count'/3
		      (Rest, _89, Config)
	  %% Line 596
	  <#{#<123>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_90> =
		  call %% Line 597
		       'erlang':%% Line 597
				'+'
		      (%% Line 597
		       N, %% Line 597
			  1)
	      in  %% Line 597
		  apply 'count'/3
		      (Rest, _90, Config)
	  %% Line 598
	  <#{#<124>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_91> =
		  call %% Line 599
		       'erlang':%% Line 599
				'+'
		      (%% Line 599
		       N, %% Line 599
			  1)
	      in  %% Line 599
		  apply 'count'/3
		      (Rest, _91, Config)
	  %% Line 600
	  <#{#<125>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_92> =
		  call %% Line 601
		       'erlang':%% Line 601
				'+'
		      (%% Line 601
		       N, %% Line 601
			  1)
	      in  %% Line 601
		  apply 'count'/3
		      (Rest, _92, Config)
	  %% Line 602
	  <#{#<126>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_93> =
		  call %% Line 603
		       'erlang':%% Line 603
				'+'
		      (%% Line 603
		       N, %% Line 603
			  1)
	      in  %% Line 603
		  apply 'count'/3
		      (Rest, _93, Config)
	  %% Line 604
	  <#{#<127>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      let <_94> =
		  call %% Line 605
		       'erlang':%% Line 605
				'+'
		      (%% Line 605
		       N, %% Line 605
			  1)
	      in  %% Line 605
		  apply 'count'/3
		      (Rest, _94, Config)
	  %% Line 606
	  <#{#<_112>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config = {'config','true',_113,_114,_115,_116,_117,_118,_119,_120,_121,_122,_123,_124,_125,_126,_127}> when 'true' ->
	      let <_95> =
		  call %% Line 607
		       'erlang':%% Line 607
				'+'
		      (%% Line 607
		       N, %% Line 607
			  1)
	      in  %% Line 607
		  apply 'count'/3
		      (Rest, _95, Config)
	  %% Line 608
	  <#{#<_128>('undefined','undefined','utf8',['unsigned'|['big']]),
	     #<_129>('all',8,'binary',['unsigned'|['big']])}#,N,{'config',_130,_131,_132,_133,_134,_135,_136,_137,_138,_139,_140,_141,'true',_142,_143,_144}> when 'true' ->
	      N
	  %% Line 609
	  <#{#<X>('undefined','undefined','utf8',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config = {'config',_145,_146,_147,_148,_149,_150,_151,_152,_153,'false',_154,_155,_156,_157,_158,_159}>
	      when call 'erlang':'<'
		    (X,
		     32) ->
	      let <_96> =
		  call %% Line 610
		       'erlang':%% Line 610
				'+'
		      (%% Line 610
		       N, %% Line 610
			  1)
	      in  %% Line 610
		  apply 'count'/3
		      (Rest, _96, Config)
	  %% Line 611
	  <#{#<X>('undefined','undefined','utf8',['unsigned'|['big']]),
	     #<_160>('all',8,'binary',['unsigned'|['big']])}#,N,{'config',_161,_162,_163,_164,_165,_166,_167,_168,_169,'true',_170,_171,_172,_173,_174,_175}>
	      when call 'erlang':'<'
		    (X,
		     32) ->
	      N
	  %% Line 612
	  <#{#<X>('undefined','undefined','utf8',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N,Config> when 'true' ->
	      %% Line 613
	      case X of
		%% Line 614
		<_176>
		    when call 'erlang':'<'
			  (X,
			   2048) ->
		    let <_97> =
			call 'erlang':'+'
			    (N, 2)
		    in  apply 'count'/3
			    (Rest, _97, Config)
		%% Line 616
		<8232> when 'true' ->
		    N
		%% Line 617
		<8233> when 'true' ->
		    N
		%% Line 618
		<_179>
		    when call 'erlang':'<'
			  (X,
			   65536) ->
		    let <_98> =
			call 'erlang':'+'
			    (N, 3)
		    in  apply 'count'/3
			    (Rest, _98, Config)
		%% Line 619
		<_182> when 'true' ->
		    let <_99> =
			call 'erlang':'+'
			    (N, 4)
		    in  apply 'count'/3
			    (Rest, _99, Config)
	      end
	  %% Line 621
	  <_183,N,_184> when 'true' ->
	      N
	end
'doublequote'/5 =
    %% Line 624
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <Rest,Handler,Acc,Stack = ['key'|_15],Config> when 'true' ->
	      let <_5> =
		  call %% Line 625
		       'erlang':%% Line 625
				'iolist_to_binary'
		      (%% Line 625
		       Acc)
	      in  let <_209> = {%% Line 625
		       ( 'key'
			 -| ['compiler_generated'] ),_5}
		  in  ( case <_209,%% Line 625
				   Handler,%% Line 625
					   Config> of
			  ( <Event,( {_212,State}
				     -| ['compiler_generated'] ),_X_Config> when ( 'true'
										   -| ['compiler_generated'] ) ->
				( let <_213> =
				      call _212:( 'handle_event'
						  -| ['compiler_generated'] )
					  (Event, State)
				  in  let <_6> = {_212,_213}
				      in  %% Line 625
					  apply 'colon'/4
					      (Rest, _6, Stack, Config)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_6,_214,_215> when ( 'true'
						  -| ['compiler_generated'] ) ->
				( primop ( 'match_fail'
					   -| ['compiler_generated'] )
				      (( {( 'function_clause'
					    -| ['compiler_generated'] ),_6,_214,_215}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 626
	  <Rest,Handler,Acc,Stack = ['singlequote'|_16],Config> when 'true' ->
	      let <_7> =
		  case %% Line 627
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_218,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<34>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 752
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_102,_103,( 'true'
								    -| ['compiler_generated'] ),_104,_105,_106,_107,_108,_109,_110,_111,_112,_113,_114,_115,_116}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
			      #<34>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<34>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 627
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_7|[]]], Stack, Config)
	  %% Line 628
	  <#{}#,Handler,Acc,Stack = ['singlequote'|_17],Config> when 'true' ->
	      %% Line 629
	      apply 'incomplete'/6
		  ('string', #{#<34>(8,1,'integer',['unsigned'|['big']])}#, Handler, Acc, Stack, Config)
	  %% Line 630
	  <Rest,Handler,Acc,Stack,Config> when 'true' ->
	      let <_8> =
		  call %% Line 631
		       'erlang':%% Line 631
				'iolist_to_binary'
		      (%% Line 631
		       Acc)
	      in  let <_224> = {%% Line 631
		       ( 'string'
			 -| ['compiler_generated'] ),_8}
		  in  ( case <_224,%% Line 631
				   Handler,%% Line 631
					   Config> of
			  ( <Event,( {_227,State}
				     -| ['compiler_generated'] ),_X_Config> when ( 'true'
										   -| ['compiler_generated'] ) ->
				( let <_228> =
				      call _227:( 'handle_event'
						  -| ['compiler_generated'] )
					  (Event, State)
				  in  let <_9> = {_227,_228}
				      in  %% Line 631
					  apply 'maybe_done'/4
					      (Rest, _9, Stack, Config)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_6,_5,_229> when ( 'true'
						-| ['compiler_generated'] ) ->
				( primop ( 'match_fail'
					   -| ['compiler_generated'] )
				      (( {( 'function_clause'
					    -| ['compiler_generated'] ),_6,_5,_229}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	end
'singlequote'/5 =
    %% Line 634
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <Rest,Handler,Acc,['singlequote'|_@r0 = ['key'|Stack]],Config> when 'true' ->
	      let <_5> =
		  call %% Line 635
		       'erlang':%% Line 635
				'iolist_to_binary'
		      (%% Line 635
		       Acc)
	      in  let <_14> = {%% Line 635
		       ( 'key'
			 -| ['compiler_generated'] ),_5}
		  in  ( case <_14,%% Line 635
				  Handler,%% Line 635
					  Config> of
			  ( <Event,( {_17,State}
				     -| ['compiler_generated'] ),_X_Config> when ( 'true'
										   -| ['compiler_generated'] ) ->
				( let <_18> =
				      call _17:( 'handle_event'
						 -| ['compiler_generated'] )
					  (Event, State)
				  in  let <_6> = {_17,_18}
				      in  %% Line 635
					  apply 'colon'/4
					      (Rest, _6, _@r0, Config)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_6,_19,_20> when ( 'true'
						-| ['compiler_generated'] ) ->
				( primop ( 'match_fail'
					   -| ['compiler_generated'] )
				      (( {( 'function_clause'
					    -| ['compiler_generated'] ),_6,_19,_20}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 636
	  <Rest,Handler,Acc,['singlequote'|Stack],Config> when 'true' ->
	      let <_7> =
		  call %% Line 637
		       'erlang':%% Line 637
				'iolist_to_binary'
		      (%% Line 637
		       Acc)
	      in  let <_21> = {%% Line 637
		       ( 'string'
			 -| ['compiler_generated'] ),_7}
		  in  ( case <_21,%% Line 637
				  Handler,%% Line 637
					  Config> of
			  ( <Event,( {_24,State}
				     -| ['compiler_generated'] ),_X_Config> when ( 'true'
										   -| ['compiler_generated'] ) ->
				( let <_25> =
				      call _24:( 'handle_event'
						 -| ['compiler_generated'] )
					  (Event, State)
				  in  let <_8> = {_24,_25}
				      in  %% Line 637
					  apply 'maybe_done'/4
					      (Rest, _8, Stack, Config)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_6,_5,_26> when ( 'true'
					       -| ['compiler_generated'] ) ->
				( primop ( 'match_fail'
					   -| ['compiler_generated'] )
				      (( {( 'function_clause'
					    -| ['compiler_generated'] ),_6,_5,_26}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 638
	  <Rest,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 639
	      apply 'string'/5
		  (Rest, Handler, [Acc|[39]], Stack, Config)
	end
'strip_continuations'/6 =
    %% Line 644
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <#{#<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config,0> when 'true' ->
	      %% Line 645
	      apply 'string'/5
		  (Rest, Handler, [Acc|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
					  #<191>(8,1,'integer',['unsigned'|['big']]),
					  #<189>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	  %% Line 646
	  <#{#<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config,N>
	      when let <_6> =
		    call 'erlang':'>='
			(X, 128)
		in  let <_7> =
			call 'erlang':'=<'
			    (X, 191)
		    in  call 'erlang':'and'
			    (_6, _7) ->
	      let <_8> =
		  call %% Line 647
		       'erlang':%% Line 647
				'-'
		      (%% Line 647
		       N, %% Line 647
			  1)
	      in  %% Line 647
		  apply 'strip_continuations'/6
		      (Rest, Handler, Acc, Stack, Config, _8)
	  %% Line 651
	  <#{}#,Handler,Acc,Stack,Config,N> when 'true' ->
	      %% Line 652
	      case N of
		%% Line 653
		<1> when 'true' ->
		    apply 'incomplete'/6
			('string', #{#<192>(8,1,'integer',['unsigned'|['big']])}#, Handler, Acc, Stack, Config)
		%% Line 654
		<2> when 'true' ->
		    apply 'incomplete'/6
			('string', #{#<224>(8,1,'integer',['unsigned'|['big']])}#, Handler, Acc, Stack, Config)
		%% Line 655
		<3> when 'true' ->
		    apply 'incomplete'/6
			('string', #{#<240>(8,1,'integer',['unsigned'|['big']])}#, Handler, Acc, Stack, Config)
		( <_9> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_9})
		  -| ['compiler_generated'] )
	      end
	  %% Line 659
	  <#{#<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config,_16> when 'true' ->
	      %% Line 660
	      apply 'string'/5
		  (Rest, Handler, [Acc|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
					  #<191>(8,1,'integer',['unsigned'|['big']]),
					  #<189>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	  ( <_15,_14,_13,_12,_11,_10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_15,_14,_13,_12,_11,_10})
		  -| [{'function_name',{'strip_continuations',6}}] )
	    -| ['compiler_generated'] )
	end
'unescape'/5 =
    %% Line 665
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <#{#<92>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config','true',_417,_418,_419,_420,_421,_422,_423,_424,_425,_426,_427,_428,_429,_430,_431}> when 'true' ->
	      let <_5> =
		  #{#<%% Line 666
		      92>(%% Line 666
			  8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 666
		      Rest>(%% Line 666
			    'all',8,'binary',['unsigned'|['big']])}#
	      in  %% Line 666
		  apply 'string'/5
		      (_5, Handler, [Acc|[#{#<92>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	  %% Line 667
	  <#{#<C>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config','true',_432,_433,_434,_435,_436,_437,_438,_439,_440,_441,_442,_443,_444,_445,_446}> when 'true' ->
	      let <_6> =
		  #{#<%% Line 668
		      92>(%% Line 668
			  8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 668
		      C>(%% Line 668
			 8,1,'integer',['unsigned'|['big']])}#
	      in  %% Line 668
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_6|[]]], Stack, Config)
	  %% Line 669
	  <#{#<98>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_7> =
		  case %% Line 670
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<8>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 747
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_27,_28,( 'true'
								  -| ['compiler_generated'] ),_29,_30,_31,_32,_33,_34,_35,_36,_37,_38,_39,_40,_41}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
			      #<98>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 764
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_194,_195,( 'true'
								    -| ['compiler_generated'] ),_196,_197,_198,_199,_200,_201,_202,_203,_204,_205,_206,_207,_208}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 765
			  ( apply 'json_escape_sequence'/1
				(( 8
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<8>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 670
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_7|[]]], Stack, Config)
	  %% Line 671
	  <#{#<102>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_8> =
		  case %% Line 672
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<12>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 750
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_72,_73,( 'true'
								  -| ['compiler_generated'] ),_74,_75,_76,_77,_78,_79,_80,_81,_82,_83,_84,_85,_86}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
			      #<102>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 764
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_194,_195,( 'true'
								    -| ['compiler_generated'] ),_196,_197,_198,_199,_200,_201,_202,_203,_204,_205,_206,_207,_208}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 765
			  ( apply 'json_escape_sequence'/1
				(( 12
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<12>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 672
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_8|[]]], Stack, Config)
	  %% Line 673
	  <#{#<110>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_9> =
		  case %% Line 674
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<10>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 749
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_57,_58,( 'true'
								  -| ['compiler_generated'] ),_59,_60,_61,_62,_63,_64,_65,_66,_67,_68,_69,_70,_71}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
			      #<110>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 764
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_194,_195,( 'true'
								    -| ['compiler_generated'] ),_196,_197,_198,_199,_200,_201,_202,_203,_204,_205,_206,_207,_208}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 765
			  ( apply 'json_escape_sequence'/1
				(( 10
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<10>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 674
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_9|[]]], Stack, Config)
	  %% Line 675
	  <#{#<114>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_10> =
		  case %% Line 676
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<13>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 751
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_87,_88,( 'true'
								  -| ['compiler_generated'] ),_89,_90,_91,_92,_93,_94,_95,_96,_97,_98,_99,_100,_101}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
			      #<114>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 764
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_194,_195,( 'true'
								    -| ['compiler_generated'] ),_196,_197,_198,_199,_200,_201,_202,_203,_204,_205,_206,_207,_208}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 765
			  ( apply 'json_escape_sequence'/1
				(( 13
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<13>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 676
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_10|[]]], Stack, Config)
	  %% Line 677
	  <#{#<116>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_11> =
		  case %% Line 678
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<9>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 748
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_42,_43,( 'true'
								  -| ['compiler_generated'] ),_44,_45,_46,_47,_48,_49,_50,_51,_52,_53,_54,_55,_56}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
			      #<116>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 764
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_194,_195,( 'true'
								    -| ['compiler_generated'] ),_196,_197,_198,_199,_200,_201,_202,_203,_204,_205,_206,_207,_208}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 765
			  ( apply 'json_escape_sequence'/1
				(( 9
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<9>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 678
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_11|[]]], Stack, Config)
	  %% Line 679
	  <#{#<34>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_12> =
		  case %% Line 680
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<34>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 752
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_102,_103,( 'true'
								    -| ['compiler_generated'] ),_104,_105,_106,_107,_108,_109,_110,_111,_112,_113,_114,_115,_116}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
			      #<34>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<34>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 680
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_12|[]]], Stack, Config)
	  %% Line 681
	  <#{#<39>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config = {'config',_447,_448,_449,_450,_451,_452,_453,'false',_454,_455,_456,_457,_458,_459,_460,_461}> when 'true' ->
	      %% Line 682
	      apply 'string'/5
		  (Rest, Handler, [Acc|[#{#<39>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	  %% Line 683
	  <#{#<92>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_13> =
		  case %% Line 684
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 758
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),_148,_149,( 'true'
								    -| ['compiler_generated'] ),_150,_151,_152,_153,_154,_155,_156,_157,_158,_159,_160,_161,_162}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
			      #<92>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<92>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 684
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_13|[]]], Stack, Config)
	  %% Line 685
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config> when 'true' ->
	      let <_14> =
		  case %% Line 686
		       Config of
		    %% Line 746
		    ( <( {( 'config'
			    -| ['compiler_generated'] ),( 'true'
							  -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  ( #{#<47>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 753
		    ( <( _595 = ( {( 'config'
				     -| ['compiler_generated'] ),_117,_118,( 'true'
									     -| ['compiler_generated'] ),_119,_120,_121,_122,_123,_124,_125,_126,_127,_128,_129,_130,_131}
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  %% Line 754
			  ( case _595 of
			      ( <( {( 'config'
				      -| ['compiler_generated'] ),_132,_rec18,_133,_134,_135,_136,_137,_138,_139,_140,_141,_142,_143,_144,_145,_146}
				   -| ['compiler_generated'] )> when ( 'true'
								       -| ['compiler_generated'] ) ->
				    ( case _rec18 of
					%% Line 755
					( <( 'true'
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
						  #<47>(8,1,'integer',['unsigned'|['big']])}#
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					%% Line 756
					( <( 'false'
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      ( #{#<47>(8,1,'integer',['unsigned'|['big']])}#
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_597> when ( 'true'
							-| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'case_clause'
							  -| ['compiler_generated'] ),_597}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <_147> when ( 'true'
					      -| ['compiler_generated'] ) ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','config'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 766
		    ( <_X_Config> when ( 'true'
					 -| ['compiler_generated'] ) ->
			  ( #{#<47>(8,1,'integer',['unsigned'|['big']])}#
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 686
		  apply 'string'/5
		      (Rest, Handler, [Acc|[_14|[]]], Stack, Config)
	  %% Line 687
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<F>(8,1,'integer',['unsigned'|['big']]),
	     #<A>(8,1,'integer',['unsigned'|['big']]),
	     #<B>(8,1,'integer',['unsigned'|['big']]),
	     #<C>(8,1,'integer',['unsigned'|['big']]),
	     #<92>(8,1,'integer',['unsigned'|['big']]),
	     #<117>(8,1,'integer',['unsigned'|['big']]),
	     #<G>(8,1,'integer',['unsigned'|['big']]),
	     #<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Y>(8,1,'integer',['unsigned'|['big']]),
	     #<Z>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config>
	      when %% Line 688
		try
		    ( let <_25> =
			  case call 'erlang':'=='
				   (A, 56) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  'true'
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case call 'erlang':'=='
					     (A, 57) of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    ( case call 'erlang':'=='
						       (A, 97) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case call 'erlang':'=='
								 (A, 98) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								'true'
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								( case call 'erlang':'=='
									   (A, 65) of
								    ( <( 'true'
									 -| ['compiler_generated'] )> when 'true' ->
									  'true'
								      -| ['compiler_generated'] )
								    ( <( 'false'
									 -| ['compiler_generated'] )> when 'true' ->
									  call 'erlang':'=='
									      (A, 66)
								      -| ['compiler_generated'] )
								    ( <_19> when 'true' ->
									  _19
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							  ( <_18> when 'true' ->
								_18
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_17> when 'true' ->
						      _17
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <_16> when 'true' ->
					    _16
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_15> when 'true' ->
				  _15
			      -| ['compiler_generated'] )
			  end
		      in  let <_26> =
			      call 'erlang':'=:='
				  (( _25
				     -| ['compiler_generated'] ), 'true')
			  in  ( let <_41> =
				    case %% Line 689
					 call 'erlang':'=='
					     (X, 99) of
				      %% Line 689
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      %% Line 689
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    ( case call 'erlang':'=='
						       (X, 100) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case call 'erlang':'=='
								 (X, 101) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								'true'
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								( case call 'erlang':'=='
									   (X, 102) of
								    ( <( 'true'
									 -| ['compiler_generated'] )> when 'true' ->
									  'true'
								      -| ['compiler_generated'] )
								    ( <( 'false'
									 -| ['compiler_generated'] )> when 'true' ->
									  ( case call 'erlang':'=='
										     (X, 67) of
									      ( <( 'true'
										   -| ['compiler_generated'] )> when 'true' ->
										    'true'
										-| ['compiler_generated'] )
									      ( <( 'false'
										   -| ['compiler_generated'] )> when 'true' ->
										    ( case call 'erlang':'=='
											       (X, 68) of
											( <( 'true'
											     -| ['compiler_generated'] )> when 'true' ->
											      'true'
											  -| ['compiler_generated'] )
											( <( 'false'
											     -| ['compiler_generated'] )> when 'true' ->
											      ( case call 'erlang':'=='
													 (X, 69) of
												  ( <( 'true'
												       -| ['compiler_generated'] )> when 'true' ->
													'true'
												    -| ['compiler_generated'] )
												  ( <( 'false'
												       -| ['compiler_generated'] )> when 'true' ->
													call 'erlang':'=='
													    (X, 70)
												    -| ['compiler_generated'] )
												  ( <_33> when 'true' ->
													_33
												    -| ['compiler_generated'] )
												end
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
											( <_32> when 'true' ->
											      _32
											  -| ['compiler_generated'] )
										      end
										      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									      ( <_31> when 'true' ->
										    _31
										-| ['compiler_generated'] )
									    end
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								    ( <_30> when 'true' ->
									  _30
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							  ( <_29> when 'true' ->
								_29
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_28> when 'true' ->
						      _28
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      %% Line 689
				      ( <_27> when 'true' ->
					    _27
					-| ['compiler_generated'] )
				    end
				in  let <_42> =
					call 'erlang':'=:='
					    (%% Line 689
					     ( _41
					       -| ['compiler_generated'] ), 'true')
				    in  ( let <_45> =
					      case %% Line 690
						   call 'erlang':'=='
						       (F, 100) of
						%% Line 690
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						%% Line 690
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      call 'erlang':'=='
							  (F, 68)
						  -| ['compiler_generated'] )
						%% Line 690
						( <_43> when 'true' ->
						      _43
						  -| ['compiler_generated'] )
					      end
					  in  let <_46> =
						  call 'erlang':'=:='
						      (%% Line 690
						       ( _45
							 -| ['compiler_generated'] ), 'true')
					      in  ( let <_49> =
							case %% Line 691
							     call 'erlang':'=='
								 (G, 100) of
							  %% Line 691
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								'true'
							    -| ['compiler_generated'] )
							  %% Line 691
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erlang':'=='
								    (G, 68)
							    -| ['compiler_generated'] )
							  %% Line 691
							  ( <_47> when 'true' ->
								_47
							    -| ['compiler_generated'] )
							end
						    in  let <_50> =
							    call 'erlang':'=:='
								(%% Line 691
								 ( _49
								   -| ['compiler_generated'] ), 'true')
							in  let <_54> =
								case %% Line 692
								     call 'erlang':'>='
									 (B, 97) of
								  %% Line 692
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									call 'erlang':'=<'
									    (B, 102)
								    -| ['compiler_generated'] )
								  %% Line 692
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									'false'
								    -| ['compiler_generated'] )
								  %% Line 692
								  ( <_52> when 'true' ->
									_52
								    -| ['compiler_generated'] )
								end
							    in  ( let <_63> =
								      case _54 of
									%% Line 692
									( <( 'true'
									     -| ['compiler_generated'] )> when 'true' ->
									      'true'
									  -| ['compiler_generated'] )
									%% Line 692
									( <( 'false'
									     -| ['compiler_generated'] )> when 'true' ->
									      let <_58> =
										  case call 'erlang':'>='
											   (B, 65) of
										    ( <( 'true'
											 -| ['compiler_generated'] )> when 'true' ->
											  call 'erlang':'=<'
											      (B, 70)
										      -| ['compiler_generated'] )
										    ( <( 'false'
											 -| ['compiler_generated'] )> when 'true' ->
											  'false'
										      -| ['compiler_generated'] )
										    ( <_56> when 'true' ->
											  _56
										      -| ['compiler_generated'] )
										  end
									      in  ( case _58 of
										      ( <( 'true'
											   -| ['compiler_generated'] )> when 'true' ->
											    'true'
											-| ['compiler_generated'] )
										      ( <( 'false'
											   -| ['compiler_generated'] )> when 'true' ->
											    ( case call 'erlang':'>='
												       (B, 48) of
												( <( 'true'
												     -| ['compiler_generated'] )> when 'true' ->
												      call 'erlang':'=<'
													  (B, 57)
												  -| ['compiler_generated'] )
												( <( 'false'
												     -| ['compiler_generated'] )> when 'true' ->
												      'false'
												  -| ['compiler_generated'] )
												( <_59> when 'true' ->
												      _59
												  -| ['compiler_generated'] )
											      end
											      -| ['compiler_generated'] )
											-| ['compiler_generated'] )
										      ( <_55> when 'true' ->
											    _55
											-| ['compiler_generated'] )
										    end
										    -| ['compiler_generated'] )
									  -| ['compiler_generated'] )
									%% Line 692
									( <_51> when 'true' ->
									      _51
									  -| ['compiler_generated'] )
								      end
								  in  let <_64> =
									  call 'erlang':'=:='
									      (%% Line 692
									       ( _63
										 -| ['compiler_generated'] ), 'true')
								      in  let <_68> =
									      case %% Line 692
										   call 'erlang':'>='
										       (C, 97) of
										%% Line 692
										( <( 'true'
										     -| ['compiler_generated'] )> when 'true' ->
										      call 'erlang':'=<'
											  (C, 102)
										  -| ['compiler_generated'] )
										%% Line 692
										( <( 'false'
										     -| ['compiler_generated'] )> when 'true' ->
										      'false'
										  -| ['compiler_generated'] )
										%% Line 692
										( <_66> when 'true' ->
										      _66
										  -| ['compiler_generated'] )
									      end
									  in  ( let <_77> =
										    case _68 of
										      %% Line 692
										      ( <( 'true'
											   -| ['compiler_generated'] )> when 'true' ->
											    'true'
											-| ['compiler_generated'] )
										      %% Line 692
										      ( <( 'false'
											   -| ['compiler_generated'] )> when 'true' ->
											    let <_72> =
												case call 'erlang':'>='
													 (C, 65) of
												  ( <( 'true'
												       -| ['compiler_generated'] )> when 'true' ->
													call 'erlang':'=<'
													    (C, 70)
												    -| ['compiler_generated'] )
												  ( <( 'false'
												       -| ['compiler_generated'] )> when 'true' ->
													'false'
												    -| ['compiler_generated'] )
												  ( <_70> when 'true' ->
													_70
												    -| ['compiler_generated'] )
												end
											    in  ( case _72 of
												    ( <( 'true'
													 -| ['compiler_generated'] )> when 'true' ->
													  'true'
												      -| ['compiler_generated'] )
												    ( <( 'false'
													 -| ['compiler_generated'] )> when 'true' ->
													  ( case call 'erlang':'>='
														     (C, 48) of
													      ( <( 'true'
														   -| ['compiler_generated'] )> when 'true' ->
														    call 'erlang':'=<'
															(C, 57)
														-| ['compiler_generated'] )
													      ( <( 'false'
														   -| ['compiler_generated'] )> when 'true' ->
														    'false'
														-| ['compiler_generated'] )
													      ( <_73> when 'true' ->
														    _73
														-| ['compiler_generated'] )
													    end
													    -| ['compiler_generated'] )
												      -| ['compiler_generated'] )
												    ( <_69> when 'true' ->
													  _69
												      -| ['compiler_generated'] )
												  end
												  -| ['compiler_generated'] )
											-| ['compiler_generated'] )
										      %% Line 692
										      ( <_65> when 'true' ->
											    _65
											-| ['compiler_generated'] )
										    end
										in  let <_78> =
											call 'erlang':'=:='
											    (%% Line 692
											     ( _77
											       -| ['compiler_generated'] ), 'true')
										    in  let <_82> =
											    case %% Line 692
												 call 'erlang':'>='
												     (Y, 97) of
											      %% Line 692
											      ( <( 'true'
												   -| ['compiler_generated'] )> when 'true' ->
												    call 'erlang':'=<'
													(Y, 102)
												-| ['compiler_generated'] )
											      %% Line 692
											      ( <( 'false'
												   -| ['compiler_generated'] )> when 'true' ->
												    'false'
												-| ['compiler_generated'] )
											      %% Line 692
											      ( <_80> when 'true' ->
												    _80
												-| ['compiler_generated'] )
											    end
											in  ( let <_91> =
												  case _82 of
												    %% Line 692
												    ( <( 'true'
													 -| ['compiler_generated'] )> when 'true' ->
													  'true'
												      -| ['compiler_generated'] )
												    %% Line 692
												    ( <( 'false'
													 -| ['compiler_generated'] )> when 'true' ->
													  let <_86> =
													      case call 'erlang':'>='
														       (Y, 65) of
														( <( 'true'
														     -| ['compiler_generated'] )> when 'true' ->
														      call 'erlang':'=<'
															  (Y, 70)
														  -| ['compiler_generated'] )
														( <( 'false'
														     -| ['compiler_generated'] )> when 'true' ->
														      'false'
														  -| ['compiler_generated'] )
														( <_84> when 'true' ->
														      _84
														  -| ['compiler_generated'] )
													      end
													  in  ( case _86 of
														  ( <( 'true'
														       -| ['compiler_generated'] )> when 'true' ->
															'true'
														    -| ['compiler_generated'] )
														  ( <( 'false'
														       -| ['compiler_generated'] )> when 'true' ->
															( case call 'erlang':'>='
																   (Y, 48) of
															    ( <( 'true'
																 -| ['compiler_generated'] )> when 'true' ->
																  call 'erlang':'=<'
																      (Y, 57)
															      -| ['compiler_generated'] )
															    ( <( 'false'
																 -| ['compiler_generated'] )> when 'true' ->
																  'false'
															      -| ['compiler_generated'] )
															    ( <_87> when 'true' ->
																  _87
															      -| ['compiler_generated'] )
															  end
															  -| ['compiler_generated'] )
														    -| ['compiler_generated'] )
														  ( <_83> when 'true' ->
															_83
														    -| ['compiler_generated'] )
														end
														-| ['compiler_generated'] )
												      -| ['compiler_generated'] )
												    %% Line 692
												    ( <_79> when 'true' ->
													  _79
												      -| ['compiler_generated'] )
												  end
											      in  let <_92> =
												      call 'erlang':'=:='
													  (%% Line 692
													   ( _91
													     -| ['compiler_generated'] ), 'true')
												  in  let <_96> =
													  case %% Line 692
													       call 'erlang':'>='
														   (Z, 97) of
													    %% Line 692
													    ( <( 'true'
														 -| ['compiler_generated'] )> when 'true' ->
														  call 'erlang':'=<'
														      (Z, 102)
													      -| ['compiler_generated'] )
													    %% Line 692
													    ( <( 'false'
														 -| ['compiler_generated'] )> when 'true' ->
														  'false'
													      -| ['compiler_generated'] )
													    %% Line 692
													    ( <_94> when 'true' ->
														  _94
													      -| ['compiler_generated'] )
													  end
												      in  ( let <_105> =
														case _96 of
														  %% Line 692
														  ( <( 'true'
														       -| ['compiler_generated'] )> when 'true' ->
															'true'
														    -| ['compiler_generated'] )
														  %% Line 692
														  ( <( 'false'
														       -| ['compiler_generated'] )> when 'true' ->
															let <_100> =
															    case call 'erlang':'>='
																     (Z, 65) of
															      ( <( 'true'
																   -| ['compiler_generated'] )> when 'true' ->
																    call 'erlang':'=<'
																	(Z, 70)
																-| ['compiler_generated'] )
															      ( <( 'false'
																   -| ['compiler_generated'] )> when 'true' ->
																    'false'
																-| ['compiler_generated'] )
															      ( <_98> when 'true' ->
																    _98
																-| ['compiler_generated'] )
															    end
															in  ( case _100 of
																( <( 'true'
																     -| ['compiler_generated'] )> when 'true' ->
																      'true'
																  -| ['compiler_generated'] )
																( <( 'false'
																     -| ['compiler_generated'] )> when 'true' ->
																      ( case call 'erlang':'>='
																		 (Z, 48) of
																	  ( <( 'true'
																	       -| ['compiler_generated'] )> when 'true' ->
																		call 'erlang':'=<'
																		    (Z, 57)
																	    -| ['compiler_generated'] )
																	  ( <( 'false'
																	       -| ['compiler_generated'] )> when 'true' ->
																		'false'
																	    -| ['compiler_generated'] )
																	  ( <_101> when 'true' ->
																		_101
																	    -| ['compiler_generated'] )
																	end
																	-| ['compiler_generated'] )
																  -| ['compiler_generated'] )
																( <_97> when 'true' ->
																      _97
																  -| ['compiler_generated'] )
															      end
															      -| ['compiler_generated'] )
														    -| ['compiler_generated'] )
														  %% Line 692
														  ( <_93> when 'true' ->
															_93
														    -| ['compiler_generated'] )
														end
													    in  let <_106> =
														    call 'erlang':'=:='
															(%% Line 692
															 ( _105
															   -| ['compiler_generated'] ), 'true')
														in  let <_107> =
															call 'erlang':'and'
															    (_92, _106)
														    in  let <_108> =
															    call 'erlang':'and'
																(_78, _107)
															in  let <_109> =
																call 'erlang':'and'
																    (_64, _108)
															    in  let <_110> =
																    call 'erlang':'and'
																	(_50, _109)
																in  let <_111> =
																	call 'erlang':'and'
																	    (_46, _110)
																    in  let <_112> =
																	    call 'erlang':'and'
																		(_42, _111)
																	in  call 'erlang':'and'
																		(_26, _112)
													    -| ['compiler_generated'] )
											      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <High> =
		  call %% Line 694
		       'erlang':%% Line 694
				'list_to_integer'
		      (%% Line 694
		       [100|[A|[B|[C|[]]]]], %% Line 694
					     16)
	      in  let <Low> =
		      call %% Line 695
			   'erlang':%% Line 695
				    'list_to_integer'
			  (%% Line 695
			   [100|[X|[Y|[Z|[]]]]], %% Line 695
						 16)
		  in  let <_116> =
			  call %% Line 696
			       'erlang':%% Line 696
					'-'
			      (%% Line 696
			       High, %% Line 696
				     55296)
		      in  let <_117> =
			      call %% Line 696
				   'erlang':%% Line 696
					    '*'
				  (_116, %% Line 696
					 1024)
			  in  let <_115> =
				  call %% Line 696
				       'erlang':%% Line 696
						'-'
				      (%% Line 696
				       Low, %% Line 696
					    56320)
			      in  let <_118> =
				      call %% Line 696
					   'erlang':%% Line 696
						    '+'
					  (_117, _115)
				  in  let <Codepoint> =
					  call %% Line 696
					       'erlang':%% Line 696
							'+'
					      (_118, %% Line 696
						     65536)
				      in  let <_120> =
					      #{#<%% Line 697
						  Codepoint>(%% Line 697
							     'undefined','undefined','utf8',['unsigned'|['big']])}#
					  in  %% Line 697
					      apply 'string'/5
						  (Rest, Handler, [Acc|[_120|[]]], Stack, Config)
	  %% Line 698
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<F0>(8,1,'integer',['unsigned'|['big']]),
	     #<A>(8,1,'integer',['unsigned'|['big']]),
	     #<B>(8,1,'integer',['unsigned'|['big']]),
	     #<C>(8,1,'integer',['unsigned'|['big']]),
	     #<92>(8,1,'integer',['unsigned'|['big']]),
	     #<117>(8,1,'integer',['unsigned'|['big']]),
	     #<W>(8,1,'integer',['unsigned'|['big']]),
	     #<X>(8,1,'integer',['unsigned'|['big']]),
	     #<Y>(8,1,'integer',['unsigned'|['big']]),
	     #<Z>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config>
	      when %% Line 699
		try
		    ( let <_131> =
			  case call 'erlang':'=='
				   (A, 56) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  'true'
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case call 'erlang':'=='
					     (A, 57) of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    ( case call 'erlang':'=='
						       (A, 97) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case call 'erlang':'=='
								 (A, 98) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								'true'
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								( case call 'erlang':'=='
									   (A, 65) of
								    ( <( 'true'
									 -| ['compiler_generated'] )> when 'true' ->
									  'true'
								      -| ['compiler_generated'] )
								    ( <( 'false'
									 -| ['compiler_generated'] )> when 'true' ->
									  call 'erlang':'=='
									      (A, 66)
								      -| ['compiler_generated'] )
								    ( <_125> when 'true' ->
									  _125
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							  ( <_124> when 'true' ->
								_124
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_123> when 'true' ->
						      _123
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <_122> when 'true' ->
					    _122
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_121> when 'true' ->
				  _121
			      -| ['compiler_generated'] )
			  end
		      in  let <_132> =
			      call 'erlang':'=:='
				  (( _131
				     -| ['compiler_generated'] ), 'true')
			  in  ( let <_135> =
				    case %% Line 700
					 call 'erlang':'=='
					     (F0, 100) of
				      %% Line 700
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      %% Line 700
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    call 'erlang':'=='
						(F0, 68)
					-| ['compiler_generated'] )
				      %% Line 700
				      ( <_133> when 'true' ->
					    _133
					-| ['compiler_generated'] )
				    end
				in  let <_136> =
					call 'erlang':'=:='
					    (%% Line 700
					     ( _135
					       -| ['compiler_generated'] ), 'true')
				    in  let <_140> =
					    case %% Line 701
						 call 'erlang':'>='
						     (B, 97) of
					      %% Line 701
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    call 'erlang':'=<'
							(B, 102)
						-| ['compiler_generated'] )
					      %% Line 701
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    'false'
						-| ['compiler_generated'] )
					      %% Line 701
					      ( <_138> when 'true' ->
						    _138
						-| ['compiler_generated'] )
					    end
					in  ( let <_149> =
						  case _140 of
						    %% Line 701
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  'true'
						      -| ['compiler_generated'] )
						    %% Line 701
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_144> =
							      case call 'erlang':'>='
								       (B, 65) of
								( <( 'true'
								     -| ['compiler_generated'] )> when 'true' ->
								      call 'erlang':'=<'
									  (B, 70)
								  -| ['compiler_generated'] )
								( <( 'false'
								     -| ['compiler_generated'] )> when 'true' ->
								      'false'
								  -| ['compiler_generated'] )
								( <_142> when 'true' ->
								      _142
								  -| ['compiler_generated'] )
							      end
							  in  ( case _144 of
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									'true'
								    -| ['compiler_generated'] )
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									( case call 'erlang':'>='
										   (B, 48) of
									    ( <( 'true'
										 -| ['compiler_generated'] )> when 'true' ->
										  call 'erlang':'=<'
										      (B, 57)
									      -| ['compiler_generated'] )
									    ( <( 'false'
										 -| ['compiler_generated'] )> when 'true' ->
										  'false'
									      -| ['compiler_generated'] )
									    ( <_145> when 'true' ->
										  _145
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								  ( <_141> when 'true' ->
									_141
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						    %% Line 701
						    ( <_137> when 'true' ->
							  _137
						      -| ['compiler_generated'] )
						  end
					      in  let <_150> =
						      call 'erlang':'=:='
							  (%% Line 701
							   ( _149
							     -| ['compiler_generated'] ), 'true')
						  in  let <_154> =
							  case %% Line 701
							       call 'erlang':'>='
								   (C, 97) of
							    %% Line 701
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  call 'erlang':'=<'
								      (C, 102)
							      -| ['compiler_generated'] )
							    %% Line 701
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  'false'
							      -| ['compiler_generated'] )
							    %% Line 701
							    ( <_152> when 'true' ->
								  _152
							      -| ['compiler_generated'] )
							  end
						      in  ( let <_163> =
								case _154 of
								  %% Line 701
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									'true'
								    -| ['compiler_generated'] )
								  %% Line 701
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									let <_158> =
									    case call 'erlang':'>='
										     (C, 65) of
									      ( <( 'true'
										   -| ['compiler_generated'] )> when 'true' ->
										    call 'erlang':'=<'
											(C, 70)
										-| ['compiler_generated'] )
									      ( <( 'false'
										   -| ['compiler_generated'] )> when 'true' ->
										    'false'
										-| ['compiler_generated'] )
									      ( <_156> when 'true' ->
										    _156
										-| ['compiler_generated'] )
									    end
									in  ( case _158 of
										( <( 'true'
										     -| ['compiler_generated'] )> when 'true' ->
										      'true'
										  -| ['compiler_generated'] )
										( <( 'false'
										     -| ['compiler_generated'] )> when 'true' ->
										      ( case call 'erlang':'>='
												 (C, 48) of
											  ( <( 'true'
											       -| ['compiler_generated'] )> when 'true' ->
												call 'erlang':'=<'
												    (C, 57)
											    -| ['compiler_generated'] )
											  ( <( 'false'
											       -| ['compiler_generated'] )> when 'true' ->
												'false'
											    -| ['compiler_generated'] )
											  ( <_159> when 'true' ->
												_159
											    -| ['compiler_generated'] )
											end
											-| ['compiler_generated'] )
										  -| ['compiler_generated'] )
										( <_155> when 'true' ->
										      _155
										  -| ['compiler_generated'] )
									      end
									      -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								  %% Line 701
								  ( <_151> when 'true' ->
									_151
								    -| ['compiler_generated'] )
								end
							    in  let <_164> =
								    call 'erlang':'=:='
									(%% Line 701
									 ( _163
									   -| ['compiler_generated'] ), 'true')
								in  let <_168> =
									case %% Line 701
									     call 'erlang':'>='
										 (W, 97) of
									  %% Line 701
									  ( <( 'true'
									       -| ['compiler_generated'] )> when 'true' ->
										call 'erlang':'=<'
										    (W, 102)
									    -| ['compiler_generated'] )
									  %% Line 701
									  ( <( 'false'
									       -| ['compiler_generated'] )> when 'true' ->
										'false'
									    -| ['compiler_generated'] )
									  %% Line 701
									  ( <_166> when 'true' ->
										_166
									    -| ['compiler_generated'] )
									end
								    in  ( let <_177> =
									      case _168 of
										%% Line 701
										( <( 'true'
										     -| ['compiler_generated'] )> when 'true' ->
										      'true'
										  -| ['compiler_generated'] )
										%% Line 701
										( <( 'false'
										     -| ['compiler_generated'] )> when 'true' ->
										      let <_172> =
											  case call 'erlang':'>='
												   (W, 65) of
											    ( <( 'true'
												 -| ['compiler_generated'] )> when 'true' ->
												  call 'erlang':'=<'
												      (W, 70)
											      -| ['compiler_generated'] )
											    ( <( 'false'
												 -| ['compiler_generated'] )> when 'true' ->
												  'false'
											      -| ['compiler_generated'] )
											    ( <_170> when 'true' ->
												  _170
											      -| ['compiler_generated'] )
											  end
										      in  ( case _172 of
											      ( <( 'true'
												   -| ['compiler_generated'] )> when 'true' ->
												    'true'
												-| ['compiler_generated'] )
											      ( <( 'false'
												   -| ['compiler_generated'] )> when 'true' ->
												    ( case call 'erlang':'>='
													       (W, 48) of
													( <( 'true'
													     -| ['compiler_generated'] )> when 'true' ->
													      call 'erlang':'=<'
														  (W, 57)
													  -| ['compiler_generated'] )
													( <( 'false'
													     -| ['compiler_generated'] )> when 'true' ->
													      'false'
													  -| ['compiler_generated'] )
													( <_173> when 'true' ->
													      _173
													  -| ['compiler_generated'] )
												      end
												      -| ['compiler_generated'] )
												-| ['compiler_generated'] )
											      ( <_169> when 'true' ->
												    _169
												-| ['compiler_generated'] )
											    end
											    -| ['compiler_generated'] )
										  -| ['compiler_generated'] )
										%% Line 701
										( <_165> when 'true' ->
										      _165
										  -| ['compiler_generated'] )
									      end
									  in  let <_178> =
										  call 'erlang':'=:='
										      (%% Line 701
										       ( _177
											 -| ['compiler_generated'] ), 'true')
									      in  let <_182> =
										      case %% Line 701
											   call 'erlang':'>='
											       (X, 97) of
											%% Line 701
											( <( 'true'
											     -| ['compiler_generated'] )> when 'true' ->
											      call 'erlang':'=<'
												  (X, 102)
											  -| ['compiler_generated'] )
											%% Line 701
											( <( 'false'
											     -| ['compiler_generated'] )> when 'true' ->
											      'false'
											  -| ['compiler_generated'] )
											%% Line 701
											( <_180> when 'true' ->
											      _180
											  -| ['compiler_generated'] )
										      end
										  in  ( let <_191> =
											    case _182 of
											      %% Line 701
											      ( <( 'true'
												   -| ['compiler_generated'] )> when 'true' ->
												    'true'
												-| ['compiler_generated'] )
											      %% Line 701
											      ( <( 'false'
												   -| ['compiler_generated'] )> when 'true' ->
												    let <_186> =
													case call 'erlang':'>='
														 (X, 65) of
													  ( <( 'true'
													       -| ['compiler_generated'] )> when 'true' ->
														call 'erlang':'=<'
														    (X, 70)
													    -| ['compiler_generated'] )
													  ( <( 'false'
													       -| ['compiler_generated'] )> when 'true' ->
														'false'
													    -| ['compiler_generated'] )
													  ( <_184> when 'true' ->
														_184
													    -| ['compiler_generated'] )
													end
												    in  ( case _186 of
													    ( <( 'true'
														 -| ['compiler_generated'] )> when 'true' ->
														  'true'
													      -| ['compiler_generated'] )
													    ( <( 'false'
														 -| ['compiler_generated'] )> when 'true' ->
														  ( case call 'erlang':'>='
															     (X, 48) of
														      ( <( 'true'
															   -| ['compiler_generated'] )> when 'true' ->
															    call 'erlang':'=<'
																(X, 57)
															-| ['compiler_generated'] )
														      ( <( 'false'
															   -| ['compiler_generated'] )> when 'true' ->
															    'false'
															-| ['compiler_generated'] )
														      ( <_187> when 'true' ->
															    _187
															-| ['compiler_generated'] )
														    end
														    -| ['compiler_generated'] )
													      -| ['compiler_generated'] )
													    ( <_183> when 'true' ->
														  _183
													      -| ['compiler_generated'] )
													  end
													  -| ['compiler_generated'] )
												-| ['compiler_generated'] )
											      %% Line 701
											      ( <_179> when 'true' ->
												    _179
												-| ['compiler_generated'] )
											    end
											in  let <_192> =
												call 'erlang':'=:='
												    (%% Line 701
												     ( _191
												       -| ['compiler_generated'] ), 'true')
											    in  let <_196> =
												    case %% Line 701
													 call 'erlang':'>='
													     (Y, 97) of
												      %% Line 701
												      ( <( 'true'
													   -| ['compiler_generated'] )> when 'true' ->
													    call 'erlang':'=<'
														(Y, 102)
													-| ['compiler_generated'] )
												      %% Line 701
												      ( <( 'false'
													   -| ['compiler_generated'] )> when 'true' ->
													    'false'
													-| ['compiler_generated'] )
												      %% Line 701
												      ( <_194> when 'true' ->
													    _194
													-| ['compiler_generated'] )
												    end
												in  ( let <_205> =
													  case _196 of
													    %% Line 701
													    ( <( 'true'
														 -| ['compiler_generated'] )> when 'true' ->
														  'true'
													      -| ['compiler_generated'] )
													    %% Line 701
													    ( <( 'false'
														 -| ['compiler_generated'] )> when 'true' ->
														  let <_200> =
														      case call 'erlang':'>='
															       (Y, 65) of
															( <( 'true'
															     -| ['compiler_generated'] )> when 'true' ->
															      call 'erlang':'=<'
																  (Y, 70)
															  -| ['compiler_generated'] )
															( <( 'false'
															     -| ['compiler_generated'] )> when 'true' ->
															      'false'
															  -| ['compiler_generated'] )
															( <_198> when 'true' ->
															      _198
															  -| ['compiler_generated'] )
														      end
														  in  ( case _200 of
															  ( <( 'true'
															       -| ['compiler_generated'] )> when 'true' ->
																'true'
															    -| ['compiler_generated'] )
															  ( <( 'false'
															       -| ['compiler_generated'] )> when 'true' ->
																( case call 'erlang':'>='
																	   (Y, 48) of
																    ( <( 'true'
																	 -| ['compiler_generated'] )> when 'true' ->
																	  call 'erlang':'=<'
																	      (Y, 57)
																      -| ['compiler_generated'] )
																    ( <( 'false'
																	 -| ['compiler_generated'] )> when 'true' ->
																	  'false'
																      -| ['compiler_generated'] )
																    ( <_201> when 'true' ->
																	  _201
																      -| ['compiler_generated'] )
																  end
																  -| ['compiler_generated'] )
															    -| ['compiler_generated'] )
															  ( <_197> when 'true' ->
																_197
															    -| ['compiler_generated'] )
															end
															-| ['compiler_generated'] )
													      -| ['compiler_generated'] )
													    %% Line 701
													    ( <_193> when 'true' ->
														  _193
													      -| ['compiler_generated'] )
													  end
												      in  let <_206> =
													      call 'erlang':'=:='
														  (%% Line 701
														   ( _205
														     -| ['compiler_generated'] ), 'true')
													  in  let <_210> =
														  case %% Line 701
														       call 'erlang':'>='
															   (Z, 97) of
														    %% Line 701
														    ( <( 'true'
															 -| ['compiler_generated'] )> when 'true' ->
															  call 'erlang':'=<'
															      (Z, 102)
														      -| ['compiler_generated'] )
														    %% Line 701
														    ( <( 'false'
															 -| ['compiler_generated'] )> when 'true' ->
															  'false'
														      -| ['compiler_generated'] )
														    %% Line 701
														    ( <_208> when 'true' ->
															  _208
														      -| ['compiler_generated'] )
														  end
													      in  ( let <_219> =
															case _210 of
															  %% Line 701
															  ( <( 'true'
															       -| ['compiler_generated'] )> when 'true' ->
																'true'
															    -| ['compiler_generated'] )
															  %% Line 701
															  ( <( 'false'
															       -| ['compiler_generated'] )> when 'true' ->
																let <_214> =
																    case call 'erlang':'>='
																	     (Z, 65) of
																      ( <( 'true'
																	   -| ['compiler_generated'] )> when 'true' ->
																	    call 'erlang':'=<'
																		(Z, 70)
																	-| ['compiler_generated'] )
																      ( <( 'false'
																	   -| ['compiler_generated'] )> when 'true' ->
																	    'false'
																	-| ['compiler_generated'] )
																      ( <_212> when 'true' ->
																	    _212
																	-| ['compiler_generated'] )
																    end
																in  ( case _214 of
																	( <( 'true'
																	     -| ['compiler_generated'] )> when 'true' ->
																	      'true'
																	  -| ['compiler_generated'] )
																	( <( 'false'
																	     -| ['compiler_generated'] )> when 'true' ->
																	      ( case call 'erlang':'>='
																			 (Z, 48) of
																		  ( <( 'true'
																		       -| ['compiler_generated'] )> when 'true' ->
																			call 'erlang':'=<'
																			    (Z, 57)
																		    -| ['compiler_generated'] )
																		  ( <( 'false'
																		       -| ['compiler_generated'] )> when 'true' ->
																			'false'
																		    -| ['compiler_generated'] )
																		  ( <_215> when 'true' ->
																			_215
																		    -| ['compiler_generated'] )
																		end
																		-| ['compiler_generated'] )
																	  -| ['compiler_generated'] )
																	( <_211> when 'true' ->
																	      _211
																	  -| ['compiler_generated'] )
																      end
																      -| ['compiler_generated'] )
															    -| ['compiler_generated'] )
															  %% Line 701
															  ( <_207> when 'true' ->
																_207
															    -| ['compiler_generated'] )
															end
														    in  let <_220> =
															    call 'erlang':'=:='
																(%% Line 701
																 ( _219
																   -| ['compiler_generated'] ), 'true')
															in  let <_221> =
																call 'erlang':'and'
																    (_206, _220)
															    in  let <_222> =
																    call 'erlang':'and'
																	(_192, _221)
																in  let <_223> =
																	call 'erlang':'and'
																	    (_178, _222)
																    in  let <_224> =
																	    call 'erlang':'and'
																		(_164, _223)
																	in  let <_225> =
																		call 'erlang':'and'
																		    (_150, _224)
																	    in  let <_226> =
																		    call 'erlang':'and'
																			(_136, _225)
																		in  call 'erlang':'and'
																			(_132, _226)
														    -| ['compiler_generated'] )
												      -| ['compiler_generated'] )
											-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 703
	      ( case Config of
		  ( <( {'config',_462,_463,_464,_465,_466,_467,_rec13,_468,_469,_470,_471,_472,_473,_474,_475,_476}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec13 of
			  %% Line 704
			  <'true'> when 'true' ->
			      ( case Config of
				  ( <( {'config',_478,_479,_480,_481,_482,_483,_484,_485,_486,_487,_488,_489,_490,_491,_rec14,_492}
				       -| ['compiler_generated'] )> when 'true' ->
					case _rec14 of
					  <'false'> when 'true' ->
					      call 'erlang':'error'
						  ('badarg')
					  <F> when 'true' ->
					      let <_232> =
						  #{#<117>(8,1,'integer',['unsigned'|['big']]),
						    #<100>(8,1,'integer',['unsigned'|['big']]),
						    #<A>(8,1,'integer',['unsigned'|['big']]),
						    #<B>(8,1,'integer',['unsigned'|['big']]),
						    #<C>(8,1,'integer',['unsigned'|['big']]),
						    #<92>(8,1,'integer',['unsigned'|['big']]),
						    #<117>(8,1,'integer',['unsigned'|['big']]),
						    #<W>(8,1,'integer',['unsigned'|['big']]),
						    #<X>(8,1,'integer',['unsigned'|['big']]),
						    #<Y>(8,1,'integer',['unsigned'|['big']]),
						    #<Z>(8,1,'integer',['unsigned'|['big']]),
						    #<Rest>('all',8,'binary',['unsigned'|['big']])}#
					      in  let <_231> =
						      call 'jsx_config':'config_to_list'
							  (Config)
						  in  apply F
							  (_232, {'decoder','string',Handler,Acc,Stack}, _231)
					end
				    -| ['compiler_generated'] )
				  ( <_493> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','config'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  %% Line 705
			  <'false'> when 'true' ->
			      apply 'string'/5
				  (Rest, Handler, [Acc|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
							  #<191>(8,1,'integer',['unsigned'|['big']]),
							  #<189>(8,1,'integer',['unsigned'|['big']])}#|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
													  #<191>(8,1,'integer',['unsigned'|['big']]),
													  #<189>(8,1,'integer',['unsigned'|['big']])}#]]], Stack, Config)
			  ( <_234> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_234})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_477> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 707
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<F>(8,1,'integer',['unsigned'|['big']]),
	     #<A>(8,1,'integer',['unsigned'|['big']]),
	     #<B>(8,1,'integer',['unsigned'|['big']]),
	     #<C>(8,1,'integer',['unsigned'|['big']]),
	     #<92>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config>
	      when %% Line 708
		try
		    ( let <_245> =
			  case call 'erlang':'=='
				   (A, 56) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  'true'
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case call 'erlang':'=='
					     (A, 57) of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    ( case call 'erlang':'=='
						       (A, 97) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case call 'erlang':'=='
								 (A, 98) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								'true'
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								( case call 'erlang':'=='
									   (A, 65) of
								    ( <( 'true'
									 -| ['compiler_generated'] )> when 'true' ->
									  'true'
								      -| ['compiler_generated'] )
								    ( <( 'false'
									 -| ['compiler_generated'] )> when 'true' ->
									  call 'erlang':'=='
									      (A, 66)
								      -| ['compiler_generated'] )
								    ( <_239> when 'true' ->
									  _239
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							  ( <_238> when 'true' ->
								_238
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_237> when 'true' ->
						      _237
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <_236> when 'true' ->
					    _236
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_235> when 'true' ->
				  _235
			      -| ['compiler_generated'] )
			  end
		      in  let <_246> =
			      call 'erlang':'=:='
				  (( _245
				     -| ['compiler_generated'] ), 'true')
			  in  ( let <_249> =
				    case %% Line 709
					 call 'erlang':'=='
					     (F, 100) of
				      %% Line 709
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      %% Line 709
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    call 'erlang':'=='
						(F, 68)
					-| ['compiler_generated'] )
				      %% Line 709
				      ( <_247> when 'true' ->
					    _247
					-| ['compiler_generated'] )
				    end
				in  let <_250> =
					call 'erlang':'=:='
					    (%% Line 709
					     ( _249
					       -| ['compiler_generated'] ), 'true')
				    in  let <_254> =
					    case %% Line 710
						 call 'erlang':'>='
						     (B, 97) of
					      %% Line 710
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    call 'erlang':'=<'
							(B, 102)
						-| ['compiler_generated'] )
					      %% Line 710
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    'false'
						-| ['compiler_generated'] )
					      %% Line 710
					      ( <_252> when 'true' ->
						    _252
						-| ['compiler_generated'] )
					    end
					in  ( let <_263> =
						  case _254 of
						    %% Line 710
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  'true'
						      -| ['compiler_generated'] )
						    %% Line 710
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_258> =
							      case call 'erlang':'>='
								       (B, 65) of
								( <( 'true'
								     -| ['compiler_generated'] )> when 'true' ->
								      call 'erlang':'=<'
									  (B, 70)
								  -| ['compiler_generated'] )
								( <( 'false'
								     -| ['compiler_generated'] )> when 'true' ->
								      'false'
								  -| ['compiler_generated'] )
								( <_256> when 'true' ->
								      _256
								  -| ['compiler_generated'] )
							      end
							  in  ( case _258 of
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									'true'
								    -| ['compiler_generated'] )
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									( case call 'erlang':'>='
										   (B, 48) of
									    ( <( 'true'
										 -| ['compiler_generated'] )> when 'true' ->
										  call 'erlang':'=<'
										      (B, 57)
									      -| ['compiler_generated'] )
									    ( <( 'false'
										 -| ['compiler_generated'] )> when 'true' ->
										  'false'
									      -| ['compiler_generated'] )
									    ( <_259> when 'true' ->
										  _259
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								  ( <_255> when 'true' ->
									_255
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						    %% Line 710
						    ( <_251> when 'true' ->
							  _251
						      -| ['compiler_generated'] )
						  end
					      in  let <_264> =
						      call 'erlang':'=:='
							  (%% Line 710
							   ( _263
							     -| ['compiler_generated'] ), 'true')
						  in  let <_268> =
							  case %% Line 710
							       call 'erlang':'>='
								   (C, 97) of
							    %% Line 710
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  call 'erlang':'=<'
								      (C, 102)
							      -| ['compiler_generated'] )
							    %% Line 710
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  'false'
							      -| ['compiler_generated'] )
							    %% Line 710
							    ( <_266> when 'true' ->
								  _266
							      -| ['compiler_generated'] )
							  end
						      in  ( let <_277> =
								case _268 of
								  %% Line 710
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									'true'
								    -| ['compiler_generated'] )
								  %% Line 710
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									let <_272> =
									    case call 'erlang':'>='
										     (C, 65) of
									      ( <( 'true'
										   -| ['compiler_generated'] )> when 'true' ->
										    call 'erlang':'=<'
											(C, 70)
										-| ['compiler_generated'] )
									      ( <( 'false'
										   -| ['compiler_generated'] )> when 'true' ->
										    'false'
										-| ['compiler_generated'] )
									      ( <_270> when 'true' ->
										    _270
										-| ['compiler_generated'] )
									    end
									in  ( case _272 of
										( <( 'true'
										     -| ['compiler_generated'] )> when 'true' ->
										      'true'
										  -| ['compiler_generated'] )
										( <( 'false'
										     -| ['compiler_generated'] )> when 'true' ->
										      ( case call 'erlang':'>='
												 (C, 48) of
											  ( <( 'true'
											       -| ['compiler_generated'] )> when 'true' ->
												call 'erlang':'=<'
												    (C, 57)
											    -| ['compiler_generated'] )
											  ( <( 'false'
											       -| ['compiler_generated'] )> when 'true' ->
												'false'
											    -| ['compiler_generated'] )
											  ( <_273> when 'true' ->
												_273
											    -| ['compiler_generated'] )
											end
											-| ['compiler_generated'] )
										  -| ['compiler_generated'] )
										( <_269> when 'true' ->
										      _269
										  -| ['compiler_generated'] )
									      end
									      -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								  %% Line 710
								  ( <_265> when 'true' ->
									_265
								    -| ['compiler_generated'] )
								end
							    in  let <_278> =
								    call 'erlang':'=:='
									(%% Line 710
									 ( _277
									   -| ['compiler_generated'] ), 'true')
								in  let <_279> =
									call 'erlang':'and'
									    (_264, _278)
								    in  let <_280> =
									    call 'erlang':'and'
										(_250, _279)
									in  call 'erlang':'and'
										(_246, _280)
							    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_281> =
		  #{#<%% Line 712
		      92>(%% Line 712
			  8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 712
		      117>(%% Line 712
			   8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 712
		      100>(%% Line 712
			   8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 712
		      A>(%% Line 712
			 8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 712
		      B>(%% Line 712
			 8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 712
		      C>(%% Line 712
			 8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 712
		      92>(%% Line 712
			  8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 712
		      Rest>(%% Line 712
			    'all',8,'binary',['unsigned'|['big']])}#
	      in  %% Line 712
		  apply 'incomplete'/6
		      ('string', _281, Handler, Acc, Stack, Config)
	  %% Line 713
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<F>(8,1,'integer',['unsigned'|['big']]),
	     #<A>(8,1,'integer',['unsigned'|['big']]),
	     #<B>(8,1,'integer',['unsigned'|['big']]),
	     #<C>(8,1,'integer',['unsigned'|['big']])}#,Handler,Acc,Stack,Config>
	      when %% Line 714
		try
		    ( let <_292> =
			  case call 'erlang':'=='
				   (A, 56) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  'true'
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case call 'erlang':'=='
					     (A, 57) of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    ( case call 'erlang':'=='
						       (A, 97) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case call 'erlang':'=='
								 (A, 98) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								'true'
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								( case call 'erlang':'=='
									   (A, 65) of
								    ( <( 'true'
									 -| ['compiler_generated'] )> when 'true' ->
									  'true'
								      -| ['compiler_generated'] )
								    ( <( 'false'
									 -| ['compiler_generated'] )> when 'true' ->
									  call 'erlang':'=='
									      (A, 66)
								      -| ['compiler_generated'] )
								    ( <_286> when 'true' ->
									  _286
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							  ( <_285> when 'true' ->
								_285
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_284> when 'true' ->
						      _284
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <_283> when 'true' ->
					    _283
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_282> when 'true' ->
				  _282
			      -| ['compiler_generated'] )
			  end
		      in  let <_293> =
			      call 'erlang':'=:='
				  (( _292
				     -| ['compiler_generated'] ), 'true')
			  in  ( let <_296> =
				    case %% Line 715
					 call 'erlang':'=='
					     (F, 100) of
				      %% Line 715
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      %% Line 715
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    call 'erlang':'=='
						(F, 68)
					-| ['compiler_generated'] )
				      %% Line 715
				      ( <_294> when 'true' ->
					    _294
					-| ['compiler_generated'] )
				    end
				in  let <_297> =
					call 'erlang':'=:='
					    (%% Line 715
					     ( _296
					       -| ['compiler_generated'] ), 'true')
				    in  let <_301> =
					    case %% Line 716
						 call 'erlang':'>='
						     (B, 97) of
					      %% Line 716
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    call 'erlang':'=<'
							(B, 102)
						-| ['compiler_generated'] )
					      %% Line 716
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    'false'
						-| ['compiler_generated'] )
					      %% Line 716
					      ( <_299> when 'true' ->
						    _299
						-| ['compiler_generated'] )
					    end
					in  ( let <_310> =
						  case _301 of
						    %% Line 716
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  'true'
						      -| ['compiler_generated'] )
						    %% Line 716
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_305> =
							      case call 'erlang':'>='
								       (B, 65) of
								( <( 'true'
								     -| ['compiler_generated'] )> when 'true' ->
								      call 'erlang':'=<'
									  (B, 70)
								  -| ['compiler_generated'] )
								( <( 'false'
								     -| ['compiler_generated'] )> when 'true' ->
								      'false'
								  -| ['compiler_generated'] )
								( <_303> when 'true' ->
								      _303
								  -| ['compiler_generated'] )
							      end
							  in  ( case _305 of
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									'true'
								    -| ['compiler_generated'] )
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									( case call 'erlang':'>='
										   (B, 48) of
									    ( <( 'true'
										 -| ['compiler_generated'] )> when 'true' ->
										  call 'erlang':'=<'
										      (B, 57)
									      -| ['compiler_generated'] )
									    ( <( 'false'
										 -| ['compiler_generated'] )> when 'true' ->
										  'false'
									      -| ['compiler_generated'] )
									    ( <_306> when 'true' ->
										  _306
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								  ( <_302> when 'true' ->
									_302
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						    %% Line 716
						    ( <_298> when 'true' ->
							  _298
						      -| ['compiler_generated'] )
						  end
					      in  let <_311> =
						      call 'erlang':'=:='
							  (%% Line 716
							   ( _310
							     -| ['compiler_generated'] ), 'true')
						  in  let <_315> =
							  case %% Line 716
							       call 'erlang':'>='
								   (C, 97) of
							    %% Line 716
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  call 'erlang':'=<'
								      (C, 102)
							      -| ['compiler_generated'] )
							    %% Line 716
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  'false'
							      -| ['compiler_generated'] )
							    %% Line 716
							    ( <_313> when 'true' ->
								  _313
							      -| ['compiler_generated'] )
							  end
						      in  ( let <_324> =
								case _315 of
								  %% Line 716
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									'true'
								    -| ['compiler_generated'] )
								  %% Line 716
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									let <_319> =
									    case call 'erlang':'>='
										     (C, 65) of
									      ( <( 'true'
										   -| ['compiler_generated'] )> when 'true' ->
										    call 'erlang':'=<'
											(C, 70)
										-| ['compiler_generated'] )
									      ( <( 'false'
										   -| ['compiler_generated'] )> when 'true' ->
										    'false'
										-| ['compiler_generated'] )
									      ( <_317> when 'true' ->
										    _317
										-| ['compiler_generated'] )
									    end
									in  ( case _319 of
										( <( 'true'
										     -| ['compiler_generated'] )> when 'true' ->
										      'true'
										  -| ['compiler_generated'] )
										( <( 'false'
										     -| ['compiler_generated'] )> when 'true' ->
										      ( case call 'erlang':'>='
												 (C, 48) of
											  ( <( 'true'
											       -| ['compiler_generated'] )> when 'true' ->
												call 'erlang':'=<'
												    (C, 57)
											    -| ['compiler_generated'] )
											  ( <( 'false'
											       -| ['compiler_generated'] )> when 'true' ->
												'false'
											    -| ['compiler_generated'] )
											  ( <_320> when 'true' ->
												_320
											    -| ['compiler_generated'] )
											end
											-| ['compiler_generated'] )
										  -| ['compiler_generated'] )
										( <_316> when 'true' ->
										      _316
										  -| ['compiler_generated'] )
									      end
									      -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								  %% Line 716
								  ( <_312> when 'true' ->
									_312
								    -| ['compiler_generated'] )
								end
							    in  let <_325> =
								    call 'erlang':'=:='
									(%% Line 716
									 ( _324
									   -| ['compiler_generated'] ), 'true')
								in  let <_326> =
									call 'erlang':'and'
									    (_311, _325)
								    in  let <_327> =
									    call 'erlang':'and'
										(_297, _326)
									in  call 'erlang':'and'
										(_293, _327)
							    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_328> =
		  #{#<%% Line 718
		      92>(%% Line 718
			  8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 718
		      117>(%% Line 718
			   8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 718
		      100>(%% Line 718
			   8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 718
		      A>(%% Line 718
			 8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 718
		      B>(%% Line 718
			 8,1,'integer',['unsigned'|['big']]),
		    #<%% Line 718
		      C>(%% Line 718
			 8,1,'integer',['unsigned'|['big']])}#
	      in  %% Line 718
		  apply 'incomplete'/6
		      ('string', _328, Handler, Acc, Stack, Config)
	  %% Line 719
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<A>(8,1,'integer',['unsigned'|['big']]),
	     #<B>(8,1,'integer',['unsigned'|['big']]),
	     #<C>(8,1,'integer',['unsigned'|['big']]),
	     #<D>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,Stack,Config>
	      when %% Line 720
		try
		    let <_332> =
			case call 'erlang':'>='
				 (A, 97) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=<'
				    (A, 102)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_330> when 'true' ->
				_330
			    -| ['compiler_generated'] )
			end
		    in  ( let <_341> =
			      case _332 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_336> =
					  case call 'erlang':'>='
						   (A, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'=<'
						      (A, 70)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_334> when 'true' ->
						  _334
					      -| ['compiler_generated'] )
					  end
				      in  ( case _336 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (A, 48) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      call 'erlang':'=<'
								  (A, 57)
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_337> when 'true' ->
							      _337
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_333> when 'true' ->
						    _333
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_329> when 'true' ->
				      _329
				  -| ['compiler_generated'] )
			      end
			  in  let <_342> =
				  call 'erlang':'=:='
				      (( _341
					 -| ['compiler_generated'] ), 'true')
			      in  let <_346> =
				      case call 'erlang':'>='
					       (B, 97) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (B, 102)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_344> when 'true' ->
					      _344
					  -| ['compiler_generated'] )
				      end
				  in  ( let <_355> =
					    case _346 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_350> =
							case call 'erlang':'>='
								 (B, 65) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erlang':'=<'
								    (B, 70)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_348> when 'true' ->
								_348
							    -| ['compiler_generated'] )
							end
						    in  ( case _350 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  ( case call 'erlang':'>='
									     (B, 48) of
								      ( <( 'true'
									   -| ['compiler_generated'] )> when 'true' ->
									    call 'erlang':'=<'
										(B, 57)
									-| ['compiler_generated'] )
								      ( <( 'false'
									   -| ['compiler_generated'] )> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								      ( <_351> when 'true' ->
									    _351
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_347> when 'true' ->
								  _347
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_343> when 'true' ->
						    _343
						-| ['compiler_generated'] )
					    end
					in  let <_356> =
						call 'erlang':'=:='
						    (( _355
						       -| ['compiler_generated'] ), 'true')
					    in  let <_360> =
						    case call 'erlang':'>='
							     (C, 97) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    call 'erlang':'=<'
								(C, 102)
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_358> when 'true' ->
							    _358
							-| ['compiler_generated'] )
						    end
						in  ( let <_369> =
							  case _360 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  let <_364> =
								      case call 'erlang':'>='
									       (C, 65) of
									( <( 'true'
									     -| ['compiler_generated'] )> when 'true' ->
									      call 'erlang':'=<'
										  (C, 70)
									  -| ['compiler_generated'] )
									( <( 'false'
									     -| ['compiler_generated'] )> when 'true' ->
									      'false'
									  -| ['compiler_generated'] )
									( <_362> when 'true' ->
									      _362
									  -| ['compiler_generated'] )
								      end
								  in  ( case _364 of
									  ( <( 'true'
									       -| ['compiler_generated'] )> when 'true' ->
										'true'
									    -| ['compiler_generated'] )
									  ( <( 'false'
									       -| ['compiler_generated'] )> when 'true' ->
										( case call 'erlang':'>='
											   (C, 48) of
										    ( <( 'true'
											 -| ['compiler_generated'] )> when 'true' ->
											  call 'erlang':'=<'
											      (C, 57)
										      -| ['compiler_generated'] )
										    ( <( 'false'
											 -| ['compiler_generated'] )> when 'true' ->
											  'false'
										      -| ['compiler_generated'] )
										    ( <_365> when 'true' ->
											  _365
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									  ( <_361> when 'true' ->
										_361
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_357> when 'true' ->
								  _357
							      -| ['compiler_generated'] )
							  end
						      in  let <_370> =
							      call 'erlang':'=:='
								  (( _369
								     -| ['compiler_generated'] ), 'true')
							  in  let <_374> =
								  case call 'erlang':'>='
									   (D, 97) of
								    ( <( 'true'
									 -| ['compiler_generated'] )> when 'true' ->
									  call 'erlang':'=<'
									      (D, 102)
								      -| ['compiler_generated'] )
								    ( <( 'false'
									 -| ['compiler_generated'] )> when 'true' ->
									  'false'
								      -| ['compiler_generated'] )
								    ( <_372> when 'true' ->
									  _372
								      -| ['compiler_generated'] )
								  end
							      in  ( let <_383> =
									case _374 of
									  ( <( 'true'
									       -| ['compiler_generated'] )> when 'true' ->
										'true'
									    -| ['compiler_generated'] )
									  ( <( 'false'
									       -| ['compiler_generated'] )> when 'true' ->
										let <_378> =
										    case call 'erlang':'>='
											     (D, 65) of
										      ( <( 'true'
											   -| ['compiler_generated'] )> when 'true' ->
											    call 'erlang':'=<'
												(D, 70)
											-| ['compiler_generated'] )
										      ( <( 'false'
											   -| ['compiler_generated'] )> when 'true' ->
											    'false'
											-| ['compiler_generated'] )
										      ( <_376> when 'true' ->
											    _376
											-| ['compiler_generated'] )
										    end
										in  ( case _378 of
											( <( 'true'
											     -| ['compiler_generated'] )> when 'true' ->
											      'true'
											  -| ['compiler_generated'] )
											( <( 'false'
											     -| ['compiler_generated'] )> when 'true' ->
											      ( case call 'erlang':'>='
													 (D, 48) of
												  ( <( 'true'
												       -| ['compiler_generated'] )> when 'true' ->
													call 'erlang':'=<'
													    (D, 57)
												    -| ['compiler_generated'] )
												  ( <( 'false'
												       -| ['compiler_generated'] )> when 'true' ->
													'false'
												    -| ['compiler_generated'] )
												  ( <_379> when 'true' ->
													_379
												    -| ['compiler_generated'] )
												end
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
											( <_375> when 'true' ->
											      _375
											  -| ['compiler_generated'] )
										      end
										      -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									  ( <_371> when 'true' ->
										_371
									    -| ['compiler_generated'] )
									end
								    in  let <_384> =
									    call 'erlang':'=:='
										(( _383
										   -| ['compiler_generated'] ), 'true')
									in  let <_385> =
										call 'erlang':'and'
										    (_370, _384)
									    in  let <_386> =
										    call 'erlang':'and'
											(_356, _385)
										in  call 'erlang':'and'
											(_342, _386)
								    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 721
	      case call 'erlang':'list_to_integer'
		       ([A|[B|[C|[D|[]]]]], 16) of
		%% Line 722
		<Codepoint>
		    when let <_387> =
			  call 'erlang':'<'
			      (Codepoint, 55296)
		      in  let <_388> =
			      call 'erlang':'>'
				  (Codepoint, 57343)
			  in  call 'erlang':'or'
				  (_387, _388) ->
		    let <_389> =
			case %% Line 723
			     <Codepoint,Config> of
			  %% Line 746
			  ( <_602,( {( 'config'
				       -| ['compiler_generated'] ),( 'true'
								     -| ['compiler_generated'] ),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}
				    -| ['compiler_generated'] )> when ( 'true'
									-| ['compiler_generated'] ) ->
				( #{( #<_602>(( 8
						-| ['compiler_generated'] ),( 1
									      -| ['compiler_generated'] ),( 'integer'
													    -| ['compiler_generated'] ),( ['unsigned'|['big']]
																	  -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 747
			  ( <( 8
			       -| ['compiler_generated'] ),( {( 'config'
								-| ['compiler_generated'] ),_27,_28,( 'true'
												      -| ['compiler_generated'] ),_29,_30,_31,_32,_33,_34,_35,_36,_37,_38,_39,_40,_41}
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				( #{#<92>(8,1,'integer',['unsigned'|['big']]),
				    #<98>(8,1,'integer',['unsigned'|['big']])}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 748
			  ( <( 9
			       -| ['compiler_generated'] ),( {( 'config'
								-| ['compiler_generated'] ),_42,_43,( 'true'
												      -| ['compiler_generated'] ),_44,_45,_46,_47,_48,_49,_50,_51,_52,_53,_54,_55,_56}
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				( #{#<92>(8,1,'integer',['unsigned'|['big']]),
				    #<116>(8,1,'integer',['unsigned'|['big']])}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 749
			  ( <( 10
			       -| ['compiler_generated'] ),( {( 'config'
								-| ['compiler_generated'] ),_57,_58,( 'true'
												      -| ['compiler_generated'] ),_59,_60,_61,_62,_63,_64,_65,_66,_67,_68,_69,_70,_71}
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				( #{#<92>(8,1,'integer',['unsigned'|['big']]),
				    #<110>(8,1,'integer',['unsigned'|['big']])}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 750
			  ( <( 12
			       -| ['compiler_generated'] ),( {( 'config'
								-| ['compiler_generated'] ),_72,_73,( 'true'
												      -| ['compiler_generated'] ),_74,_75,_76,_77,_78,_79,_80,_81,_82,_83,_84,_85,_86}
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				( #{#<92>(8,1,'integer',['unsigned'|['big']]),
				    #<102>(8,1,'integer',['unsigned'|['big']])}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 751
			  ( <( 13
			       -| ['compiler_generated'] ),( {( 'config'
								-| ['compiler_generated'] ),_87,_88,( 'true'
												      -| ['compiler_generated'] ),_89,_90,_91,_92,_93,_94,_95,_96,_97,_98,_99,_100,_101}
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				( #{#<92>(8,1,'integer',['unsigned'|['big']]),
				    #<114>(8,1,'integer',['unsigned'|['big']])}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 752
			  ( <( 34
			       -| ['compiler_generated'] ),( {( 'config'
								-| ['compiler_generated'] ),_102,_103,( 'true'
													-| ['compiler_generated'] ),_104,_105,_106,_107,_108,_109,_110,_111,_112,_113,_114,_115,_116}
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				( #{#<92>(8,1,'integer',['unsigned'|['big']]),
				    #<34>(8,1,'integer',['unsigned'|['big']])}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 753
			  ( <( 47
			       -| ['compiler_generated'] ),( _603 = ( {( 'config'
									 -| ['compiler_generated'] ),_117,_118,( 'true'
														 -| ['compiler_generated'] ),_119,_120,_121,_122,_123,_124,_125,_126,_127,_128,_129,_130,_131}
								      -| ['compiler_generated'] )
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 754
				( case _603 of
				    ( <( {( 'config'
					    -| ['compiler_generated'] ),_132,_rec18,_133,_134,_135,_136,_137,_138,_139,_140,_141,_142,_143,_144,_145,_146}
					 -| ['compiler_generated'] )> when ( 'true'
									     -| ['compiler_generated'] ) ->
					  ( case _rec18 of
					      %% Line 755
					      ( <( 'true'
						   -| ['compiler_generated'] )> when ( 'true'
										       -| ['compiler_generated'] ) ->
						    ( #{#<92>(8,1,'integer',['unsigned'|['big']]),
							#<47>(8,1,'integer',['unsigned'|['big']])}#
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      %% Line 756
					      ( <( 'false'
						   -| ['compiler_generated'] )> when ( 'true'
										       -| ['compiler_generated'] ) ->
						    ( #{#<47>(8,1,'integer',['unsigned'|['big']])}#
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_605> when ( 'true'
							      -| ['compiler_generated'] ) ->
						    ( primop ( 'match_fail'
							       -| ['compiler_generated'] )
							  (( {( 'case_clause'
								-| ['compiler_generated'] ),_605}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <_147> when ( 'true'
						    -| ['compiler_generated'] ) ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','config'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 758
			  ( <( 92
			       -| ['compiler_generated'] ),( {( 'config'
								-| ['compiler_generated'] ),_148,_149,( 'true'
													-| ['compiler_generated'] ),_150,_151,_152,_153,_154,_155,_156,_157,_158,_159,_160,_161,_162}
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				( #{#<92>(8,1,'integer',['unsigned'|['big']]),
				    #<92>(8,1,'integer',['unsigned'|['big']])}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 759
			  ( <X,( _607 = ( {( 'config'
					     -| ['compiler_generated'] ),_163,_164,( 'true'
										     -| ['compiler_generated'] ),_165,_166,_167,_168,_169,_170,_171,_172,_173,_174,_175,_176,_177}
					  -| ['compiler_generated'] )
				 -| ['compiler_generated'] )>
				when ( let <_5> =
					call ( 'erlang'
					       -| ['compiler_generated'] ):( '=='
									     -| ['compiler_generated'] )
					    (X, ( 8232
						  -| ['compiler_generated'] ))
				    in  ( let <_6> =
					      call ( 'erlang'
						     -| ['compiler_generated'] ):( '=='
										   -| ['compiler_generated'] )
						  (X, ( 8233
							-| ['compiler_generated'] ))
					  in  ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'or'
										     -| ['compiler_generated'] )
						    (_5, _6)
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] ) ->
				%% Line 760
				( case _607 of
				    ( <( {( 'config'
					    -| ['compiler_generated'] ),_178,_179,_180,_181,_182,_183,_184,_185,_186,_187,_188,_189,_190,_rec19,_191,_192}
					 -| ['compiler_generated'] )> when ( 'true'
									     -| ['compiler_generated'] ) ->
					  ( case _rec19 of
					      %% Line 761
					      ( <( 'true'
						   -| ['compiler_generated'] )> when ( 'true'
										       -| ['compiler_generated'] ) ->
						    ( #{( #<X>(( 'undefined'
								 -| ['compiler_generated'] ),( 'undefined'
											       -| ['compiler_generated'] ),( 'utf8'
															     -| ['compiler_generated'] ),( ['unsigned'|['big']]
																			   -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )}#
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      %% Line 762
					      ( <( 'false'
						   -| ['compiler_generated'] )> when ( 'true'
										       -| ['compiler_generated'] ) ->
						    ( apply 'json_escape_sequence'/1
							  (X)
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_9> when ( 'true'
							    -| ['compiler_generated'] ) ->
						    ( primop ( 'match_fail'
							       -| ['compiler_generated'] )
							  (( {( 'case_clause'
								-| ['compiler_generated'] ),_9}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <_193> when ( 'true'
						    -| ['compiler_generated'] ) ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','config'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 764
			  ( <X,( {( 'config'
				    -| ['compiler_generated'] ),_194,_195,( 'true'
									    -| ['compiler_generated'] ),_196,_197,_198,_199,_200,_201,_202,_203,_204,_205,_206,_207,_208}
				 -| ['compiler_generated'] )>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( '<'
									 -| ['compiler_generated'] )
					(X,
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				%% Line 765
				( apply 'json_escape_sequence'/1
				      (X)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 766
			  ( <X,_X_Config> when ( 'true'
						 -| ['compiler_generated'] ) ->
				( #{( #<X>(( 'undefined'
					     -| ['compiler_generated'] ),( 'undefined'
									   -| ['compiler_generated'] ),( 'utf8'
													 -| ['compiler_generated'] ),( ['unsigned'|['big']]
																       -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )}#
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		    in  %% Line 723
			apply 'string'/5
			    (Rest, Handler, [Acc|[_389|[]]], Stack, Config)
		%% Line 724
		<_494>
		    when ( try
			    ( let <_392> =
				  case ( call ( 'erlang'
						-| ['compiler_generated'] ):( 'is_record'
									      -| ['compiler_generated'] )
					     (Config, ( 'config'
							-| ['compiler_generated'] ), ( 17
										       -| ['compiler_generated'] ))
					 -| ['compiler_generated'] ) of
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  ( 'true'
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  ( 'fail'
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <( _390
					 -| ['compiler_generated'] )> when 'true' ->
					  ( _390
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
			      in  let <_393> =
				      call 'erlang':'=:='
					  (( _392
					     -| ['compiler_generated'] ), 'true')
				  in  let <_394> =
					  call 'erlang':'element'
					      (8, Config)
				      in  let <_395> =
					      call 'erlang':'=:='
						  (_394, 'true')
					  in  ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'and'
										     -| ['compiler_generated'] )
						    (_393, _395)
						-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 725
		    ( case Config of
			( <( {'config',_495,_496,_497,_498,_499,_500,_501,_502,_503,_504,_505,_506,_507,_508,_rec15,_509}
			     -| ['compiler_generated'] )> when 'true' ->
			      case _rec15 of
				<'false'> when 'true' ->
				    call 'erlang':'error'
					('badarg')
				<F> when 'true' ->
				    let <_399> =
					#{#<92>(8,1,'integer',['unsigned'|['big']]),
					  #<117>(8,1,'integer',['unsigned'|['big']]),
					  #<A>(8,1,'integer',['unsigned'|['big']]),
					  #<B>(8,1,'integer',['unsigned'|['big']]),
					  #<C>(8,1,'integer',['unsigned'|['big']]),
					  #<D>(8,1,'integer',['unsigned'|['big']]),
					  #<Rest>('all',8,'binary',['unsigned'|['big']])}#
				    in  let <_398> =
					    call 'jsx_config':'config_to_list'
						(Config)
					in  apply F
						(_399, {'decoder','string',Handler,Acc,Stack}, _398)
			      end
			  -| ['compiler_generated'] )
			( <_510> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','config'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 726
		<_511> when 'true' ->
		    apply 'string'/5
			(Rest, Handler, [Acc|[#{#<239>(8,1,'integer',['unsigned'|['big']]),
						#<191>(8,1,'integer',['unsigned'|['big']]),
						#<189>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
	      end
	  %% Line 728
	  <Bin,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 729
	      case apply 'is_partial_escape'/1
		       (Bin) of
		%% Line 730
		<'true'> when 'true' ->
		    let <_402> =
			#{#<92>(8,1,'integer',['unsigned'|['big']]),
			  #<Bin>('all',8,'binary',['unsigned'|['big']])}#
		    in  apply 'incomplete'/6
			    ('string', _402, Handler, Acc, Stack, Config)
		%% Line 731
		<'false'> when 'true' ->
		    ( case Config of
			( <( {'config',_512,_513,_514,_515,_516,_517,_518,_519,_rec16,_520,_521,_522,_523,_524,_525,_526}
			     -| ['compiler_generated'] )> when 'true' ->
			      case _rec16 of
				%% Line 732
				<'true'> when 'true' ->
				    ( case Config of
					( <( {'config',_528,_529,_530,_531,_532,_533,_534,_535,_536,_537,_538,_539,_540,_541,_rec17,_542}
					     -| ['compiler_generated'] )> when 'true' ->
					      case _rec17 of
						<'false'> when 'true' ->
						    call 'erlang':'error'
							('badarg')
						<F> when 'true' ->
						    let <_408> =
							#{#<92>(8,1,'integer',['unsigned'|['big']]),
							  #<Bin>('all',8,'binary',['unsigned'|['big']])}#
						    in  let <_407> =
							    call 'jsx_config':'config_to_list'
								(Config)
							in  apply F
								(_408, {'decoder','string',Handler,Acc,Stack}, _407)
					      end
					  -| ['compiler_generated'] )
					( <_543> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','config'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				%% Line 733
				<'false'> when 'true' ->
				    apply 'string'/5
					(Bin, Handler, [Acc|[#{#<92>(8,1,'integer',['unsigned'|['big']])}#]], Stack, Config)
				( <_410> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_410})
				  -| ['compiler_generated'] )
			      end
			  -| ['compiler_generated'] )
			( <_527> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','config'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_411> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_411})
		  -| ['compiler_generated'] )
	      end
	end
'is_partial_escape'/1 =
    %% Line 738
    fun (_0) ->
	case _0 of
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<A>(8,1,'integer',['unsigned'|['big']]),
	     #<B>(8,1,'integer',['unsigned'|['big']]),
	     #<C>(8,1,'integer',['unsigned'|['big']])}#>
	      when try
		    let <_4> =
			case call 'erlang':'>='
				 (A, 97) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=<'
				    (A, 102)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_2> when 'true' ->
				_2
			    -| ['compiler_generated'] )
			end
		    in  ( let <_13> =
			      case _4 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_8> =
					  case call 'erlang':'>='
						   (A, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'=<'
						      (A, 70)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_6> when 'true' ->
						  _6
					      -| ['compiler_generated'] )
					  end
				      in  ( case _8 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (A, 48) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      call 'erlang':'=<'
								  (A, 57)
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_9> when 'true' ->
							      _9
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_5> when 'true' ->
						    _5
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_1> when 'true' ->
				      _1
				  -| ['compiler_generated'] )
			      end
			  in  let <_14> =
				  call 'erlang':'=:='
				      (( _13
					 -| ['compiler_generated'] ), 'true')
			      in  let <_18> =
				      case call 'erlang':'>='
					       (B, 97) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (B, 102)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_16> when 'true' ->
					      _16
					  -| ['compiler_generated'] )
				      end
				  in  ( let <_27> =
					    case _18 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_22> =
							case call 'erlang':'>='
								 (B, 65) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erlang':'=<'
								    (B, 70)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_20> when 'true' ->
								_20
							    -| ['compiler_generated'] )
							end
						    in  ( case _22 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  ( case call 'erlang':'>='
									     (B, 48) of
								      ( <( 'true'
									   -| ['compiler_generated'] )> when 'true' ->
									    call 'erlang':'=<'
										(B, 57)
									-| ['compiler_generated'] )
								      ( <( 'false'
									   -| ['compiler_generated'] )> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								      ( <_23> when 'true' ->
									    _23
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_19> when 'true' ->
								  _19
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_15> when 'true' ->
						    _15
						-| ['compiler_generated'] )
					    end
					in  let <_28> =
						call 'erlang':'=:='
						    (( _27
						       -| ['compiler_generated'] ), 'true')
					    in  let <_32> =
						    case call 'erlang':'>='
							     (C, 97) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    call 'erlang':'=<'
								(C, 102)
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_30> when 'true' ->
							    _30
							-| ['compiler_generated'] )
						    end
						in  ( let <_41> =
							  case _32 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  let <_36> =
								      case call 'erlang':'>='
									       (C, 65) of
									( <( 'true'
									     -| ['compiler_generated'] )> when 'true' ->
									      call 'erlang':'=<'
										  (C, 70)
									  -| ['compiler_generated'] )
									( <( 'false'
									     -| ['compiler_generated'] )> when 'true' ->
									      'false'
									  -| ['compiler_generated'] )
									( <_34> when 'true' ->
									      _34
									  -| ['compiler_generated'] )
								      end
								  in  ( case _36 of
									  ( <( 'true'
									       -| ['compiler_generated'] )> when 'true' ->
										'true'
									    -| ['compiler_generated'] )
									  ( <( 'false'
									       -| ['compiler_generated'] )> when 'true' ->
										( case call 'erlang':'>='
											   (C, 48) of
										    ( <( 'true'
											 -| ['compiler_generated'] )> when 'true' ->
											  call 'erlang':'=<'
											      (C, 57)
										      -| ['compiler_generated'] )
										    ( <( 'false'
											 -| ['compiler_generated'] )> when 'true' ->
											  'false'
										      -| ['compiler_generated'] )
										    ( <_37> when 'true' ->
											  _37
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									  ( <_33> when 'true' ->
										_33
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_29> when 'true' ->
								  _29
							      -| ['compiler_generated'] )
							  end
						      in  let <_42> =
							      call 'erlang':'=:='
								  (( _41
								     -| ['compiler_generated'] ), 'true')
							  in  let <_43> =
								  call 'erlang':'and'
								      (_28, _42)
							      in  call 'erlang':'and'
								      (_14, _43)
						      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      'true'
	  %% Line 739
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<A>(8,1,'integer',['unsigned'|['big']]),
	     #<B>(8,1,'integer',['unsigned'|['big']])}#>
	      when try
		    let <_47> =
			case call 'erlang':'>='
				 (A, 97) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=<'
				    (A, 102)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_45> when 'true' ->
				_45
			    -| ['compiler_generated'] )
			end
		    in  ( let <_56> =
			      case _47 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_51> =
					  case call 'erlang':'>='
						   (A, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'=<'
						      (A, 70)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_49> when 'true' ->
						  _49
					      -| ['compiler_generated'] )
					  end
				      in  ( case _51 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (A, 48) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      call 'erlang':'=<'
								  (A, 57)
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_52> when 'true' ->
							      _52
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_48> when 'true' ->
						    _48
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_44> when 'true' ->
				      _44
				  -| ['compiler_generated'] )
			      end
			  in  let <_57> =
				  call 'erlang':'=:='
				      (( _56
					 -| ['compiler_generated'] ), 'true')
			      in  let <_61> =
				      case call 'erlang':'>='
					       (B, 97) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (B, 102)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_59> when 'true' ->
					      _59
					  -| ['compiler_generated'] )
				      end
				  in  ( let <_70> =
					    case _61 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_65> =
							case call 'erlang':'>='
								 (B, 65) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erlang':'=<'
								    (B, 70)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_63> when 'true' ->
								_63
							    -| ['compiler_generated'] )
							end
						    in  ( case _65 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  ( case call 'erlang':'>='
									     (B, 48) of
								      ( <( 'true'
									   -| ['compiler_generated'] )> when 'true' ->
									    call 'erlang':'=<'
										(B, 57)
									-| ['compiler_generated'] )
								      ( <( 'false'
									   -| ['compiler_generated'] )> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								      ( <_66> when 'true' ->
									    _66
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_62> when 'true' ->
								  _62
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_58> when 'true' ->
						    _58
						-| ['compiler_generated'] )
					    end
					in  let <_71> =
						call 'erlang':'=:='
						    (( _70
						       -| ['compiler_generated'] ), 'true')
					    in  call 'erlang':'and'
						    (_57, _71)
					-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      'true'
	  %% Line 740
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<A>(8,1,'integer',['unsigned'|['big']])}#>
	      when try
		    let <_75> =
			case call 'erlang':'>='
				 (A, 97) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=<'
				    (A, 102)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_73> when 'true' ->
				_73
			    -| ['compiler_generated'] )
			end
		    in  ( let <_84> =
			      case _75 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_79> =
					  case call 'erlang':'>='
						   (A, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'=<'
						      (A, 70)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_77> when 'true' ->
						  _77
					      -| ['compiler_generated'] )
					  end
				      in  ( case _79 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (A, 48) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      call 'erlang':'=<'
								  (A, 57)
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_80> when 'true' ->
							      _80
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_76> when 'true' ->
						    _76
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_72> when 'true' ->
				      _72
				  -| ['compiler_generated'] )
			      end
			  in  ( call 'erlang':'=:='
				    (( _84
				       -| ['compiler_generated'] ), 'true')
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      'true'
	  %% Line 741
	  <#{#<117>(8,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      'true'
	  %% Line 742
	  <#{}#> when 'true' ->
	      'true'
	  %% Line 743
	  <_86> when 'true' ->
	      'false'
	end
'maybe_replace'/2 =
    %% Line 746
    fun (_0,_1) ->
	case <_0,_1> of
	  <C,{'config','true',_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26}> when 'true' ->
	      #{#<C>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 747
	  <8,{'config',_27,_28,'true',_29,_30,_31,_32,_33,_34,_35,_36,_37,_38,_39,_40,_41}> when 'true' ->
	      #{#<92>(8,1,'integer',['unsigned'|['big']]),
		#<98>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 748
	  <9,{'config',_42,_43,'true',_44,_45,_46,_47,_48,_49,_50,_51,_52,_53,_54,_55,_56}> when 'true' ->
	      #{#<92>(8,1,'integer',['unsigned'|['big']]),
		#<116>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 749
	  <10,{'config',_57,_58,'true',_59,_60,_61,_62,_63,_64,_65,_66,_67,_68,_69,_70,_71}> when 'true' ->
	      #{#<92>(8,1,'integer',['unsigned'|['big']]),
		#<110>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 750
	  <12,{'config',_72,_73,'true',_74,_75,_76,_77,_78,_79,_80,_81,_82,_83,_84,_85,_86}> when 'true' ->
	      #{#<92>(8,1,'integer',['unsigned'|['big']]),
		#<102>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 751
	  <13,{'config',_87,_88,'true',_89,_90,_91,_92,_93,_94,_95,_96,_97,_98,_99,_100,_101}> when 'true' ->
	      #{#<92>(8,1,'integer',['unsigned'|['big']]),
		#<114>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 752
	  <34,{'config',_102,_103,'true',_104,_105,_106,_107,_108,_109,_110,_111,_112,_113,_114,_115,_116}> when 'true' ->
	      #{#<92>(8,1,'integer',['unsigned'|['big']]),
		#<34>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 753
	  <47,Config = {'config',_117,_118,'true',_119,_120,_121,_122,_123,_124,_125,_126,_127,_128,_129,_130,_131}> when 'true' ->
	      %% Line 754
	      ( case Config of
		  ( <( {'config',_132,_rec18,_133,_134,_135,_136,_137,_138,_139,_140,_141,_142,_143,_144,_145,_146}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec18 of
			  %% Line 755
			  <'true'> when 'true' ->
			      #{#<92>(8,1,'integer',['unsigned'|['big']]),
				#<47>(8,1,'integer',['unsigned'|['big']])}#
			  %% Line 756
			  <'false'> when 'true' ->
			      #{#<47>(8,1,'integer',['unsigned'|['big']])}#
			  ( <_4> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_4})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_147> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 758
	  <92,{'config',_148,_149,'true',_150,_151,_152,_153,_154,_155,_156,_157,_158,_159,_160,_161,_162}> when 'true' ->
	      #{#<92>(8,1,'integer',['unsigned'|['big']]),
		#<92>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 759
	  <X,Config = {'config',_163,_164,'true',_165,_166,_167,_168,_169,_170,_171,_172,_173,_174,_175,_176,_177}>
	      when let <_5> =
		    call 'erlang':'=='
			(X, 8232)
		in  let <_6> =
			call 'erlang':'=='
			    (X, 8233)
		    in  call 'erlang':'or'
			    (_5, _6) ->
	      %% Line 760
	      ( case Config of
		  ( <( {'config',_178,_179,_180,_181,_182,_183,_184,_185,_186,_187,_188,_189,_190,_rec19,_191,_192}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec19 of
			  %% Line 761
			  <'true'> when 'true' ->
			      #{#<X>('undefined','undefined','utf8',['unsigned'|['big']])}#
			  %% Line 762
			  <'false'> when 'true' ->
			      apply 'json_escape_sequence'/1
				  (X)
			  ( <_9> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_9})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_193> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 764
	  <X,{'config',_194,_195,'true',_196,_197,_198,_199,_200,_201,_202,_203,_204,_205,_206,_207,_208}>
	      when call 'erlang':'<'
		    (X,
		     32) ->
	      %% Line 765
	      apply 'json_escape_sequence'/1
		  (X)
	  %% Line 766
	  <X,_X_Config> when 'true' ->
	      #{#<X>('undefined','undefined','utf8',['unsigned'|['big']])}#
	end
'json_escape_sequence'/1 =
    %% Line 770
    fun (_0) ->
	case _0 of
	  <X>
	      when call 'erlang':'<'
		    (_0,
		     65536) ->
	      %% Line 771
	      case #{#<X>(16,1,'integer',['unsigned'|['big']])}# of
		<#{#<A>(4,1,'integer',['unsigned'|['big']]),
		   #<B>(4,1,'integer',['unsigned'|['big']]),
		   #<C>(4,1,'integer',['unsigned'|['big']]),
		   #<D>(4,1,'integer',['unsigned'|['big']])}#> when 'true' ->
		    let <_5> =
			apply %% Line 772
			      'to_hex'/1
			    (%% Line 772
			     A)
		    in  let <_4> =
			    apply %% Line 772
				  'to_hex'/1
				(%% Line 772
				 B)
			in  let <_3> =
				apply %% Line 772
				      'to_hex'/1
				    (%% Line 772
				     C)
			    in  let <_2> =
				    apply %% Line 772
					  'to_hex'/1
					(%% Line 772
					 D)
				in  %% Line 772
				    #{#<92>(8,1,'integer',['unsigned'|['big']]),
				      #<117>(8,1,'integer',['unsigned'|['big']]),
				      #<_5>(8,1,'integer',['unsigned'|['big']]),
				      #<_4>(8,1,'integer',['unsigned'|['big']]),
				      #<_3>(8,1,'integer',['unsigned'|['big']]),
				      #<_2>(8,1,'integer',['unsigned'|['big']])}#
		( <_1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 773
	  <X> when 'true' ->
	      let <Adjusted> =
		  call %% Line 774
		       'erlang':%% Line 774
				'-'
		      (%% Line 774
		       X, %% Line 774
			  65536)
	      in  %% Line 775
		  case #{#<Adjusted>(20,1,'integer',['unsigned'|['big']])}# of
		    <#{#<A>(10,1,'integer',['unsigned'|['big']]),
		       #<B>(10,1,'integer',['unsigned'|['big']])}#> when 'true' ->
			let <_8> =
			    call %% Line 776
				 'erlang':%% Line 776
					  '+'
				(%% Line 776
				 A, %% Line 776
				    55296)
			in  let <_9> =
				apply %% Line 776
				      'json_escape_sequence'/1
				    (_8)
			    in  let <_10> =
				    call %% Line 776
					 'erlang':%% Line 776
						  '+'
					(%% Line 776
					 B, %% Line 776
					    56320)
				in  let <_11> =
					apply %% Line 776
					      'json_escape_sequence'/1
					    (_10)
				    in  %% Line 776
					[_9|[_11|[]]]
		    ( <_7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7})
		      -| ['compiler_generated'] )
		  end
	end
'to_hex'/1 =
    %% Line 780
    fun (_0) ->
	case _0 of
	  <10> when 'true' ->
	      97
	  %% Line 781
	  <11> when 'true' ->
	      98
	  %% Line 782
	  <12> when 'true' ->
	      99
	  %% Line 783
	  <13> when 'true' ->
	      100
	  %% Line 784
	  <14> when 'true' ->
	      101
	  %% Line 785
	  <15> when 'true' ->
	      102
	  %% Line 786
	  <X> when 'true' ->
	      call 'erlang':'+'
		  (X, 48)
	end
'number'/5 =
    %% Line 789
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <#{#<101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,['integer'|Stack],Config> when 'true' ->
	      %% Line 790
	      apply 'number'/5
		  (Rest, Handler, [Acc|[46|[48|[101]]]], ['e'|Stack], Config)
	  %% Line 791
	  <#{#<69>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,['integer'|Stack],Config> when 'true' ->
	      %% Line 792
	      apply 'number'/5
		  (Rest, Handler, [Acc|[46|[48|[101]]]], ['e'|Stack], Config)
	  %% Line 793
	  <#{#<101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,['zero'|Stack],Config> when 'true' ->
	      %% Line 794
	      apply 'number'/5
		  (Rest, Handler, [Acc|[46|[48|[101]]]], ['e'|Stack], Config)
	  %% Line 795
	  <#{#<69>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Acc,['zero'|Stack],Config> when 'true' ->
	      %% Line 796
	      apply 'number'/5
		  (Rest, Handler, [Acc|[46|[48|[101]]]], ['e'|Stack], Config)
	  %% Line 797
	  <#{}#,Handler,Acc,[State|Stack],Config = {'config',_28,_29,_30,_31,_32,_33,_34,_35,_36,_37,'false',_38,_39,_40,_41,_42}> when 'true' ->
	      let <_6> =
		  case %% Line 798
		       State of
		    %% Line 799
		    <'zero'> when 'true' ->
			'integer'
		    %% Line 800
		    <'integer'> when 'true' ->
			'integer'
		    %% Line 801
		    <'decimal'> when 'true' ->
			'float'
		    %% Line 802
		    <'exp'> when 'true' ->
			'float'
		    ( <_5> when 'true' ->
			  %% Line 798
			  primop 'match_fail'
			      ({'case_clause',_5})
		      -| ['compiler_generated'] )
		  end
	      in  let <_8> =
		      call %% Line 804
			   'erlang':%% Line 804
				    'iolist_to_binary'
			  (%% Line 804
			   Acc)
		  in  %% Line 804
		      apply 'finish_number'/5
			  (#{}#, Handler, {_6,_8}, Stack, Config)
	  %% Line 805
	  <#{}#,Handler,Acc,Stack,Config> when 'true' ->
	      %% Line 806
	      apply 'incomplete'/6
		  ('number', #{}#, Handler, Acc, Stack, Config)
	  %% Line 807
	  <Bin,Handler,Acc,[State|Stack],Config> when 'true' ->
	      let <_10> =
		  case %% Line 808
		       State of
		    %% Line 809
		    <'zero'> when 'true' ->
			apply 'zero'/2
			    (Bin, 0)
		    %% Line 810
		    <'integer'> when 'true' ->
			apply 'integer'/2
			    (Bin, 0)
		    %% Line 811
		    <'negative'> when 'true' ->
			apply 'negative'/2
			    (Bin, 0)
		    %% Line 812
		    <'initialdecimal'> when 'true' ->
			apply 'initialdecimal'/2
			    (Bin, 0)
		    %% Line 813
		    <'decimal'> when 'true' ->
			apply 'decimal'/2
			    (Bin, 0)
		    %% Line 814
		    <'e'> when 'true' ->
			apply 'e'/2
			    (Bin, 0)
		    %% Line 815
		    <'ex'> when 'true' ->
			apply 'ex'/2
			    (Bin, 0)
		    %% Line 816
		    <'exp'> when 'true' ->
			apply 'exp'/2
			    (Bin, 0)
		    ( <_9> when 'true' ->
			  %% Line 808
			  primop 'match_fail'
			      ({'case_clause',_9})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 818
		  case _10 of
		    %% Line 819
		    <{'finish_integer',Size}> when 'true' ->
			%% Line 820
			case Bin of
			  <#{#<Clean>(Size,8,'binary',['unsigned'|['big']]),
			     #<Rest>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			      let <_13> =
				  call %% Line 821
				       'erlang':%% Line 821
						'iolist_to_binary'
				      (%% Line 821
				       [Acc|[Clean|[]]])
			      in  %% Line 821
				  apply 'finish_number'/5
				      (Rest, Handler, {'integer',_13}, Stack, Config)
			  ( <_12> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_12})
			    -| ['compiler_generated'] )
			end
		    %% Line 822
		    <{'finish_float',Size}> when 'true' ->
			%% Line 823
			case Bin of
			  <#{#<Clean>(Size,8,'binary',['unsigned'|['big']]),
			     #<Rest>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			      let <_15> =
				  call %% Line 824
				       'erlang':%% Line 824
						'iolist_to_binary'
				      (%% Line 824
				       [Acc|[Clean|[]]])
			      in  %% Line 824
				  apply 'finish_number'/5
				      (Rest, Handler, {'float',_15}, Stack, Config)
			  ( <_14> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_14})
			    -| ['compiler_generated'] )
			end
		    %% Line 825
		    <{'error',Size}> when 'true' ->
			%% Line 826
			case Bin of
			  <#{#<Clean>(Size,8,'binary',['unsigned'|['big']]),
			     #<Rest>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			      %% Line 827
			      ( case Config of
				  ( <( {'config',_43,_44,_45,_46,_47,_48,_49,_50,_51,_52,_53,_54,_55,_56,_rec20,_57}
				       -| ['compiler_generated'] )> when 'true' ->
					case _rec20 of
					  <'false'> when 'true' ->
					      call 'erlang':'error'
						  ('badarg')
					  <F> when 'true' ->
					      let <_19> =
						  call 'jsx_config':'config_to_list'
						      (Config)
					      in  apply F
						      (Rest, {'decoder','number',Handler,[Acc|[Clean|[]]],Stack}, _19)
					end
				    -| ['compiler_generated'] )
				  ( <_58> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','config'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  ( <_16> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_16})
			    -| ['compiler_generated'] )
			end
		    %% Line 828
		    <{NewState,Size}> when 'true' ->
			%% Line 829
			case Bin of
			  <#{#<Clean>(Size,8,'binary',['unsigned'|['big']]),
			     #<Rest>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			      %% Line 830
			      apply 'number'/5
				  (Rest, Handler, [Acc|[Clean|[]]], [NewState|Stack], Config)
			  ( <_21> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_21})
			    -| ['compiler_generated'] )
			end
		    ( <_22> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_22})
		      -| ['compiler_generated'] )
		  end
	  ( <_27,_26,_25,_24,_23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_27,_26,_25,_24,_23})
		  -| [{'function_name',{'number',5}}] )
	    -| ['compiler_generated'] )
	end
'zero'/2 =
    %% Line 834
    fun (_0,_1) ->
	case <_0,_1> of
	  <#{#<46>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_2> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'initialdecimal'/2
		      (Rest, _2)
	  %% Line 835
	  <#{#<101>(8,1,'integer',['unsigned'|['big']]),
	     #<_5>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      {'integer',N}
	  %% Line 836
	  <#{#<69>(8,1,'integer',['unsigned'|['big']]),
	     #<_6>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      {'integer',N}
	  %% Line 837
	  <#{}#,N> when 'true' ->
	      {'zero',N}
	  %% Line 838
	  <_7,N> when 'true' ->
	      {'finish_integer',N}
	end
'integer'/2 =
    %% Line 841
    fun (_0,_1) ->
	case <_0,_1> of
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_2> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _2)
	  %% Line 842
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_3> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _3)
	  %% Line 843
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_4> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _4)
	  %% Line 844
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_5> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _5)
	  %% Line 845
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_6> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _6)
	  %% Line 846
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_7> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _7)
	  %% Line 847
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_8> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _8)
	  %% Line 848
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_9> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _9)
	  %% Line 849
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_10> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _10)
	  %% Line 850
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_11> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _11)
	  %% Line 851
	  <#{#<46>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_12> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'initialdecimal'/2
		      (Rest, _12)
	  %% Line 852
	  <#{#<101>(8,1,'integer',['unsigned'|['big']]),
	     #<_15>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      {'integer',N}
	  %% Line 853
	  <#{#<69>(8,1,'integer',['unsigned'|['big']]),
	     #<_16>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      {'integer',N}
	  %% Line 854
	  <#{}#,N> when 'true' ->
	      {'integer',N}
	  %% Line 855
	  <_17,N> when 'true' ->
	      {'finish_integer',N}
	end
'negative'/2 =
    %% Line 858
    fun (_0,_1) ->
	case <_0,_1> of
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_2> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'zero'/2
		      (Rest, _2)
	  %% Line 859
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_3> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _3)
	  %% Line 860
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_4> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _4)
	  %% Line 861
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_5> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _5)
	  %% Line 862
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_6> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _6)
	  %% Line 863
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_7> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _7)
	  %% Line 864
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_8> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _8)
	  %% Line 865
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_9> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _9)
	  %% Line 866
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_10> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _10)
	  %% Line 867
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_11> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'integer'/2
		      (Rest, _11)
	  %% Line 868
	  <#{}#,N> when 'true' ->
	      {'negative',N}
	  %% Line 869
	  <_14,N> when 'true' ->
	      {'error',N}
	end
'initialdecimal'/2 =
    %% Line 872
    fun (_0,_1) ->
	case <_0,_1> of
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_2> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _2)
	  %% Line 873
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_3> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _3)
	  %% Line 874
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_4> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _4)
	  %% Line 875
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_5> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _5)
	  %% Line 876
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_6> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _6)
	  %% Line 877
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_7> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _7)
	  %% Line 878
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_8> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _8)
	  %% Line 879
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_9> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _9)
	  %% Line 880
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_10> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _10)
	  %% Line 881
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_11> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _11)
	  %% Line 882
	  <#{}#,N> when 'true' ->
	      {'initialdecimal',N}
	  %% Line 883
	  <_14,N> when 'true' ->
	      {'error',N}
	end
'decimal'/2 =
    %% Line 886
    fun (_0,_1) ->
	case <_0,_1> of
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_2> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _2)
	  %% Line 887
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_3> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _3)
	  %% Line 888
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_4> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _4)
	  %% Line 889
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_5> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _5)
	  %% Line 890
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_6> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _6)
	  %% Line 891
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_7> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _7)
	  %% Line 892
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_8> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _8)
	  %% Line 893
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_9> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _9)
	  %% Line 894
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_10> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _10)
	  %% Line 895
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_11> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'decimal'/2
		      (Rest, _11)
	  %% Line 896
	  <#{#<101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_12> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'e'/2
		      (Rest, _12)
	  %% Line 897
	  <#{#<69>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_13> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'e'/2
		      (Rest, _13)
	  %% Line 898
	  <#{}#,N> when 'true' ->
	      {'decimal',N}
	  %% Line 899
	  <_16,N> when 'true' ->
	      {'finish_float',N}
	end
'e'/2 =
    %% Line 902
    fun (_0,_1) ->
	case <_0,_1> of
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_2> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _2)
	  %% Line 903
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_3> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _3)
	  %% Line 904
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_4> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _4)
	  %% Line 905
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_5> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _5)
	  %% Line 906
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_6> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _6)
	  %% Line 907
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_7> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _7)
	  %% Line 908
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_8> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _8)
	  %% Line 909
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_9> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _9)
	  %% Line 910
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_10> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _10)
	  %% Line 911
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_11> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _11)
	  %% Line 912
	  <#{#<43>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_12> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'ex'/2
		      (Rest, _12)
	  %% Line 913
	  <#{#<45>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_13> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'ex'/2
		      (Rest, _13)
	  %% Line 914
	  <#{}#,N> when 'true' ->
	      {'e',N}
	  %% Line 915
	  <_16,N> when 'true' ->
	      {'error',N}
	end
'ex'/2 =
    %% Line 918
    fun (_0,_1) ->
	case <_0,_1> of
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_2> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _2)
	  %% Line 919
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_3> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _3)
	  %% Line 920
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_4> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _4)
	  %% Line 921
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_5> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _5)
	  %% Line 922
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_6> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _6)
	  %% Line 923
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_7> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _7)
	  %% Line 924
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_8> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _8)
	  %% Line 925
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_9> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _9)
	  %% Line 926
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_10> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _10)
	  %% Line 927
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_11> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _11)
	  %% Line 928
	  <#{}#,N> when 'true' ->
	      {'ex',N}
	  %% Line 929
	  <_14,N> when 'true' ->
	      {'error',N}
	end
'exp'/2 =
    %% Line 932
    fun (_0,_1) ->
	case <_0,_1> of
	  <#{#<48>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_2> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _2)
	  %% Line 933
	  <#{#<49>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_3> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _3)
	  %% Line 934
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_4> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _4)
	  %% Line 935
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_5> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _5)
	  %% Line 936
	  <#{#<52>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_6> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _6)
	  %% Line 937
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_7> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _7)
	  %% Line 938
	  <#{#<54>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_8> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _8)
	  %% Line 939
	  <#{#<55>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_9> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _9)
	  %% Line 940
	  <#{#<56>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_10> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _10)
	  %% Line 941
	  <#{#<57>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,N> when 'true' ->
	      let <_11> =
		  call 'erlang':'+'
		      (N, 1)
	      in  apply 'exp'/2
		      (Rest, _11)
	  %% Line 942
	  <#{}#,N> when 'true' ->
	      {'exp',N}
	  %% Line 943
	  <_14,N> when 'true' ->
	      {'finish_float',N}
	end
'finish_number'/5 =
    %% Line 946
    fun (_0,_1,_2,_3,_4) ->
	let <_5> =
	    case _2 of
	      %% Line 951
	      ( <( {( 'integer'
		      -| ['compiler_generated'] ),_13}
		   -| ['compiler_generated'] )> when ( 'true'
						       -| ['compiler_generated'] ) ->
		    ( let <_14> =
			  call ( 'erlang'
				 -| ['compiler_generated'] ):( 'binary_to_integer'
							       -| ['compiler_generated'] )
			      (_13)
		      in  ( {( 'integer'
			       -| ['compiler_generated'] ),_14}
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	      %% Line 952
	      ( <( {( 'float'
		      -| ['compiler_generated'] ),_15}
		   -| ['compiler_generated'] )> when ( 'true'
						       -| ['compiler_generated'] ) ->
		    ( let <_16> =
			  call ( 'erlang'
				 -| ['compiler_generated'] ):( 'binary_to_float'
							       -| ['compiler_generated'] )
			      (_15)
		      in  ( {( 'float'
			       -| ['compiler_generated'] ),_16}
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	      ( <_17> when ( 'true'
			     -| ['compiler_generated'] ) ->
		    %% Line 951
		    ( primop ( 'match_fail'
			       -| ['compiler_generated'] )
			  (( {( 'function_clause'
				-| ['compiler_generated'] ),_17}
			     -| ['compiler_generated'] ))
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	    end
	in  ( case <_5,_1,_4> of
		( <Event,( {_21,State}
			   -| ['compiler_generated'] ),_X_Config> when ( 'true'
									 -| ['compiler_generated'] ) ->
		      ( let <_22> =
			    call _21:( 'handle_event'
				       -| ['compiler_generated'] )
				(Event, State)
			in  let <_6> = {_21,_22}
			    in  %% Line 947
				apply 'maybe_done'/4
				    (_0, _6, _3, _4)
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
		( <_6,_23,_24> when ( 'true'
				      -| ['compiler_generated'] ) ->
		      ( primop ( 'match_fail'
				 -| ['compiler_generated'] )
			    (( {( 'function_clause'
				  -| ['compiler_generated'] ),_6,_23,_24}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'format_number'/1 =
    %% Line 951
    fun (_0) ->
	case _0 of
	  <{'integer',Acc}> when 'true' ->
	      let <_1> =
		  call 'erlang':'binary_to_integer'
		      (Acc)
	      in  {'integer',_1}
	  %% Line 952
	  <{'float',Acc}> when 'true' ->
	      let <_2> =
		  call 'erlang':'binary_to_float'
		      (Acc)
	      in  {'float',_2}
	  ( <_3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_3})
		  -| [{'function_name',{'format_number',1}}] )
	    -| ['compiler_generated'] )
	end
'true'/4 =
    %% Line 959
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<114>(8,1,'integer',['unsigned'|['big']]),
	     #<117>(8,1,'integer',['unsigned'|['big']]),
	     #<101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      ( case %% Line 960
		     <Handler,Config> of
		  ( <( {_32,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_33> =
			      call _32:( 'handle_event'
					 -| ['compiler_generated'] )
				  (( {'literal','true'}
				     -| ['compiler_generated'] ), State)
			  in  let <_4> = {_32,_33}
			      in  %% Line 960
				  apply 'maybe_done'/4
				      (Rest, _4, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( {'literal','true'}
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 961
	  <#{#<114>(8,1,'integer',['unsigned'|['big']]),
	     #<117>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 962
	      apply 'incomplete'/5
		  ('true', #{#<114>(8,1,'integer',['unsigned'|['big']]),
			     #<117>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 963
	  <#{#<114>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 964
	      apply 'incomplete'/5
		  ('true', #{#<114>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 965
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 966
	      apply 'incomplete'/5
		  ('true', #{}#, Handler, Stack, Config)
	  %% Line 967
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 968
	      ( case Config of
		  ( <( {'config',_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_rec21,_27}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec21 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_7> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','true',Handler,'null',Stack}, _7)
			end
		    -| ['compiler_generated'] )
		  ( <_28> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'false'/4 =
    %% Line 971
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<97>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']]),
	     #<115>(8,1,'integer',['unsigned'|['big']]),
	     #<101>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      ( case %% Line 972
		     <Handler,Config> of
		  ( <( {_32,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_33> =
			      call _32:( 'handle_event'
					 -| ['compiler_generated'] )
				  (( {'literal','false'}
				     -| ['compiler_generated'] ), State)
			  in  let <_4> = {_32,_33}
			      in  %% Line 972
				  apply 'maybe_done'/4
				      (Rest, _4, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( {'literal','false'}
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 973
	  <#{#<97>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']]),
	     #<115>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 974
	      apply 'incomplete'/5
		  ('false', #{#<97>(8,1,'integer',['unsigned'|['big']]),
			      #<108>(8,1,'integer',['unsigned'|['big']]),
			      #<115>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 975
	  <#{#<97>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 976
	      apply 'incomplete'/5
		  ('false', #{#<97>(8,1,'integer',['unsigned'|['big']]),
			      #<108>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 977
	  <#{#<97>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 978
	      apply 'incomplete'/5
		  ('false', #{#<97>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 979
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 980
	      apply 'incomplete'/5
		  ('false', #{}#, Handler, Stack, Config)
	  %% Line 981
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 982
	      ( case Config of
		  ( <( {'config',_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_rec22,_27}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec22 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_7> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','false',Handler,'null',Stack}, _7)
			end
		    -| ['compiler_generated'] )
		  ( <_28> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'null'/4 =
    %% Line 985
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      ( case %% Line 986
		     <Handler,Config> of
		  ( <( {_32,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_33> =
			      call _32:( 'handle_event'
					 -| ['compiler_generated'] )
				  (( {'literal','null'}
				     -| ['compiler_generated'] ), State)
			  in  let <_4> = {_32,_33}
			      in  %% Line 986
				  apply 'maybe_done'/4
				      (Rest, _4, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( {'literal','null'}
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 987
	  <#{#<117>(8,1,'integer',['unsigned'|['big']]),
	     #<108>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 988
	      apply 'incomplete'/5
		  ('null', #{#<117>(8,1,'integer',['unsigned'|['big']]),
			     #<108>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 989
	  <#{#<117>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 990
	      apply 'incomplete'/5
		  ('null', #{#<117>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 991
	  <#{}#,Handler,Stack,Config> when 'true' ->
	      %% Line 992
	      apply 'incomplete'/5
		  ('null', #{}#, Handler, Stack, Config)
	  %% Line 993
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 994
	      ( case Config of
		  ( <( {'config',_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_rec23,_27}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec23 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_7> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','null',Handler,'null',Stack}, _7)
			end
		    -| ['compiler_generated'] )
		  ( <_28> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'comment'/5 =
    %% Line 997
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <#{#<10>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Resume,['comment'|Stack],Config> when 'true' ->
	      %% Line 998
	      apply 'resume'/6
		  (Rest, Resume, Handler, 'unused', Stack, Config)
	  %% Line 999
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Resume,Stack,Config> when 'true' ->
	      %% Line 1000
	      apply 'comment'/5
		  (Rest, Handler, Resume, ['multicomment'|Stack], Config)
	  %% Line 1001
	  <#{#<47>(8,1,'integer',['unsigned'|['big']])}#,Handler,Resume,Stack = ['multicomment'|_17],Config> when 'true' ->
	      %% Line 1002
	      apply 'incomplete'/6
		  ('comment', #{#<47>(8,1,'integer',['unsigned'|['big']])}#, Handler, Resume, Stack, Config)
	  %% Line 1003
	  <#{#<42>(8,1,'integer',['unsigned'|['big']]),
	     #<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Resume,['multicomment'|Stack],Config> when 'true' ->
	      %% Line 1004
	      case Stack of
		%% Line 1005
		<['multicomment'|_18]> when 'true' ->
		    apply 'comment'/5
			(Rest, Handler, Resume, Stack, Config)
		%% Line 1006
		<_19> when 'true' ->
		    apply 'resume'/6
			(Rest, Resume, Handler, 'unused', Stack, Config)
	      end
	  %% Line 1008
	  <#{#<42>(8,1,'integer',['unsigned'|['big']])}#,Handler,Resume,Stack = ['multicomment'|_20],Config> when 'true' ->
	      %% Line 1009
	      apply 'incomplete'/6
		  ('comment', #{#<42>(8,1,'integer',['unsigned'|['big']])}#, Handler, Resume, Stack, Config)
	  %% Line 1010
	  <#{#<_21>('undefined','undefined','utf8',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Resume,Stack,Config> when 'true' ->
	      %% Line 1011
	      apply 'comment'/5
		  (Rest, Handler, Resume, Stack, Config)
	  %% Line 1012
	  <#{#<_22>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Resume,Stack,Config = {'config',_23,_24,_25,_26,_27,_28,'false',_29,_30,_31,_32,_33,_34,_35,_36,_37}> when 'true' ->
	      %% Line 1013
	      apply 'comment'/5
		  (Rest, Handler, Resume, Stack, Config)
	  %% Line 1014
	  <#{}#,Handler,'done',[Comment|[]],Config = {'config',_38,_39,_40,_41,_42,_43,_44,_45,_46,_47,'false',_48,_49,_50,_51,_52}>
	      when let <_6> =
		    call %% Line 1015
			 'erlang':%% Line 1015
				  '=:='
			(%% Line 1015
			 Comment, %% Line 1015
				  'comment')
		in  let <_7> =
			call %% Line 1015
			     'erlang':%% Line 1015
				      '=:='
			    (%% Line 1015
			     Comment, %% Line 1015
				      'multicomment')
		    in  %% Line 1015
			call 'erlang':'or'
			    (_6, _7) ->
	      %% Line 1016
	      apply 'resume'/6
		  (#{}#, 'done', Handler, 'unused', [], Config)
	  %% Line 1017
	  <#{}#,Handler,Resume,Stack,Config> when 'true' ->
	      %% Line 1018
	      apply 'incomplete'/6
		  ('comment', #{}#, Handler, Resume, Stack, Config)
	  %% Line 1019
	  <Bin,Handler,Resume,Stack,Config> when 'true' ->
	      %% Line 1020
	      ( case Config of
		  ( <( {'config',_53,_54,_55,_56,_57,_58,_59,_60,_61,_62,_63,_64,_65,_66,_rec24,_67}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec24 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_10> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','comment',Handler,Resume,Stack}, _10)
			end
		    -| ['compiler_generated'] )
		  ( <_68> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'maybe_done'/4 =
    %% Line 1023
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,[],Config> when 'true' ->
	      ( case %% Line 1024
		     <Handler,Config> of
		  ( <( {_72,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_73> =
			      call _72:( 'handle_event'
					 -| ['compiler_generated'] )
				  (( 'end_json'
				     -| ['compiler_generated'] ), State)
			  in  let <_4> = {_72,_73}
			      in  %% Line 1024
				  apply 'done'/4
				      (Rest, _4, [], Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( 'end_json'
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1025
	  <#{#<32>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1026
	      apply 'maybe_done'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 1027
	  <#{#<125>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,['object'|Stack],Config> when 'true' ->
	      ( case %% Line 1028
		     <Handler,Config> of
		  ( <( {_77,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_78> =
			      call _77:( 'handle_event'
					 -| ['compiler_generated'] )
				  (( 'end_object'
				     -| ['compiler_generated'] ), State)
			  in  let <_5> = {_77,_78}
			      in  %% Line 1028
				  apply 'maybe_done'/4
				      (Rest, _5, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( 'end_object'
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1029
	  <#{#<93>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,['array'|Stack],Config> when 'true' ->
	      ( case %% Line 1030
		     <Handler,Config> of
		  ( <( {_82,State}
		       -| ['compiler_generated'] ),_X_Config> when ( 'true'
								     -| ['compiler_generated'] ) ->
			( let <_83> =
			      call _82:( 'handle_event'
					 -| ['compiler_generated'] )
				  (( 'end_array'
				     -| ['compiler_generated'] ), State)
			  in  let <_6> = {_82,_83}
			      in  %% Line 1030
				  apply 'maybe_done'/4
				      (Rest, _6, Stack, Config)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_5,_4> when ( 'true'
				   -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'function_clause'
				    -| ['compiler_generated'] ),( 'end_array'
								  -| ['compiler_generated'] ),_5,_4}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1031
	  <#{#<44>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,['object'|Stack],Config> when 'true' ->
	      %% Line 1032
	      apply 'key'/4
		  (Rest, Handler, ['key'|Stack], Config)
	  %% Line 1033
	  <#{#<44>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack = ['array'|_21],Config> when 'true' ->
	      %% Line 1034
	      apply 'value'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 1035
	  <#{#<10>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1036
	      apply 'maybe_done'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 1037
	  <#{#<9>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1038
	      apply 'maybe_done'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 1039
	  <#{#<13>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1040
	      apply 'maybe_done'/4
		  (Rest, Handler, Stack, Config)
	  %% Line 1041
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_22,_23,_24,_25,'true',_26,_27,_28,_29,_30,_31,_32,_33,_34,_35,_36}> when 'true' ->
	      %% Line 1042
	      ( case Config of
		  ( <( {'config',_37,_38,_39,_40,_41,_42,_43,_44,_45,_46,_47,_48,_49,_50,_rec25,_51}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec25 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_10> =
				  #{#<47>(8,1,'integer',['unsigned'|['big']]),
				    #<Rest>('all',8,'binary',['unsigned'|['big']])}#
			      in  let <_9> =
				      call 'jsx_config':'config_to_list'
					  (Config)
				  in  apply F
					  (_10, {'decoder','maybe_done',Handler,'null',Stack}, _9)
			end
		    -| ['compiler_generated'] )
		  ( <_52> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1043
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1044
	      apply 'comment'/5
		  (Rest, Handler, 'maybe_done', ['comment'|Stack], Config)
	  %% Line 1045
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1046
	      apply 'comment'/5
		  (Rest, Handler, 'maybe_done', ['multicomment'|Stack], Config)
	  %% Line 1047
	  <#{#<47>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1048
	      apply 'incomplete'/5
		  ('maybe_done', #{#<47>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 1049
	  <#{}#,Handler,Stack,Config>
	      when try
		    let <_12> =
			call 'erlang':'length'
			    (Stack)
		    in  call 'erlang':'>'
			    (_12, 0)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1050
	      apply 'incomplete'/5
		  ('maybe_done', #{}#, Handler, Stack, Config)
	  %% Line 1051
	  <Bin,Handler,Stack,Config> when 'true' ->
	      %% Line 1052
	      ( case Config of
		  ( <( {'config',_53,_54,_55,_56,_57,_58,_59,_60,_61,_62,_63,_64,_65,_66,_rec26,_67}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec26 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_15> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','maybe_done',Handler,'null',Stack}, _15)
			end
		    -| ['compiler_generated'] )
		  ( <_68> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'done'/4 =
    %% Line 1055
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <#{#<32>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,[],Config> when 'true' ->
	      %% Line 1056
	      apply 'done'/4
		  (Rest, Handler, [], Config)
	  %% Line 1057
	  <#{#<10>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,[],Config> when 'true' ->
	      %% Line 1058
	      apply 'done'/4
		  (Rest, Handler, [], Config)
	  %% Line 1059
	  <#{#<9>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,[],Config> when 'true' ->
	      %% Line 1060
	      apply 'done'/4
		  (Rest, Handler, [], Config)
	  %% Line 1061
	  <#{#<13>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,[],Config> when 'true' ->
	      %% Line 1062
	      apply 'done'/4
		  (Rest, Handler, [], Config)
	  %% Line 1063
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config = {'config',_18,_19,_20,_21,'true',_22,_23,_24,_25,_26,_27,_28,_29,_30,_31,_32}> when 'true' ->
	      %% Line 1064
	      ( case Config of
		  ( <( {'config',_33,_34,_35,_36,_37,_38,_39,_40,_41,_42,_43,_44,_45,_46,_rec27,_47}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec27 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_7> =
				  #{#<47>(8,1,'integer',['unsigned'|['big']]),
				    #<Rest>('all',8,'binary',['unsigned'|['big']])}#
			      in  let <_6> =
				      call 'jsx_config':'config_to_list'
					  (Config)
				  in  apply F
					  (_7, {'decoder','done',Handler,'null',Stack}, _6)
			end
		    -| ['compiler_generated'] )
		  ( <_48> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1065
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<47>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1066
	      apply 'comment'/5
		  (Rest, Handler, 'done', ['comment'|Stack], Config)
	  %% Line 1067
	  <#{#<47>(8,1,'integer',['unsigned'|['big']]),
	     #<42>(8,1,'integer',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1068
	      apply 'comment'/5
		  (Rest, Handler, 'done', ['multicomment'|Stack], Config)
	  %% Line 1069
	  <#{#<47>(8,1,'integer',['unsigned'|['big']])}#,Handler,Stack,Config> when 'true' ->
	      %% Line 1070
	      apply 'incomplete'/5
		  ('done', #{#<47>(8,1,'integer',['unsigned'|['big']])}#, Handler, Stack, Config)
	  %% Line 1071
	  <Bin,{_X_Handler,State},_X_Stack,{'config',_49,_50,_51,_52,_53,_54,_55,_56,_57,_58,_59,'true',_60,_61,_62,_63}> when 'true' ->
	      %% Line 1072
	      {'with_tail',State,Bin}
	  %% Line 1073
	  <#{}#,_@r0 = {Handler,State},[],Config = {'config',_64,_65,_66,_67,_68,_69,_70,_71,_72,_73,'true',_74,_75,_76,_77,_78}> when 'true' ->
	      %% Line 1074
	      apply 'incomplete'/5
		  ('done', #{}#, _@r0, [], Config)
	  %% Line 1075
	  <#{}#,{_X_Handler,State},[],_X_Config> when 'true' ->
	      State
	  %% Line 1076
	  <Bin,{Handler,State},_X_Stack,Config = {'config',_79,_80,_81,'true',_82,_83,_84,_85,_86,_87,_88,_89,_90,_91,_92,_93}> when 'true' ->
	      let <_9> =
		  call %% Line 1077
		       Handler:%% Line 1077
			       'reset'
		      (%% Line 1077
		       State)
	      in  %% Line 1077
		  apply 'value'/4
		      (Bin, {Handler,_9}, [], Config)
	  %% Line 1078
	  <Bin,Handler,Stack,Config> when 'true' ->
	      ( case Config of
		  ( <( {'config',_94,_95,_96,_97,_98,_99,_100,_101,_102,_103,_104,_105,_106,_107,_rec28,_108}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec28 of
			  <'false'> when 'true' ->
			      call 'erlang':'error'
				  ('badarg')
			  <F> when 'true' ->
			      let <_12> =
				  call 'jsx_config':'config_to_list'
				      (Config)
			      in  apply F
				      (Bin, {'decoder','done',Handler,'null',Stack}, _12)
			end
		    -| ['compiler_generated'] )
		  ( <_109> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','config'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('jsx_decoder')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('jsx_decoder', _0)
end