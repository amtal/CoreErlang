module 'rb' ['code_change'/3,
	     'filter'/1,
	     'filter'/2,
	     'grep'/1,
	     'h'/0,
	     'handle_call'/3,
	     'handle_cast'/2,
	     'handle_info'/2,
	     'help'/0,
	     'init'/1,
	     'list'/0,
	     'list'/1,
	     'log_list'/0,
	     'log_list'/1,
	     'module_info'/0,
	     'module_info'/1,
	     'rescan'/0,
	     'rescan'/1,
	     'show'/0,
	     'show'/1,
	     'start'/0,
	     'start'/1,
	     'start_link'/1,
	     'start_log'/1,
	     'stop'/0,
	     'stop_log'/0,
	     'terminate'/2]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[115|[114|[99|[47|[114|[98|[46|[101|[114|[108]]]]]]]]]],1}],
		%% Line 22
		'behaviour' =
		    %% Line 22
		    ['gen_server'],
		%% Line 41
		'record' =
		    %% Line 41
		    [{'state',[{'record_field',41,{'atom',41,'dir'}}|[{'record_field',41,{'atom',41,'data'}}|[{'record_field',41,{'atom',41,'device'}}|[{'record_field',41,{'atom',41,'max'}}|[{'record_field',41,{'atom',41,'type'}}|[{'record_field',41,{'atom',41,'abort'}}|[{'record_field',41,{'atom',41,'log'}}]]]]]]]}]]
'start'/0 =
    %% Line 47
    ( fun () ->
	  apply 'start'/1
	      ([])
      -| [{'function',{'start',0}}] )
'start'/1 =
    %% Line 48
    ( fun (_0) ->
	  %% Line 49
	  call 'supervisor':'start_child'
	      ('sasl_sup', %% Line 50
			   {'rb_server',{'rb','start_link',[( _0
							      -| [{'function',{'start',1}}] )|[]]},%% Line 51
												   'temporary',%% Line 51
													       'brutal_kill',%% Line 51
															     'worker',%% Line 51
																      ['rb']})
      -| [{'function',{'start',1}}] )
'start_link'/1 =
    %% Line 53
    ( fun (_0) ->
	  %% Line 54
	  call 'gen_server':'start_link'
	      ({'local','rb_server'}, 'rb', ( _0
					      -| [{'function',{'start_link',1}}] ), [])
      -| [{'function',{'start_link',1}}] )
'stop'/0 =
    %% Line 56
    ( fun () ->
	  %% Line 57
	  call 'supervisor':'terminate_child'
	      ('sasl_sup', 'rb_server')
      -| [{'function',{'stop',0}}] )
'rescan'/0 =
    %% Line 59
    ( fun () ->
	  apply 'rescan'/1
	      ([])
      -| [{'function',{'rescan',0}}] )
'rescan'/1 =
    %% Line 60
    ( fun (_0) ->
	  %% Line 61
	  apply 'call'/1
	      ({'rescan',( _0
			   -| [{'function',{'rescan',1}}] )})
      -| [{'function',{'rescan',1}}] )
'list'/0 =
    %% Line 63
    ( fun () ->
	  apply 'list'/1
	      ('all')
      -| [{'function',{'list',0}}] )
'list'/1 =
    %% Line 64
    ( fun (_0) ->
	  apply 'call'/1
	      ({'list',( _0
			 -| [{'function',{'list',1}}] )})
      -| [{'function',{'list',1}}] )
'log_list'/0 =
    %% Line 66
    ( fun () ->
	  apply 'log_list'/1
	      ('all')
      -| [{'function',{'log_list',0}}] )
'log_list'/1 =
    %% Line 67
    ( fun (_0) ->
	  apply 'call'/1
	      ({'log_list',( _0
			     -| [{'function',{'log_list',1}}] )})
      -| [{'function',{'log_list',1}}] )
'show'/0 =
    %% Line 69
    ( fun () ->
	  %% Line 70
	  apply 'call'/1
	      ('show')
      -| [{'function',{'show',0}}] )
'show'/1 =
    %% Line 72
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'show',1}}] ) of
	      <Number>
		  when call 'erlang':'is_integer'
			(( _0
			   -| [{'function',{'show',1}}] )) ->
		  %% Line 73
		  apply 'call'/1
		      ({'show_number',Number})
	      %% Line 74
	      <Type>
		  when call 'erlang':'is_atom'
			(( _0
			   -| [{'function',{'show',1}}] )) ->
		  %% Line 75
		  apply 'call'/1
		      ({'show_type',Type})
	      ( <_1> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_1})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'show',1}}] )
      -| [{'function',{'show',1}}] )
'grep'/1 =
    %% Line 77
    ( fun (_0) ->
	  apply 'call'/1
	      ({'grep',( _0
			 -| [{'function',{'grep',1}}] )})
      -| [{'function',{'grep',1}}] )
'filter'/1 =
    %% Line 79
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'filter',1}}] ) of
	      <Filters>
		  when call 'erlang':'is_list'
			(( _0
			   -| [{'function',{'filter',1}}] )) ->
		  %% Line 80
		  apply 'call'/1
		      ({'filter',Filters})
	      ( <_1> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_1})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'filter',1}}] )
      -| [{'function',{'filter',1}}] )
'filter'/2 =
    %% Line 82
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <Filters,FDates>
		  when try
			( let <_4> =
			      case call 'erlang':'is_list'
				       (Filters) of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      call 'erlang':'is_tuple'
					  (FDates)
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
				( <_2> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {( 'badarg'
						  -| ['compiler_generated'] ),_2}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  in  ( call 'erlang':'=:='
				    (( _4
				       -| ['compiler_generated'] ), 'true')
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false' ->
		  %% Line 83
		  apply 'call'/1
		      ({'filter',{Filters,FDates}})
	      ( <_6,_5> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_6,_5})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'filter',2}}] )
      -| [{'function',{'filter',2}}] )
'start_log'/1 =
    %% Line 85
    ( fun (_0) ->
	  apply 'call'/1
	      ({'start_log',( _0
			      -| [{'function',{'start_log',1}}] )})
      -| [{'function',{'start_log',1}}] )
'stop_log'/0 =
    %% Line 87
    ( fun () ->
	  apply 'call'/1
	      ('stop_log')
      -| [{'function',{'stop_log',0}}] )
'h'/0 =
    %% Line 89
    ( fun () ->
	  apply 'help'/0
	      ()
      -| [{'function',{'h',0}}] )
'help'/0 =
    %% Line 90
    ( fun () ->
	  do  %% Line 91
	      call 'io':'format'
		  ([126|[110|[82|[101|[112|[111|[114|[116|[32|[66|[114|[111|[119|[115|[101|[114|[32|[84|[111|[111|[108|[32|[45|[32|[117|[115|[97|[103|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      do  %% Line 92
		  call 'io':'format'
		      ([61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  do  %% Line 93
		      call 'io':'format'
			  ([114|[98|[58|[115|[116|[97|[114|[116|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[115|[116|[97|[114|[116|[32|[116|[104|[101|[32|[114|[98|[95|[115|[101|[114|[118|[101|[114|[32|[119|[105|[116|[104|[32|[100|[101|[102|[97|[117|[108|[116|[32|[111|[112|[116|[105|[111|[110|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		      do  %% Line 94
			  call 'io':'format'
			      ([114|[98|[58|[115|[116|[97|[114|[116|[40|[79|[112|[116|[105|[111|[110|[115|[41|[32|[32|[45|[32|[119|[104|[101|[114|[101|[32|[79|[112|[116|[105|[111|[110|[115|[32|[105|[115|[32|[97|[32|[108|[105|[115|[116|[32|[111|[102|[58|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			  do  %% Line 95
			      apply 'print_options'/0
				  ()
			      do  %% Line 96
				  call 'io':'format'
				      ([114|[98|[58|[104|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[112|[114|[105|[110|[116|[32|[116|[104|[105|[115|[32|[104|[101|[108|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				  do  %% Line 97
				      call 'io':'format'
					  ([114|[98|[58|[104|[101|[108|[112|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[112|[114|[105|[110|[116|[32|[116|[104|[105|[115|[32|[104|[101|[108|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				      do  %% Line 98
					  call 'io':'format'
					      ([114|[98|[58|[108|[105|[115|[116|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[108|[105|[115|[116|[32|[97|[108|[108|[32|[114|[101|[112|[111|[114|[116|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					  do  %% Line 99
					      call 'io':'format'
						  ([114|[98|[58|[108|[105|[115|[116|[40|[84|[121|[112|[101|[41|[32|[32|[32|[32|[32|[32|[45|[32|[108|[105|[115|[116|[32|[97|[108|[108|[32|[114|[101|[112|[111|[114|[116|[115|[32|[111|[102|[32|[116|[121|[112|[101|[32|[84|[121|[112|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					      do  %% Line 100
						  call 'io':'format'
						      ([114|[98|[58|[108|[111|[103|[95|[108|[105|[115|[116|[40|[41|[32|[32|[32|[32|[32|[32|[45|[32|[108|[111|[103|[32|[108|[105|[115|[116|[32|[111|[102|[32|[97|[108|[108|[32|[114|[101|[112|[111|[114|[116|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						  do  %% Line 101
						      call 'io':'format'
							  ([114|[98|[58|[108|[111|[103|[95|[108|[105|[115|[116|[40|[84|[121|[112|[101|[41|[32|[32|[45|[32|[108|[111|[103|[32|[108|[105|[115|[116|[32|[111|[102|[32|[97|[108|[108|[32|[114|[101|[112|[111|[114|[116|[115|[32|[111|[102|[32|[116|[121|[112|[101|[32|[84|[121|[112|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						      do  %% Line 102
							  call 'io':'format'
							      ([32|[32|[32|[32|[32|[32|[99|[117|[114|[114|[101|[110|[116|[108|[121|[32|[115|[117|[112|[112|[111|[114|[116|[101|[100|[32|[116|[121|[112|[101|[115|[32|[97|[114|[101|[58|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
							  do  %% Line 103
							      apply 'print_types'/0
								  ()
							      do  %% Line 104
								  call 'io':'format'
								      ([114|[98|[58|[103|[114|[101|[112|[40|[82|[101|[103|[69|[120|[112|[41|[32|[32|[32|[32|[32|[32|[45|[32|[112|[114|[105|[110|[116|[32|[114|[101|[112|[111|[114|[116|[115|[32|[99|[111|[110|[116|[97|[105|[110|[105|[110|[103|[32|[82|[101|[103|[69|[120|[112|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								  do  %% Line 105
								      call 'io':'format'
									  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[82|[101|[103|[69|[120|[112|[32|[109|[117|[115|[116|[32|[98|[101|[32|[97|[32|[118|[97|[108|[105|[100|[32|[97|[114|[103|[117|[109|[101|[110|[116|[32|[102|[111|[114|[32|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								      do  %% Line 106
									  call 'io':'format'
									      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[116|[104|[101|[32|[102|[117|[110|[99|[116|[105|[111|[110|[32|[114|[101|[58|[114|[117|[110|[47|[50|[32|[111|[114|[32|[114|[101|[58|[114|[117|[110|[47|[51|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
									  do  %% Line 107
									      call 'io':'format'
										  ([114|[98|[58|[102|[105|[108|[116|[101|[114|[40|[70|[105|[108|[116|[101|[114|[115|[41|[32|[45|[32|[112|[114|[105|[110|[116|[32|[114|[101|[112|[111|[114|[116|[115|[32|[109|[97|[116|[99|[104|[105|[110|[103|[32|[70|[105|[108|[116|[101|[114|[115|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
									      do  %% Line 108
										  call 'io':'format'
										      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[114|[101|[112|[111|[114|[116|[115|[32|[109|[117|[115|[116|[32|[98|[101|[32|[112|[114|[111|[112|[108|[105|[115|[116|[115|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
										  do  %% Line 109
										      call 'io':'format'
											  ([32|[32|[32|[32|[32|[32|[70|[105|[108|[116|[101|[114|[115|[32|[105|[115|[32|[97|[32|[108|[105|[115|[116|[32|[111|[102|[32|[116|[117|[112|[108|[101|[115|[32|[111|[102|[32|[116|[104|[101|[32|[102|[111|[108|[108|[111|[119|[105|[110|[103|[32|[102|[111|[114|[109|[58|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
										      do  %% Line 110
											  apply 'print_filters'/0
											      ()
											  do  %% Line 111
											      call 'io':'format'
												  ([114|[98|[58|[102|[105|[108|[116|[101|[114|[40|[70|[105|[108|[116|[101|[114|[115|[44|[32|[68|[97|[116|[101|[115|[41|[32|[32|[45|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
											      do  %% Line 112
												  call 'io':'format'
												      ([32|[32|[32|[32|[32|[32|[115|[97|[109|[101|[32|[97|[115|[32|[114|[98|[58|[102|[105|[108|[116|[101|[114|[47|[49|[32|[98|[117|[116|[32|[97|[99|[99|[101|[112|[116|[115|[32|[100|[97|[116|[101|[32|[114|[97|[110|[103|[101|[115|[32|[116|[111|[32|[102|[105|[108|[116|[101|[114|[32|[114|[101|[112|[111|[114|[116|[115|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
												  do  %% Line 113
												      call 'io':'format'
													  ([32|[32|[32|[32|[32|[32|[68|[97|[116|[101|[115|[32|[109|[117|[115|[116|[32|[98|[101|[32|[111|[102|[32|[116|[104|[101|[32|[102|[111|[108|[108|[111|[119|[105|[110|[103|[32|[102|[111|[114|[109|[58|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
												      do  %% Line 114
													  apply 'print_dates'/0
													      ()
													  do  %% Line 115
													      call 'io':'format'
														  ([114|[98|[58|[114|[101|[115|[99|[97|[110|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[114|[101|[115|[99|[97|[110|[115|[32|[116|[104|[101|[32|[114|[101|[112|[111|[114|[116|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[119|[105|[116|[104|[32|[115|[97|[109|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
													      do  %% Line 116
														  call 'io':'format'
														      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[111|[112|[116|[105|[111|[110|[115|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
														  do  %% Line 117
														      call 'io':'format'
															  ([114|[98|[58|[114|[101|[115|[99|[97|[110|[40|[79|[112|[116|[105|[111|[110|[115|[41|[32|[45|[32|[114|[101|[115|[99|[97|[110|[115|[32|[116|[104|[101|[32|[114|[101|[112|[111|[114|[116|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[119|[105|[116|[104|[32|[110|[101|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
														      do  %% Line 118
															  call 'io':'format'
															      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[111|[112|[116|[105|[111|[110|[115|[46|[32|[79|[112|[116|[105|[111|[110|[115|[32|[105|[115|[32|[115|[97|[109|[101|[32|[97|[115|[32|[105|[110|[32|[115|[116|[97|[114|[116|[47|[49|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
															  do  %% Line 119
															      call 'io':'format'
																  ([114|[98|[58|[115|[104|[111|[119|[40|[78|[117|[109|[98|[101|[114|[41|[32|[32|[32|[32|[45|[32|[112|[114|[105|[110|[116|[32|[114|[101|[112|[111|[114|[116|[32|[110|[111|[32|[78|[117|[109|[98|[101|[114|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
															      do  %% Line 120
																  call 'io':'format'
																      ([114|[98|[58|[115|[104|[111|[119|[40|[84|[121|[112|[101|[41|[32|[32|[32|[32|[32|[32|[45|[32|[112|[114|[105|[110|[116|[32|[97|[108|[108|[32|[114|[101|[112|[111|[114|[116|[115|[32|[111|[102|[32|[116|[121|[112|[101|[32|[84|[121|[112|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
																  do  %% Line 121
																      call 'io':'format'
																	  ([114|[98|[58|[115|[104|[111|[119|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[112|[114|[105|[110|[116|[32|[97|[108|[108|[32|[114|[101|[112|[111|[114|[116|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
																      do  %% Line 122
																	  call 'io':'format'
																	      ([114|[98|[58|[115|[116|[97|[114|[116|[95|[108|[111|[103|[40|[70|[105|[108|[101|[41|[32|[45|[32|[114|[101|[100|[105|[114|[101|[99|[116|[32|[97|[108|[108|[32|[114|[101|[112|[111|[114|[116|[115|[32|[116|[111|[32|[102|[105|[108|[101|[32|[111|[114|[32|[105|[111|[95|[100|[101|[118|[105|[99|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
																	  do  %% Line 123
																	      call 'io':'format'
																		  ([114|[98|[58|[115|[116|[111|[112|[95|[108|[111|[103|[40|[41|[32|[32|[32|[32|[32|[32|[45|[32|[99|[108|[111|[115|[101|[32|[116|[104|[101|[32|[108|[111|[103|[32|[102|[105|[108|[101|[32|[97|[110|[100|[32|[114|[101|[100|[105|[114|[101|[99|[116|[32|[116|[111|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
																	      do  %% Line 124
																		  call 'io':'format'
																		      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[115|[116|[97|[110|[100|[97|[114|[100|[95|[105|[111|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
																		  %% Line 125
																		  call 'io':'format'
																		      ([114|[98|[58|[115|[116|[111|[112|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[115|[116|[111|[112|[32|[116|[104|[101|[32|[114|[98|[95|[115|[101|[114|[118|[101|[114|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
      -| [{'function',{'help',0}}] )
'call'/1 =
    %% Line 134
    ( fun (_0) ->
	  %% Line 135
	  call 'gen_server':'call'
	      ('rb_server', ( _0
			      -| [{'function',{'call',1}}] ), 'infinity')
      -| [{'function',{'call',1}}] )
'print_options'/0 =
    %% Line 140
    ( fun () ->
	  do  %% Line 141
	      call 'io':'format'
		  ([32|[32|[32|[32|[32|[32|[123|[115|[116|[97|[114|[116|[95|[108|[111|[103|[44|[32|[70|[105|[108|[101|[78|[97|[109|[101|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      do  %% Line 142
		  call 'io':'format'
		      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[100|[101|[102|[97|[117|[108|[116|[58|[32|[115|[116|[97|[110|[100|[97|[114|[100|[95|[105|[111|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  do  %% Line 143
		      call 'io':'format'
			  ([32|[32|[32|[32|[32|[32|[123|[109|[97|[120|[44|[32|[77|[97|[120|[78|[111|[79|[102|[82|[101|[112|[111|[114|[116|[115|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		      do  %% Line 144
			  call 'io':'format'
			      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[77|[97|[120|[78|[111|[79|[102|[82|[101|[112|[111|[114|[116|[115|[32|[115|[104|[111|[117|[108|[100|[32|[98|[101|[32|[97|[110|[32|[105|[110|[116|[101|[103|[101|[114|[32|[111|[114|[32|[39|[97|[108|[108|[39|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			  do  %% Line 145
			      call 'io':'format'
				  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[100|[101|[102|[97|[117|[108|[116|[58|[32|[97|[108|[108|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]])
			      do  %% Line 146
				  call 'io':'format'
				      ([32|[32|[32|[32|[32|[32|[123|[114|[101|[112|[111|[114|[116|[95|[100|[105|[114|[44|[32|[68|[105|[114|[83|[116|[114|[105|[110|[103|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				  do  %% Line 147
				      call 'io':'format'
					  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[68|[105|[114|[83|[116|[114|[105|[110|[103|[32|[115|[104|[111|[117|[108|[100|[32|[98|[101|[32|[97|[32|[115|[116|[114|[105|[110|[103|[32|[119|[105|[116|[104|[111|[117|[116|[32|[116|[114|[97|[105|[108|[105|[110|[103|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				      do  %% Line 148
					  call 'io':'format'
					      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[100|[101|[108|[105|[109|[105|[116|[101|[114|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					  do  %% Line 149
					      call 'io':'format'
						  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[100|[101|[102|[97|[117|[108|[116|[58|[32|[123|[115|[97|[115|[108|[44|[32|[101|[114|[114|[111|[114|[95|[108|[111|[103|[103|[101|[114|[95|[109|[102|[95|[100|[105|[114|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					      do  %% Line 150
						  call 'io':'format'
						      ([32|[32|[32|[32|[32|[32|[123|[116|[121|[112|[101|[44|[32|[82|[101|[112|[111|[114|[116|[84|[121|[112|[101|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]])
						  do  %% Line 151
						      call 'io':'format'
							  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[82|[101|[112|[111|[114|[116|[84|[121|[112|[101|[32|[115|[104|[111|[117|[108|[100|[32|[98|[101|[32|[97|[32|[115|[117|[112|[112|[111|[114|[116|[101|[100|[32|[116|[121|[112|[101|[44|[32|[39|[97|[108|[108|[39|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						      do  %% Line 152
							  call 'io':'format'
							      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[111|[114|[32|[97|[32|[108|[105|[115|[116|[32|[111|[102|[32|[115|[117|[112|[112|[111|[114|[116|[101|[100|[32|[116|[121|[112|[101|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
							  do  %% Line 153
							      call 'io':'format'
								  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[100|[101|[102|[97|[117|[108|[116|[58|[32|[97|[108|[108|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]])
							      do  %% Line 154
								  call 'io':'format'
								      ([32|[32|[32|[32|[32|[32|[123|[97|[98|[111|[114|[116|[95|[111|[110|[95|[101|[114|[114|[111|[114|[44|[32|[66|[111|[111|[108|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								  do  %% Line 155
								      call 'io':'format'
									  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[66|[111|[111|[108|[58|[32|[116|[114|[117|[101|[32|[124|[32|[102|[97|[108|[115|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								      %% Line 156
								      call 'io':'format'
									  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[100|[101|[102|[97|[117|[108|[116|[58|[32|[102|[97|[108|[115|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]])
      -| [{'function',{'print_options',0}}] )
'print_types'/0 =
    %% Line 158
    ( fun () ->
	  do  %% Line 159
	      call 'io':'format'
		  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[99|[114|[97|[115|[104|[95|[114|[101|[112|[111|[114|[116|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]])
	      do  %% Line 160
		  call 'io':'format'
		      ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[115|[117|[112|[101|[114|[118|[105|[115|[111|[114|[95|[114|[101|[112|[111|[114|[116|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  do  %% Line 161
		      call 'io':'format'
			  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[112|[114|[111|[103|[114|[101|[115|[115|[126|[110]]]]]]]]]]]]]]]]]]]]])
		      %% Line 162
		      call 'io':'format'
			  ([32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[101|[114|[114|[111|[114|[126|[110]]]]]]]]]]]]]]]]]])
      -| [{'function',{'print_types',0}}] )
'print_filters'/0 =
    %% Line 164
    ( fun () ->
	  do  %% Line 165
	      call 'io':'format'
		  ([32|[32|[32|[32|[32|[32|[45|[32|[123|[75|[101|[121|[44|[32|[86|[97|[108|[117|[101|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]])
	      do  %% Line 166
		  call 'io':'format'
		      ([32|[32|[32|[32|[32|[32|[32|[32|[105|[110|[99|[108|[117|[100|[101|[115|[32|[114|[101|[112|[111|[114|[116|[32|[99|[111|[110|[116|[97|[105|[110|[105|[110|[103|[32|[123|[75|[101|[121|[44|[32|[86|[97|[108|[117|[101|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  do  %% Line 167
		      call 'io':'format'
			  ([32|[32|[32|[32|[32|[32|[45|[32|[123|[75|[101|[121|[44|[32|[86|[97|[108|[117|[101|[44|[32|[110|[111|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]])
		      do  %% Line 168
			  call 'io':'format'
			      ([32|[32|[32|[32|[32|[32|[32|[32|[101|[120|[99|[108|[117|[100|[101|[115|[32|[114|[101|[112|[111|[114|[116|[32|[99|[111|[110|[116|[97|[105|[110|[105|[110|[103|[32|[123|[75|[101|[121|[44|[32|[86|[97|[108|[117|[101|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			  do  %% Line 169
			      call 'io':'format'
				  ([32|[32|[32|[32|[32|[32|[45|[32|[123|[75|[101|[121|[44|[32|[82|[101|[103|[69|[120|[112|[44|[32|[114|[101|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]])
			      do  %% Line 170
				  call 'io':'format'
				      ([32|[32|[32|[32|[32|[32|[32|[32|[82|[101|[103|[69|[120|[112|[32|[109|[117|[115|[116|[32|[98|[101|[32|[97|[32|[118|[97|[108|[105|[100|[32|[97|[114|[103|[117|[109|[101|[110|[116|[32|[102|[111|[114|[32|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				  do  %% Line 171
				      call 'io':'format'
					  ([32|[32|[32|[32|[32|[32|[32|[32|[116|[104|[101|[32|[102|[117|[110|[99|[116|[105|[111|[110|[32|[114|[101|[58|[114|[117|[110|[47|[50|[32|[111|[114|[32|[114|[101|[58|[114|[117|[110|[47|[51|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				      do  %% Line 172
					  call 'io':'format'
					      ([32|[32|[32|[32|[32|[32|[45|[32|[123|[75|[101|[121|[44|[32|[82|[101|[103|[69|[120|[112|[44|[32|[114|[101|[44|[32|[110|[111|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					  %% Line 173
					  call 'io':'format'
					      ([32|[32|[32|[32|[32|[32|[32|[32|[101|[120|[99|[108|[117|[100|[101|[115|[32|[114|[101|[112|[111|[114|[116|[32|[99|[111|[110|[116|[97|[105|[110|[105|[110|[103|[32|[123|[75|[101|[121|[44|[32|[82|[101|[103|[69|[120|[112|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
      -| [{'function',{'print_filters',0}}] )
'print_dates'/0 =
    %% Line 175
    ( fun () ->
	  do  %% Line 176
	      call 'io':'format'
		  ([32|[32|[32|[32|[32|[32|[45|[32|[123|[83|[116|[97|[114|[116|[68|[97|[116|[101|[44|[32|[69|[110|[100|[68|[97|[116|[101|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      do  %% Line 177
		  call 'io':'format'
		      ([32|[32|[32|[32|[32|[32|[32|[32|[83|[116|[97|[114|[116|[68|[97|[116|[101|[32|[61|[32|[69|[110|[100|[68|[97|[116|[101|[32|[61|[32|[123|[123|[89|[44|[77|[44|[68|[125|[44|[123|[72|[44|[77|[44|[83|[125|[125|[32|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  do  %% Line 178
		      call 'io':'format'
			  ([32|[32|[32|[32|[32|[32|[32|[32|[112|[114|[105|[110|[116|[115|[32|[116|[104|[101|[32|[114|[101|[112|[111|[114|[116|[115|[32|[119|[105|[116|[104|[32|[100|[97|[116|[101|[32|[98|[101|[116|[119|[101|[101|[110|[32|[83|[116|[97|[114|[116|[68|[97|[116|[101|[32|[97|[110|[100|[32|[69|[110|[100|[68|[97|[116|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		      do  %% Line 179
			  call 'io':'format'
			      ([32|[32|[32|[32|[32|[32|[45|[32|[123|[83|[116|[97|[114|[116|[68|[97|[116|[101|[44|[32|[102|[114|[111|[109|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]])
			  do  %% Line 180
			      call 'io':'format'
				  ([32|[32|[32|[32|[32|[32|[32|[32|[112|[114|[105|[110|[116|[115|[32|[116|[104|[101|[32|[114|[101|[112|[111|[114|[116|[115|[32|[119|[105|[116|[104|[32|[100|[97|[116|[101|[32|[103|[114|[101|[97|[116|[101|[114|[32|[116|[104|[97|[110|[32|[83|[116|[97|[114|[116|[68|[97|[116|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			      do  %% Line 181
				  call 'io':'format'
				      ([32|[32|[32|[32|[32|[32|[45|[32|[123|[69|[110|[100|[68|[97|[116|[101|[44|[32|[116|[111|[125|[126|[110]]]]]]]]]]]]]]]]]]]]]]])
				  %% Line 182
				  call 'io':'format'
				      ([32|[32|[32|[32|[32|[32|[32|[32|[112|[114|[105|[110|[116|[115|[32|[116|[104|[101|[32|[114|[101|[112|[111|[114|[116|[115|[32|[119|[105|[116|[104|[32|[100|[97|[116|[101|[32|[108|[101|[115|[115|[101|[114|[32|[116|[104|[97|[110|[32|[83|[116|[97|[114|[116|[68|[97|[116|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
      -| [{'function',{'print_dates',0}}] )
'init'/1 =
    %% Line 184
    ( fun (_0) ->
	  do  %% Line 185
	      call 'erlang':'process_flag'
		  ('priority', 'low')
	      do  %% Line 186
		  call 'erlang':'process_flag'
		      ('trap_exit', 'true')
		  let <Log> =
		      apply %% Line 187
			    'get_option'/3
			  (( _0
			     -| [{'function',{'init',1}}] ), %% Line 187
							     'start_log', %% Line 187
									  'standard_io')
		  in  let <Device> =
			  apply %% Line 188
				'open_log_file'/1
			      (%% Line 188
			       Log)
		      in  let <Dir> =
			      apply %% Line 189
				    'get_report_dir'/1
				  (( _0
				     -| [{'function',{'init',1}}] ))
			  in  let <Max> =
				  apply %% Line 190
					'get_option'/3
				      (( _0
					 -| [{'function',{'init',1}}] ), %% Line 190
									 'max', %% Line 190
										'all')
			      in  let <Type> =
				      apply %% Line 191
					    'get_option'/3
					  (( _0
					     -| [{'function',{'init',1}}] ), %% Line 191
									     'type', %% Line 191
										     'all')
				  in  let <Abort> =
					  apply %% Line 192
						'get_option'/3
					      (( _0
						 -| [{'function',{'init',1}}] ), %% Line 192
										 'abort_on_error', %% Line 192
												   'false')
				      in  let <_7> =
					      call %% Line 193
						   'erlang':%% Line 193
							    '++'
						  (%% Line 193
						   Dir, %% Line 193
							[47])
					  in  let <Data> =
						  apply %% Line 193
							'scan_files'/3
						      (_7, %% Line 193
							   Max, %% Line 193
								Type)
					      in  let <_9> =
						      call %% Line 194
							   'erlang':%% Line 194
								    '++'
							  (%% Line 194
							   Dir, %% Line 194
								[47])
						  in  %% Line 194
						      {'ok',{'state',_9,Data,Device,%% Line 195
										    Max,%% Line 195
											Type,%% Line 195
											     Abort,%% Line 195
												   Log}}
      -| [{'function',{'init',1}}] )
'handle_call'/3 =
    %% Line 197
    ( fun (_0,_1,_2) ->
	  ( case <_0,_1,_2> of
	      <{'rescan',Options},_X_From,State> when 'true' ->
		  let <_224,_225> =
		      case %% Line 199
			   apply 'get_option'/3
			       (Options, 'start_log', {'undefined'}) of
			%% Line 200
			<{'undefined'}> when 'true' ->
			    %% Line 201
			    ( case State of
				( <( {'state',_78,_79,_rec0,_80,_81,_82,_83}
				     -| ['compiler_generated'] )> when 'true' ->
				      ( case State of
					  ( <( {'state',_85,_86,_87,_88,_89,_90,_rec1}
					       -| ['compiler_generated'] )> when 'true' ->
						<_rec0,_rec1>
					    -| ['compiler_generated'] )
					  ( <_91> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','state'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_84> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			%% Line 202
			<Log> when 'true' ->
			    %% Line 203
			    ( case State of
				( <( {'state',_92,_93,_rec2,_94,_95,_96,_97}
				     -| ['compiler_generated'] )> when 'true' ->
				      do  apply 'close_device'/1
					      (_rec2)
					  let <_9> =
					      apply %% Line 204
						    'open_log_file'/1
						  (%% Line 204
						   Log)
					  in  <_9,%% Line 204
						  Log>
				  -| ['compiler_generated'] )
				( <_98> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		      end
		  in  %% Line 206
		      ( case State of
			  ( <( {'state',_99,_100,_101,_rec3,_102,_103,_104}
			       -| ['compiler_generated'] )> when 'true' ->
				let <Max> =
				    apply 'get_option'/3
					(Options, 'max', _rec3)
				in  %% Line 207
				    ( case State of
					( <( {'state',_106,_107,_108,_109,_rec4,_110,_111}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <Type> =
						  apply 'get_option'/3
						      (Options, 'type', _rec4)
					      in  let <Abort> =
						      apply %% Line 208
							    'get_option'/3
							  (%% Line 208
							   Options, %% Line 208
								    'abort_on_error', %% Line 208
										      'false')
						  in  %% Line 209
						      ( case State of
							  ( <( {'state',_rec5,_113,_114,_115,_116,_117,_118}
							       -| ['compiler_generated'] )> when 'true' ->
								let <Data> =
								    apply 'scan_files'/3
									(_rec5, Max, Type)
								in  %% Line 211
								    case State of
								      <{'state',_rec7,_rec8,_rec9,_rec10,_rec11,_rec12,_rec13}> when 'true' ->
									  let <_25> =
									      {'state',_rec7,Data,( _224
												    -| ['compiler_generated'] ),Max,Type,Abort,( _225
																		 -| ['compiler_generated'] )}
									  in  %% Line 212
									      {'reply','ok',_25}
								      ( <_120> when 'true' ->
									    ( call ( 'erlang'
										     -| ['compiler_generated'] ):( 'error'
														   -| ['compiler_generated'] )
										  (( {'badrecord','state'}
										     -| ['compiler_generated'] ))
									      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								    end
							    -| ['compiler_generated'] )
							  ( <_119> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','state'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_112> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','state'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_105> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      %% Line 213
	      <_121,_X_From,{'state',_122,'undefined',_123,_124,_125,_126,_127}> when 'true' ->
		  %% Line 214
		  {'reply',{'error','no_data'},{'state','undefined','undefined','undefined','undefined','undefined','undefined','undefined'}}
	      %% Line 215
	      <{'list',Type},_X_From,State> when 'true' ->
		  %% Line 216
		  ( case State of
		      ( <( {'state',_128,_rec14,_129,_130,_131,_132,_133}
			   -| ['compiler_generated'] )> when 'true' ->
			    do  apply 'print_list'/3
				    ('standard_io', _rec14, Type)
				%% Line 217
				{'reply','ok',State}
			-| ['compiler_generated'] )
		      ( <_134> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 218
	      <{'log_list',Type},_X_From,State> when 'true' ->
		  %% Line 219
		  ( case State of
		      ( <( {'state',_135,_136,_rec15,_137,_138,_139,_140}
			   -| ['compiler_generated'] )> when 'true' ->
			    ( case State of
				( <( {'state',_142,_rec16,_143,_144,_145,_146,_147}
				     -| ['compiler_generated'] )> when 'true' ->
				      do  apply 'print_list'/3
					      (_rec15, _rec16, Type)
					  %% Line 220
					  {'reply','ok',State}
				  -| ['compiler_generated'] )
				( <_148> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		      ( <_141> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 221
	      <{'start_log',FileName},_X_From,State> when 'true' ->
		  let <NewDevice> =
		      apply %% Line 222
			    'open_log_file'/1
			  (%% Line 222
			   FileName)
		  in  %% Line 223
		      case State of
			<{'state',_149,_150,_151,_152,_153,_154,_155}> when 'true' ->
			    let <_36> =
				call 'erlang':'setelement'
				    (4, State, NewDevice)
			    in  {'reply','ok',_36}
			( <_156> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
	      %% Line 224
	      <'stop_log',_X_From,State> when 'true' ->
		  %% Line 225
		  ( case State of
		      ( <( {'state',_157,_158,_rec18,_159,_160,_161,_162}
			   -| ['compiler_generated'] )> when 'true' ->
			    do  apply 'close_device'/1
				    (_rec18)
				%% Line 226
				case State of
				  <{'state',_164,_165,_166,_167,_168,_169,_170}> when 'true' ->
				      let <_41> =
					  call 'erlang':'setelement'
					      (4, State, 'standard_io')
				      in  {'reply','ok',_41}
				  ( <_171> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','state'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			-| ['compiler_generated'] )
		      ( <_163> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 227
	      <{'show_number',Number},_X_From,State> when 'true' ->
		  %% Line 228
		  case State of
		    <{'state',Dir,Data,Device,_172,_173,Abort,Log}> when 'true' ->
			let <NewDevice> =
			    apply %% Line 229
				  'print_report_by_num'/6
				(%% Line 229
				 Dir, %% Line 229
				      Data, %% Line 229
					    Number, %% Line 229
						    Device, %% Line 229
							    Abort, %% Line 229
								   Log)
			in  %% Line 230
			    case State of
			      <{'state',_174,_175,_176,_177,_178,_179,_180}> when 'true' ->
				  let <_46> =
				      call 'erlang':'setelement'
					  (4, State, NewDevice)
				  in  {'reply','ok',_46}
			      ( <_181> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    ( <_42> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_42})
		      -| ['compiler_generated'] )
		  end
	      %% Line 231
	      <{'show_type',Type},_X_From,State> when 'true' ->
		  %% Line 232
		  case State of
		    <{'state',Dir,Data,Device,_182,_183,Abort,Log}> when 'true' ->
			let <NewDevice> =
			    apply %% Line 233
				  'print_typed_reports'/6
				(%% Line 233
				 Dir, %% Line 233
				      Data, %% Line 233
					    Type, %% Line 233
						  Device, %% Line 233
							  Abort, %% Line 233
								 Log)
			in  %% Line 234
			    case State of
			      <{'state',_184,_185,_186,_187,_188,_189,_190}> when 'true' ->
				  let <_51> =
				      call 'erlang':'setelement'
					  (4, State, NewDevice)
				  in  {'reply','ok',_51}
			      ( <_191> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    ( <_47> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_47})
		      -| ['compiler_generated'] )
		  end
	      %% Line 235
	      <'show',_X_From,State> when 'true' ->
		  %% Line 236
		  case State of
		    <{'state',Dir,Data,Device,_192,_193,Abort,Log}> when 'true' ->
			let <NewDevice> =
			    apply %% Line 237
				  'print_all_reports'/5
				(%% Line 237
				 Dir, %% Line 237
				      Data, %% Line 237
					    Device, %% Line 237
						    Abort, %% Line 237
							   Log)
			in  %% Line 238
			    case State of
			      <{'state',_194,_195,_196,_197,_198,_199,_200}> when 'true' ->
				  let <_56> =
				      call 'erlang':'setelement'
					  (4, State, NewDevice)
				  in  {'reply','ok',_56}
			      ( <_201> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    ( <_52> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_52})
		      -| ['compiler_generated'] )
		  end
	      %% Line 239
	      <{'grep',RegExp},_X_From,State> when 'true' ->
		  %% Line 240
		  case State of
		    <{'state',Dir,Data,Device,_202,_203,Abort,Log}> when 'true' ->
			%% Line 241
			try
			    apply 'print_grep_reports'/6
				(Dir, Data, RegExp, Device, Abort, Log)
			of <_58> ->
			    %% Line 243
			    case State of
			      <{'state',_204,_205,_206,_207,_208,_209,_210}> when 'true' ->
				  let <_61> =
				      call 'erlang':'setelement'
					  (4, State, _58)
				  in  {'reply','ok',_61}
			      ( <_211> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			catch <_65,_64,_63> ->
			    %% Line 245
			    case <_65,_64,_63> of
			      <( 'error'
				 -| ['compiler_generated'] ),Error,_212> when 'true' ->
				  %% Line 246
				  {'reply',{'error',Error},State}
			      ( <_231,_232,_233> when 'true' ->
				    primop 'raise'
					(_233, _232)
				-| ['compiler_generated'] )
			    end
		    ( <_57> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_57})
		      -| ['compiler_generated'] )
		  end
	      %% Line 248
	      <{'filter',Filters},_X_From,State> when 'true' ->
		  %% Line 249
		  case State of
		    <{'state',Dir,Data,Device,_213,_214,Abort,Log}> when 'true' ->
			%% Line 250
			try
			    apply 'filter_all_reports'/6
				(Dir, Data, Filters, Device, Abort, Log)
			of <_67> ->
			    %% Line 252
			    case State of
			      <{'state',_215,_216,_217,_218,_219,_220,_221}> when 'true' ->
				  let <_70> =
				      call 'erlang':'setelement'
					  (4, State, _67)
				  in  {'reply','ok',_70}
			      ( <_222> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			catch <_74,_73,_72> ->
			    %% Line 254
			    case <_74,_73,_72> of
			      <( 'error'
				 -| ['compiler_generated'] ),Error,_223> when 'true' ->
				  %% Line 255
				  {'reply',{'error',Error},State}
			      ( <_235,_236,_237> when 'true' ->
				    primop 'raise'
					(_237, _236)
				-| ['compiler_generated'] )
			    end
		    ( <_66> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_66})
		      -| ['compiler_generated'] )
		  end
	      ( <_77,_76,_75> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_77,_76,_75})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'handle_call',3}}] )
      -| [{'function',{'handle_call',3}}] )
'terminate'/2 =
    %% Line 258
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <_X_Reason,{'state',_4,_5,Device,_6,_7,_8,_9}> when 'true' ->
		  %% Line 259
		  apply 'close_device'/1
		      (Device)
	      ( <_3,_2> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_3,_2})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'terminate',2}}] )
      -| [{'function',{'terminate',2}}] )
'handle_cast'/2 =
    %% Line 261
    ( fun (_0,_1) ->
	  %% Line 262
	  {'noreply',_1}
      -| [{'function',{'handle_cast',2}}] )
'handle_info'/2 =
    %% Line 263
    ( fun (_0,_1) ->
	  %% Line 264
	  {'noreply',_1}
      -| [{'function',{'handle_info',2}}] )
'code_change'/3 =
    %% Line 265
    ( fun (_0,_1,_2) ->
	  %% Line 266
	  {'ok',_1}
      -| [{'function',{'code_change',3}}] )
'open_log_file'/1 =
    %% Line 273
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'open_log_file',1}}] ) of
	      <'standard_io'> when 'true' ->
		  'standard_io'
	      %% Line 274
	      <Fd>
		  when let <_1> =
			call 'erlang':'is_atom'
			    (( _0
			       -| [{'function',{'open_log_file',1}}] ))
		    in  let <_2> =
			    call 'erlang':'=/='
				(( _0
				   -| [{'function',{'open_log_file',1}}] ), 'standard_error')
			in  call 'erlang':'and'
				(_1, _2) ->
		  %% Line 275
		  case call 'erlang':'whereis'
			   (Fd) of
		    %% Line 276
		    <'undefined'> when 'true' ->
			do  call 'io':'format'
				([114|[98|[58|[32|[82|[101|[103|[105|[115|[116|[101|[114|[101|[100|[32|[110|[97|[109|[101|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[32|[39|[126|[116|[115|[39|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 277
																															  [Fd|[]])
			    do  %% Line 278
				call 'io':'format'
				    ([114|[98|[58|[32|[85|[115|[105|[110|[103|[32|[115|[116|[97|[110|[100|[97|[114|[100|[95|[105|[111|[126|[110]]]]]]]]]]]]]]]]]]]]]]])
				%% Line 279
				apply 'open_log_file'/1
				    ('standard_io')
		    %% Line 280
		    <Pid> when 'true' ->
			apply 'open_log_file'/1
			    (Pid)
		  end
	      %% Line 282
	      <Fd>
		  when call 'erlang':'is_pid'
			(( _0
			   -| [{'function',{'open_log_file',1}}] )) ->
		  Fd
	      %% Line 283
	      <FileName>
		  when call 'erlang':'is_list'
			(( _0
			   -| [{'function',{'open_log_file',1}}] )) ->
		  %% Line 284
		  case call 'file':'open'
			   (FileName, ['write'|['append'|[{'encoding','utf8'}]]]) of
		    %% Line 285
		    <{'ok',Fd}> when 'true' ->
			Fd
		    %% Line 286
		    <Error> when 'true' ->
			do  %% Line 287
			    call 'io':'format'
				([114|[98|[58|[32|[67|[97|[110|[110|[111|[116|[32|[111|[112|[101|[110|[32|[102|[105|[108|[101|[32|[39|[126|[116|[115|[39|[32|[40|[126|[119|[41|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 288
																												[FileName|[Error|[]]])
			    do  %% Line 289
				call 'io':'format'
				    ([114|[98|[58|[32|[85|[115|[105|[110|[103|[32|[115|[116|[97|[110|[100|[97|[114|[100|[95|[105|[111|[126|[110]]]]]]]]]]]]]]]]]]]]]]])
				%% Line 290
				'standard_io'
		  end
	      %% Line 292
	      <'standard_error'> when 'true' ->
		  do  %% Line 293
		      call 'io':'format'
			  ([114|[98|[58|[32|[85|[115|[105|[110|[103|[32|[115|[116|[97|[110|[100|[97|[114|[100|[95|[105|[111|[126|[110]]]]]]]]]]]]]]]]]]]]]]])
		      %% Line 294
		      'standard_io'
	      ( <_5> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_5})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'open_log_file',1}}] )
      -| [{'function',{'open_log_file',1}}] )
'close_device'/1 =
    %% Line 296
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'close_device',1}}] ) of
	      <Fd>
		  when call 'erlang':'is_pid'
			(( _0
			   -| [{'function',{'close_device',1}}] )) ->
		  catch
		      %% Line 297
		      call 'file':'close'
			  (Fd)
	      %% Line 298
	      <_2> when 'true' ->
		  'ok'
	    end
	    -| [{'function',{'close_device',1}}] )
      -| [{'function',{'close_device',1}}] )
'get_option'/3 =
    %% Line 300
    ( fun (_0,_1,_2) ->
	  %% Line 301
	  case call 'lists':'keysearch'
		   (_1, 1, _0) of
	    %% Line 302
	    <{'value',{_X_Key,Value}}> when 'true' ->
		Value
	    %% Line 303
	    <_7> when 'true' ->
		_2
	  end
      -| [{'function',{'get_option',3}}] )
'get_report_dir'/1 =
    %% Line 306
    ( fun (_0) ->
	  %% Line 307
	  case call 'lists':'keysearch'
		   ('report_dir', 1, ( _0
				       -| [{'function',{'get_report_dir',1}}] )) of
	    %% Line 308
	    <{'value',{_X_Key,RptDir}}> when 'true' ->
		RptDir
	    %% Line 309
	    <_5> when 'true' ->
		let <_1> =
		    catch
			%% Line 310
			call 'application':'get_env'
			    ('sasl', 'error_logger_mf_dir')
		in  %% Line 310
		    case _1 of
		      %% Line 311
		      <{'ok',Dir}> when 'true' ->
			  Dir
		      %% Line 312
		      <_6> when 'true' ->
			  %% Line 313
			  call 'erlang':'exit'
			      ([99|[97|[110|[110|[111|[116|[32|[108|[111|[99|[97|[116|[101|[32|[114|[101|[112|[111|[114|[116|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		    end
	  end
      -| [{'function',{'get_report_dir',1}}] )
'scan_files'/3 =
    %% Line 328
    ( fun (_0,_1,_2) ->
	  let <_3> =
	      call %% Line 329
		   'erlang':%% Line 329
			    '++'
		  (_0, %% Line 329
		       [47|[105|[110|[100|[101|[120]]]]]])
	  in  %% Line 329
	      case call 'file':'open'
		       (_3, ['raw'|['read']]) of
		%% Line 330
		<{'ok',Fd}> when 'true' ->
		    let <_4> =
			catch
			    %% Line 331
			    call 'file':'read'
				(Fd, 1)
		    in  %% Line 331
			case _4 of
			  %% Line 332
			  <{'ok',[LastWritten|[]]}> when 'true' ->
			      %% Line 333
			      case call 'file':'close'
				       (Fd) of
				<'ok'> when 'true' ->
				    let <Files> =
					apply %% Line 334
					      'make_file_list'/2
					    (_0, %% Line 334
						 LastWritten)
				    in  %% Line 335
					apply 'scan_files'/4
					    (_0, Files, _1, _2)
				( <_5> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_5})
				  -| ['compiler_generated'] )
			      end
			  %% Line 336
			  <_X_X> when 'true' ->
			      do  %% Line 337
				  ( call ( 'file'
					   -| ['result_not_wanted'] ):( 'close'
									-| ['result_not_wanted'] )
					(Fd)
				    -| ['result_not_wanted'] )
				  %% Line 338
				  call 'erlang':'exit'
				      ([99|[97|[110|[110|[111|[116|[32|[114|[101|[97|[100|[32|[116|[104|[101|[32|[105|[110|[100|[101|[120|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]]]]]]])
			end
		%% Line 340
		<_X_X> when 'true' ->
		    call 'erlang':'exit'
			([99|[97|[110|[110|[111|[116|[32|[114|[101|[97|[100|[32|[116|[104|[101|[32|[105|[110|[100|[101|[120|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]]]]]]])
	      end
      -| [{'function',{'scan_files',3}}] )
'make_file_list'/2 =
    %% Line 343
    ( fun (_0,_1) ->
	  %% Line 344
	  case call 'file':'list_dir'
		   (_0) of
	    %% Line 345
	    <{'ok',FileNames}> when 'true' ->
		let <_6> =
		    fun (_4) ->
			let <_2> =
			    catch
				%% Line 347
				call 'erlang':'list_to_integer'
				    (_4)
			in  %% Line 347
			    case _2 of
			      %% Line 348
			      <Int>
				  when call 'erlang':'is_integer'
					(_2) ->
				  %% Line 349
				  {'true',Int}
			      %% Line 350
			      <_12> when 'true' ->
				  %% Line 351
				  'false'
			    end
		in  let <FileNumbers> =
			call %% Line 346
			     'lists':%% Line 346
				     'zf'
			    (_6, %% Line 354
				 FileNames)
		    in  let <_8> =
			    call %% Line 355
				 'lists':%% Line 355
					 'sort'
				(%% Line 355
				 FileNumbers)
			in  %% Line 355
			    apply 'shift'/2
				(_8, _1)
	    %% Line 356
	    <_13> when 'true' ->
		call 'erlang':'exit'
		    ({'bad_directory',_0})
	  end
      -| [{'function',{'make_file_list',2}}] )
'shift'/2 =
    %% Line 359
    ( fun (_0,_1) ->
	  %% Line 360
	  apply 'shift'/3
	      (_0, _1, [])
      -| [{'function',{'shift',2}}] )
'shift'/3 =
    %% Line 362
    ( fun (_0,_1,_2) ->
	  ( case <_0,_1,_2> of
	      <[H|T],_7,Res>
		  when call 'erlang':'=:='
			(_7,
			 H) ->
		  let <_3> =
		      call %% Line 363
			   'lists':%% Line 363
				   'reverse'
			  (%% Line 363
			   T)
		  in  %% Line 363
		      [H|call 'erlang':'++'
			     (Res, _3)]
	      %% Line 364
	      <[H|T],First,Res> when 'true' ->
		  %% Line 365
		  apply 'shift'/3
		      (T, First, [H|Res])
	      %% Line 366
	      <[],_8,Res> when 'true' ->
		  %% Line 367
		  Res
	      ( <_6,_5,_4> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_6,_5,_4})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'shift',3}}] )
      -| [{'function',{'shift',3}}] )
'scan_files'/4 =
    %% Line 375
    ( fun (_0,_1,_2,_3) ->
	  %% Line 376
	  apply 'scan_files'/6
	      (_0, 1, _1, [], _2, _3)
      -| [{'function',{'scan_files',4}}] )
'scan_files'/6 =
    %% Line 377
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  ( case <_0,_1,_2,_3,_4,_5> of
	      <_X_Dir,_17,[],Res,_X_Max,_X_Type> when 'true' ->
		  Res
	      %% Line 378
	      <_X_Dir,_18,_X_Files,Res,Max,_X_Type>
		  when call 'erlang':'=<'
			(Max,
			 0) ->
		  Res
	      %% Line 379
	      <Dir,No,[H|T],Res,Max,Type> when 'true' ->
		  let <Data> =
		      apply %% Line 380
			    'get_report_data_from_file'/5
			  (%% Line 380
			   Dir, %% Line 380
				No, %% Line 380
				    H, %% Line 380
				       Max, %% Line 380
					    Type)
		  in  let <Len> =
			  call %% Line 381
			       'erlang':%% Line 381
					'length'
			      (%% Line 381
			       Data)
		      in  let <NewMax> =
			      apply %% Line 382
				    'dec_max'/2
				  (%% Line 382
				   Max, %% Line 382
					Len)
			  in  let <NewNo> =
				  call %% Line 383
				       'erlang':%% Line 383
						'+'
				      (%% Line 383
				       No, %% Line 383
					   Len)
			      in  let <NewData> =
				      call %% Line 384
					   'erlang':%% Line 384
						    '++'
					  (%% Line 384
					   Data, %% Line 384
						 Res)
				  in  %% Line 385
				      apply 'scan_files'/6
					  (Dir, NewNo, T, NewData, NewMax, Type)
	      ( <_16,_15,_14,_13,_12,_11> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_16,_15,_14,_13,_12,_11})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'scan_files',6}}] )
      -| [{'function',{'scan_files',6}}] )
'dec_max'/2 =
    %% Line 387
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <'all',_4> when 'true' ->
		  'all'
	      %% Line 388
	      <X,Y> when 'true' ->
		  call 'erlang':'-'
		      (X, Y)
	    end
	    -| [{'function',{'dec_max',2}}] )
      -| [{'function',{'dec_max',2}}] )
'get_report_data_from_file'/5 =
    %% Line 390
    ( fun (_0,_1,_2,_3,_4) ->
	  let <Fname> =
	      call %% Line 391
		   'erlang':%% Line 391
			    'integer_to_list'
		  (_2)
	  in  let <FileName> =
		  call %% Line 392
		       'lists':%% Line 392
			       'concat'
		      (%% Line 392
		       [_0|[Fname|[]]])
	      in  %% Line 393
		  case call 'file':'open'
			   (FileName, ['read']) of
		    %% Line 394
		    <{'ok',Fd}>
			when call 'erlang':'is_pid'
			      (Fd) ->
			apply 'read_reports'/5
			    (_1, Fd, Fname, _3, _4)
		    %% Line 395
		    <_14> when 'true' ->
			let <_7> =
			    call 'erlang':'++'
				([67|[97|[110|[39|[116|[32|[111|[112|[101|[110|[32|[102|[105|[108|[101|[32]]]]]]]]]]]]]]]], Fname)
			in  [{_1,'unknown',_7,[63|[63|[63]]],Fname,0}|[]]
		  end
      -| [{'function',{'get_report_data_from_file',5}}] )
'read_reports'/5 =
    %% Line 406
    ( fun (_0,_1,_2,_3,_4) ->
	  do  %% Line 407
	      call 'io':'format'
		  ([114|[98|[58|[32|[114|[101|[97|[100|[105|[110|[103|[32|[114|[101|[112|[111|[114|[116|[46|[46|[46]]]]]]]]]]]]]]]]]]]]])
	      let <_5> =
		  catch
		      %% Line 408
		      apply 'read_reports'/3
			  (_1, [], _4)
	      in  %% Line 408
		  case _5 of
		    %% Line 409
		    <{'ok',Res}> when 'true' ->
			%% Line 410
			case call 'file':'close'
				 (_1) of
			  <'ok'> when 'true' ->
			      do  %% Line 411
				  call 'io':'format'
				      ([100|[111|[110|[101|[46|[126|[110]]]]]]])
				  let <_8> =
				      case <> of
					%% Line 414
					<>
					    when try
						  let <_7> =
						      call 'erlang':'length'
							  (Res)
						  in  call 'erlang':'>'
							  (_7, _3)
					      of <Try> ->
						  Try
					      catch <T,R> ->
						  'false' ->
					    %% Line 415
					    call 'lists':'sublist'
						(Res, 1, _3)
					%% Line 416
					<> when 'true' ->
					    %% Line 417
					    Res
				      end
				  in  %% Line 419
				      apply 'add_report_data'/3
					  (_8, _0, _2)
			  ( <_6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_6})
			    -| ['compiler_generated'] )
			end
		    %% Line 420
		    <{'error',_@r0 = [Problem|Res]}> when 'true' ->
			do  %% Line 421
			    ( call ( 'file'
				     -| ['result_not_wanted'] ):( 'close'
								  -| ['result_not_wanted'] )
				  (_1)
			      -| ['result_not_wanted'] )
			    do  %% Line 422
				call 'io':'format'
				    ([69|[114|[114|[111|[114|[58|[32|[126|[116|[112|[126|[110]]]]]]]]]]]], [Problem|[]])
				let <_11> =
				    call %% Line 424
					 'erlang':%% Line 424
						  'length'
					(%% Line 424
					 Res)
				in  do  %% Line 423
					call 'io':'format'
					    ([83|[97|[108|[118|[97|[103|[101|[100|[32|[126|[112|[32|[101|[110|[116|[114|[105|[101|[115|[32|[102|[114|[111|[109|[32|[99|[111|[114|[114|[117|[112|[116|[32|[114|[101|[112|[111|[114|[116|[32|[102|[105|[108|[101|[32|[126|[116|[115|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 424
																																											      [_11|[_2|[]]])
					let <_13> =
					    case <> of
					      %% Line 427
					      <>
						  when try
							let <_12> =
							    call 'erlang':'+'
								(1, call 'erlang':'length'
									(Res))
							in  call 'erlang':'>'
								(_12, _3)
						    of <Try> ->
							Try
						    catch <T,R> ->
							'false' ->
						  %% Line 428
						  call 'lists':'sublist'
						      (_@r0, 1, _3)
					      %% Line 429
					      <> when 'true' ->
						  %% Line 430
						  _@r0
					    end
					in  %% Line 432
					    apply 'add_report_data'/3
						(_13, _0, _2)
		    %% Line 433
		    <Else> when 'true' ->
			do  %% Line 434
			    call 'io':'format'
				([101|[114|[114|[32|[126|[116|[112|[126|[110]]]]]]]]], [Else|[]])
			    let <_15> =
				call %% Line 435
				     'erlang':%% Line 435
					      '++'
				    (%% Line 435
				     [67|[97|[110|[39|[116|[32|[114|[101|[97|[100|[32|[114|[101|[112|[111|[114|[116|[115|[32|[102|[114|[111|[109|[32|[102|[105|[108|[101|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _2)
			    in  %% Line 435
				[{_0,'unknown',_15,%% Line 436
						   [63|[63|[63]]],_2,%% Line 436
								     0}|%% Line 436
									[]]
		  end
      -| [{'function',{'read_reports',5}}] )
'add_report_data'/3 =
    %% Line 446
    ( fun (_0,_1,_2) ->
	  %% Line 447
	  apply 'add_report_data'/4
	      (_0, _1, _2, [])
      -| [{'function',{'add_report_data',3}}] )
'add_report_data'/4 =
    %% Line 448
    ( fun (_0,_1,_2,_3) ->
	  ( case <_0,_1,_2,_3> of
	      <[{Type,ShortDescr,Date,FilePos}|T],No,FName,Res> when 'true' ->
		  let <_4> =
		      call %% Line 449
			   'erlang':%% Line 449
				    '+'
			  (%% Line 449
			   No, %% Line 449
			       1)
		  in  %% Line 449
		      apply 'add_report_data'/4
			  (T, _4, FName, %% Line 450
					 [{No,Type,ShortDescr,Date,FName,FilePos}|Res])
	      %% Line 451
	      <[],_X_No,_X_FName,Res> when 'true' ->
		  Res
	      ( <_8,_7,_6,_5> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_8,_7,_6,_5})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'add_report_data',4}}] )
      -| [{'function',{'add_report_data',4}}] )
'read_reports'/3 =
    %% Line 453
    ( fun (_0,_1,_2) ->
	  %% Line 454
	  case call 'file':'position'
		   (_0, 'cur') of
	    <{'ok',FilePos}> when 'true' ->
		let <_4> =
		    catch
			%% Line 455
			apply 'read_report'/1
			    (_0)
		in  %% Line 455
		    case _4 of
		      %% Line 456
		      <{'ok',Report}> when 'true' ->
			  let <RealType> =
			      apply %% Line 457
				    'get_type'/1
				  (%% Line 457
				   Report)
			  in  %% Line 458
			      case apply 'get_short_descr'/1
				       (Report) of
				<{ShortDescr,Date}> when 'true' ->
				    let <Rep> =
					{%% Line 459
					 RealType,%% Line 459
						  ShortDescr,%% Line 459
							     Date,%% Line 459
								  FilePos}
				    in  %% Line 460
					case <> of
					  %% Line 461
					  <>
					      when call 'erlang':'=='
						    (_2,
						     'all') ->
					      %% Line 462
					      apply 'read_reports'/3
						  (_0, [Rep|_1], _2)
					  %% Line 463
					  <>
					      when call 'erlang':'=='
						    (RealType,
						     _2) ->
					      %% Line 464
					      apply 'read_reports'/3
						  (_0, [Rep|_1], _2)
					  %% Line 465
					  <>
					      when call 'erlang':'is_list'
						    (_2) ->
					      %% Line 466
					      case call 'lists':'member'
						       (RealType, _2) of
						%% Line 467
						<'true'> when 'true' ->
						    %% Line 468
						    apply 'read_reports'/3
							(_0, [Rep|_1], _2)
						%% Line 469
						<_13> when 'true' ->
						    %% Line 470
						    apply 'read_reports'/3
							(_0, _1, _2)
					      end
					  %% Line 472
					  <> when 'true' ->
					      %% Line 473
					      apply 'read_reports'/3
						  (_0, _1, _2)
					end
				( <_6> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_6})
				  -| ['compiler_generated'] )
			      end
		      %% Line 475
		      <{'error',Error}> when 'true' ->
			  %% Line 476
			  {'error',[{'unknown',Error,[],FilePos}|_1]}
		      %% Line 477
		      <'eof'> when 'true' ->
			  %% Line 478
			  {'ok',_1}
		      %% Line 479
		      <{'EXIT',Reason}> when 'true' ->
			  %% Line 480
			  [{'unknown',Reason,[],FilePos}|_1]
		      ( <_9> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_9})
			-| ['compiler_generated'] )
		    end
	    ( <_3> when 'true' ->
		  primop 'match_fail'
		      ({'badmatch',_3})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'read_reports',3}}] )
'read_report'/1 =
    %% Line 483
    ( fun (_0) ->
	  %% Line 484
	  case call 'io':'get_chars'
		   (( _0
		      -| [{'function',{'read_report',1}}] ), '', 2) of
	    %% Line 485
	    <[Hi|[Lo|[]]]> when 'true' ->
		let <Size> =
		    apply %% Line 486
			  'get_int16'/2
			(%% Line 486
			 Hi, %% Line 486
			     Lo)
		in  %% Line 487
		    case call 'io':'get_chars'
			     (( _0
				-| [{'function',{'read_report',1}}] ), '', Size) of
		      %% Line 488
		      <'eof'> when 'true' ->
			  %% Line 489
			  {'error',[80|[114|[101|[109|[97|[116|[117|[114|[101|[32|[101|[110|[100|[32|[111|[102|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]]}
		      %% Line 490
		      <List> when 'true' ->
			  let <Bin> =
			      call %% Line 491
				   'erlang':%% Line 491
					    'list_to_binary'
				  (%% Line 491
				   List)
			  in  let <Ref> =
				  call %% Line 492
				       'erlang':%% Line 492
						'make_ref'
				      ()
			      in  let <_5> =
				      catch
					  let <_4> =
					      call %% Line 493
						   'erlang':%% Line 493
							    'binary_to_term'
						  (%% Line 493
						   Bin)
					  in  %% Line 493
					      {Ref,_4}
				  in  %% Line 493
				      case _5 of
					%% Line 494
					<{'EXIT',_10}> when 'true' ->
					    %% Line 495
					    {'error',[73|[110|[99|[111|[109|[112|[108|[101|[116|[101|[32|[101|[114|[108|[97|[110|[103|[32|[116|[101|[114|[109|[32|[105|[110|[32|[108|[111|[103]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}
					%% Line 496
					<{_11,Term}>
					    when call 'erlang':'=:='
						  (_11,
						   Ref) ->
					    %% Line 497
					    {'ok',Term}
					( <_6> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_6})
					  -| ['compiler_generated'] )
				      end
		    end
	    %% Line 500
	    <'eof'> when 'true' ->
		%% Line 501
		'eof'
	    ( <_8> when 'true' ->
		  primop 'match_fail'
		      ({'case_clause',_8})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'read_report',1}}] )
'get_int16'/2 =
    %% Line 504
    ( fun (_0,_1) ->
	  let <_3> =
	      call %% Line 505
		   'erlang':%% Line 505
			    'bsl'
		  (_0, %% Line 505
		       8)
	  in  let <_4> =
		  call %% Line 505
		       'erlang':%% Line 505
				'band'
		      (_3, %% Line 505
			   65280)
	      in  let <_2> =
		      call %% Line 505
			   'erlang':%% Line 505
				    'band'
			  (_1, %% Line 505
			       255)
		  in  %% Line 505
		      call 'erlang':'bor'
			  (_4, _2)
      -| [{'function',{'get_int16',2}}] )
'get_type'/1 =
    %% Line 512
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'get_type',1}}] ) of
	      <{_X_Time,{'error_report',_X_Pid,{_2,'crash_report',_3}}}> when 'true' ->
		  %% Line 513
		  'crash_report'
	      %% Line 514
	      <{_X_Time,{'error_report',_X_Pid,{_4,'supervisor_report',_5}}}> when 'true' ->
		  %% Line 515
		  'supervisor_report'
	      %% Line 516
	      <{_X_Time,{'info_report',_X_Pid,{_6,'progress',_7}}}> when 'true' ->
		  %% Line 517
		  'progress'
	      %% Line 518
	      <{_X_Time,{Type,_8,_9}}> when 'true' ->
		  Type
	      %% Line 519
	      <_10> when 'true' ->
		  'unknown'
	    end
	    -| [{'function',{'get_type',1}}] )
      -| [{'function',{'get_type',1}}] )
'get_short_descr'/1 =
    %% Line 521
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'get_short_descr',1}}] ) of
	      <{{Date,Time},{'error_report',Pid,{_13,'crash_report',Rep}}}> when 'true' ->
		  %% Line 522
		  case Rep of
		    <[OwnRep|_14]> when 'true' ->
			let <_4> =
			    case %% Line 524
				 call 'lists':'keysearch'
				     ('registered_name', 1, OwnRep) of
			      %% Line 525
			      <{'value',{_X_Key,[]}}> when 'true' ->
				  %% Line 526
				  case call 'lists':'keysearch'
					   ('initial_call', 1, OwnRep) of
				    %% Line 527
				    <{'value',{_X_K,{M,_X_F,_X_A}}}> when 'true' ->
					M
				    %% Line 528
				    <_15> when 'true' ->
					Pid
				  end
			      %% Line 530
			      <{'value',{_X_Key,N}}> when 'true' ->
				  N
			      %% Line 531
			      <_16> when 'true' ->
				  Pid
			    end
			in  let <_6> =
				apply %% Line 533
				      'date_str'/2
				    (%% Line 533
				     Date, %% Line 533
					   Time)
			    in  %% Line 533
				{_4,_6}
		    ( <_1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1})
		      -| ['compiler_generated'] )
		  end
	      %% Line 534
	      <{{Date,Time},{'error_report',Pid,{_17,'supervisor_report',Rep}}}> when 'true' ->
		  let <_8> =
		      case %% Line 536
			   call 'lists':'keysearch'
			       ('supervisor', 1, Rep) of
			%% Line 537
			<{'value',{_X_Key,N}}>
			    when call 'erlang':'is_atom'
				  (N) ->
			    N
			%% Line 538
			<_18> when 'true' ->
			    Pid
		      end
		  in  let <_10> =
			  apply %% Line 540
				'date_str'/2
			      (%% Line 540
			       Date, %% Line 540
				     Time)
		      in  %% Line 540
			  {_8,_10}
	      %% Line 541
	      <{{Date,Time},{_X_Type,Pid,_19}}> when 'true' ->
		  let <_11> =
		      apply %% Line 542
			    'date_str'/2
			  (%% Line 542
			   Date, %% Line 542
				 Time)
		  in  %% Line 542
		      {Pid,_11}
	      %% Line 543
	      <_20> when 'true' ->
		  %% Line 544
		  {'???',[63|[63|[63]]]}
	    end
	    -| [{'function',{'get_short_descr',1}}] )
      -| [{'function',{'get_short_descr',1}}] )
'date_str'/2 =
    %% Line 546
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <Date = {Y,Mo,D},Time = {H,Mi,S}> when 'true' ->
		  %% Line 547
		  case call 'application':'get_env'
			   ('sasl', 'utc_log') of
		    %% Line 548
		    <{'ok','true'}> when 'true' ->
			%% Line 549
			case %% Line 550
			     apply 'local_time_to_universal_time'/1
				 ({Date,Time}) of
			  <{{YY,MoMo,DD},{HH,MiMi,SS}}> when 'true' ->
			      let <_3> =
				  call %% Line 551
				       'io_lib':%% Line 551
						'format'
				      (%% Line 551
				       [126|[119|[45|[126|[50|[46|[50|[46|[48|[119|[45|[126|[50|[46|[50|[46|[48|[119|[32|[126|[50|[46|[50|[46|[48|[119|[58|[126|[50|[46|[50|[46|[48|[119|[58|[126|[50|[46|[50|[46|[48|[119|[32|[85|[84|[67]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 553
																																			  [YY|[MoMo|[DD|[HH|[MiMi|[SS|[]]]]]]])
			      in  %% Line 551
				  call 'lists':'flatten'
				      (_3)
			  ( <_2> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_2})
			    -| ['compiler_generated'] )
			end
		    %% Line 554
		    <_8> when 'true' ->
			let <_4> =
			    call %% Line 555
				 'io_lib':%% Line 555
					  'format'
				(%% Line 555
				 [126|[119|[45|[126|[50|[46|[50|[46|[48|[119|[45|[126|[50|[46|[50|[46|[48|[119|[32|[126|[50|[46|[50|[46|[48|[119|[58|[126|[50|[46|[50|[46|[48|[119|[58|[126|[50|[46|[50|[46|[48|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 557
																																[Y|[Mo|[D|[H|[Mi|[S|[]]]]]]])
			in  %% Line 555
			    call 'lists':'flatten'
				(_4)
		  end
	      ( <_7,_6> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_7,_6})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'date_str',2}}] )
      -| [{'function',{'date_str',2}}] )
'local_time_to_universal_time'/1 =
    %% Line 560
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'local_time_to_universal_time',1}}] ) of
	      <_@r0 = {Date,Time}> when 'true' ->
		  %% Line 561
		  case call 'calendar':'local_time_to_universal_time_dst'
			   (_@r0) of
		    %% Line 562
		    <[UCT|[]]> when 'true' ->
			%% Line 563
			UCT
		    %% Line 564
		    <[UCT1|[_X_UCT2|[]]]> when 'true' ->
			%% Line 565
			UCT1
		    %% Line 566
		    <[]> when 'true' ->
			%% Line 567
			_@r0
		    ( <_1> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_1})
		      -| ['compiler_generated'] )
		  end
	      ( <_2> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_2})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'local_time_to_universal_time',1}}] )
      -| [{'function',{'local_time_to_universal_time',1}}] )
'print_list'/3 =
    %% Line 571
    ( fun (_0,_1,_2) ->
	  let <Modifier> =
	      call %% Line 572
		   'misc_supp':%% Line 572
			       'modifier'
		  (_0)
	  in  %% Line 574
	      case apply 'find_widths'/5
		       (_1, Modifier, 7, 13, []) of
		<{DescrWidth,DateWidth,Data}> when 'true' ->
		    let <Format> =
			call %% Line 575
			     'lists':%% Line 575
				     'concat'
			    (%% Line 575
			     [[126|[52|[115|[126|[50|[48|[115|[32|[126]]]]]]]]]|[DescrWidth|[[115|[126|[50|[48|[115|[126|[110]]]]]]]]]])
		    in  do  %% Line 576
			    call 'io':'format'
				(_0, Format, [[78|[111]]|[[84|[121|[112|[101]]]]|[[80|[114|[111|[99|[101|[115|[115]]]]]]]|[[68|[97|[116|[101|[32|[32|[32|[32|[32|[84|[105|[109|[101]]]]]]]]]]]]]]]]])
			    do  %% Line 577
				call 'io':'format'
				    (_0, Format, [[61|[61]]|[[61|[61|[61|[61]]]]|[[61|[61|[61|[61|[61|[61|[61]]]]]]]|[[61|[61|[61|[61|[32|[32|[32|[32|[32|[61|[61|[61|[61]]]]]]]]]]]]]]]]])
				%% Line 578
				apply 'print_list'/6
				    (_0, Data, _2, DescrWidth, DateWidth, Modifier)
		( <_5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_5})
		  -| ['compiler_generated'] )
	      end
      -| [{'function',{'print_list',3}}] )
'print_list'/6 =
    %% Line 579
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  ( case <_0,_1,_2,_3,_4,_5> of
	      <_12,[],_13,_14,_15,_16> when 'true' ->
		  'true'
	      %% Line 580
	      <Fd,[H|T],Type,Width,DateWidth,Modifier> when 'true' ->
		  do  %% Line 581
		      apply 'print_one_report'/6
			  (Fd, H, Type, Width, DateWidth, Modifier)
		      %% Line 582
		      apply 'print_list'/6
			  (Fd, T, Type, Width, DateWidth, Modifier)
	      ( <_11,_10,_9,_8,_7,_6> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_11,_10,_9,_8,_7,_6})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'print_list',6}}] )
      -| [{'function',{'print_list',6}}] )
'find_widths'/5 =
    %% Line 585
    ( fun (_0,_1,_2,_3,_4) ->
	  ( case <_0,_1,_2,_3,_4> of
	      <[],_X_Modifier,DescrWidth,DateWidth,Data> when 'true' ->
		  let <_7> =
		      call %% Line 586
			   'erlang':%% Line 586
				    '+'
			  (%% Line 586
			   DescrWidth, %% Line 586
				       1)
		  in  let <_6> =
			  call %% Line 586
			       'erlang':%% Line 586
					'+'
			      (%% Line 586
			       DateWidth, %% Line 586
					  1)
		      in  let <_5> =
			      call %% Line 586
				   'lists':%% Line 586
					   'reverse'
				  (%% Line 586
				   Data)
			  in  %% Line 586
			      {_7,_6,_5}
	      %% Line 587
	      <[H|T],Modifier,DescrWidth,DateWidth,Data> when 'true' ->
		  let <DescrTerm> =
		      call %% Line 588
			   'erlang':%% Line 588
				    'element'
			  (%% Line 588
			   3, %% Line 588
			      H)
		  in  let <_9> =
			  call %% Line 589
			       'erlang':%% Line 589
					'++'
			      (%% Line 589
			       Modifier, %% Line 589
					 [119])
		      in  let <_10> =
			      [126|_9]
			  in  let <Descr> =
				  call %% Line 589
				       'io_lib':%% Line 589
						'format'
				      (_10, %% Line 589
					    [DescrTerm|[]])
			      in  let <DescrTry> =
				      call %% Line 590
					   'string':%% Line 590
						    'length'
					  (%% Line 590
					   Descr)
				  in  let <_13> =
					  case <> of
					    %% Line 593
					    <>
						when call 'erlang':'>'
						      (DescrTry,
						       DescrWidth) ->
						DescrTry
					    %% Line 594
					    <> when 'true' ->
						DescrWidth
					  end
				      in  let <_15> =
					      call %% Line 596
						   'erlang':%% Line 596
							    'element'
						  (%% Line 596
						   4, %% Line 596
						      H)
					  in  let <DateTry> =
						  call %% Line 596
						       'string':%% Line 596
								'length'
						      (_15)
					      in  let <_17> =
						      case <> of
							%% Line 599
							<>
							    when call 'erlang':'>'
								  (DateTry,
								   DateWidth) ->
							    DateTry
							%% Line 600
							<> when 'true' ->
							    DateWidth
						      end
						  in  let <NewH> =
							  call %% Line 602
							       'erlang':%% Line 602
									'setelement'
							      (%% Line 602
							       3, %% Line 602
								  H, %% Line 602
								     Descr)
						      in  %% Line 603
							  apply 'find_widths'/5
							      (T, Modifier, _13, _17, [NewH|Data])
	      ( <_24,_23,_22,_21,_20> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_24,_23,_22,_21,_20})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'find_widths',5}}] )
      -| [{'function',{'find_widths',5}}] )
'print_one_report'/6 =
    %% Line 605
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  ( case <_0,_1,_2,_3,_4,_5> of
	      <Fd,{No,RealType,ShortDescr,Date,_X_Fname,_X_FilePos},%% Line 606
								    WantedType,%% Line 607
									       Width,%% Line 607
										     DateWidth,%% Line 607
											       Modifier> when 'true' ->
		  %% Line 608
		  case <> of
		    %% Line 609
		    <>
			when call 'erlang':'=='
			      (WantedType,
			       'all') ->
			%% Line 610
			apply 'print_short_descr'/8
			    (Fd, No, RealType, ShortDescr, Date, Width, %% Line 611
									DateWidth, %% Line 611
										   Modifier)
		    %% Line 612
		    <>
			when call 'erlang':'=='
			      (WantedType,
			       RealType) ->
			%% Line 613
			apply 'print_short_descr'/8
			    (Fd, No, RealType, ShortDescr, Date, Width, %% Line 614
									DateWidth, %% Line 614
										   Modifier)
		    %% Line 615
		    <> when 'true' ->
			'ok'
		  end
	      ( <_11,_10,_9,_8,_7,_6> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_11,_10,_9,_8,_7,_6})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'print_one_report',6}}] )
      -| [{'function',{'print_one_report',6}}] )
'print_short_descr'/8 =
    %% Line 618
    ( fun (_0,_1,_2,_3,_4,_5,_6,_7) ->
	  let <Format> =
	      call %% Line 619
		   'lists':%% Line 619
			   'concat'
		  (%% Line 619
		   [[126|[52|[119|[126|[50|[48]]]]]]|[_7|[[119|[32|[126]]]|[_5|[_7|[[115|[126]]|%% Line 620
												[_6|[[115|[126|[110]]]]]]]]]]])
	  in  %% Line 621
	      call 'io':'format'
		  (_0, Format, [_1|[_2|[_3|[_4|[]]]]])
      -| [{'function',{'print_short_descr',8}}] )
'print_report_by_num'/6 =
    %% Line 623
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  %% Line 624
	  case apply 'print_report'/6
		   (_0, _1, _2, _3, _4, _5) of
	    <{_13,Device1}> when 'true' ->
		%% Line 625
		Device1
	    ( <_6> when 'true' ->
		  primop 'match_fail'
		      ({'badmatch',_6})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'print_report_by_num',6}}] )
'print_typed_reports'/6 =
    %% Line 627
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  ( case <_0,_1,_2,_3,_4,_5> of
	      <_X_Dir,[],_X_Type,Device,_X_Abort,_X_Log> when 'true' ->
		  %% Line 628
		  Device
	      %% Line 629
	      <Dir,Data,Type,Device,Abort,Log> when 'true' ->
		  let <_6> =
		      call %% Line 631
			   'erlang':%% Line 631
				    'hd'
			  (%% Line 631
			   Data)
		  in  let <_10> =
			  case %% Line 631
			       call 'erlang':'element'
				   (2, _6) of
			    %% Line 632
			    <_19>
				when call 'erlang':'=:='
				      (_19,
				       Type) ->
				let <_7> =
				    call %% Line 633
					 'erlang':%% Line 633
						  'hd'
					(%% Line 633
					 Data)
				in  let <_8> =
					call %% Line 633
					     'erlang':%% Line 633
						      'element'
					    (%% Line 633
					     1, _7)
				    in  %% Line 633
					apply 'print_report'/6
					    (Dir, Data, _8, Device, Abort, Log)
			    %% Line 634
			    <_20> when 'true' ->
				%% Line 635
				{'proceed',Device}
			  end
		      in  %% Line 630
			  case _10 of
			    <{Next,Device1}> when 'true' ->
				%% Line 637
				case <> of
				  <>
				      when call 'erlang':'=='
					    (Next,
					     'abort') ->
				      %% Line 638
				      Device1
				  %% Line 639
				  <> when 'true' ->
				      let <_12> =
					  call %% Line 640
					       'erlang':%% Line 640
							'tl'
					      (%% Line 640
					       Data)
				      in  %% Line 640
					  apply 'print_typed_reports'/6
					      (Dir, _12, Type, Device1, Abort, Log)
				end
			    ( <_11> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_11})
			      -| ['compiler_generated'] )
			  end
	    end
	    -| [{'function',{'print_typed_reports',6}}] )
      -| [{'function',{'print_typed_reports',6}}] )
'print_all_reports'/5 =
    %% Line 643
    ( fun (_0,_1,_2,_3,_4) ->
	  ( case <_0,_1,_2,_3,_4> of
	      <_X_Dir,[],Device,_X_Abort,_X_Log> when 'true' ->
		  %% Line 644
		  Device
	      %% Line 645
	      <Dir,Data,Device,Abort,Log> when 'true' ->
		  let <_5> =
		      call %% Line 646
			   'erlang':%% Line 646
				    'hd'
			  (%% Line 646
			   Data)
		  in  let <_6> =
			  call %% Line 646
			       'erlang':%% Line 646
					'element'
			      (%% Line 646
			       1, _5)
		      in  %% Line 646
			  case apply 'print_report'/6
				   (Dir, Data, _6, %% Line 647
						   Device, %% Line 647
							   Abort, %% Line 647
								  Log) of
			    <{Next,Device1}> when 'true' ->
				%% Line 648
				case <> of
				  <>
				      when call 'erlang':'=='
					    (Next,
					     'abort') ->
				      %% Line 649
				      Device1
				  %% Line 650
				  <> when 'true' ->
				      let <_8> =
					  call %% Line 651
					       'erlang':%% Line 651
							'tl'
					      (%% Line 651
					       Data)
				      in  %% Line 651
					  apply 'print_all_reports'/5
					      (Dir, _8, Device1, Abort, Log)
				end
			    ( <_7> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_7})
			      -| ['compiler_generated'] )
			  end
	    end
	    -| [{'function',{'print_all_reports',5}}] )
      -| [{'function',{'print_all_reports',5}}] )
'print_report'/6 =
    %% Line 654
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  %% Line 655
	  case apply 'find_report'/2
		   (_1, _2) of
	    %% Line 656
	    <{Fname,FilePosition}> when 'true' ->
		let <FileName> =
		    call %% Line 657
			 'lists':%% Line 657
				 'concat'
			(%% Line 657
			 [_0|[Fname|[]]])
		in  %% Line 658
		    case call 'file':'open'
			     (FileName, ['read']) of
		      %% Line 659
		      <{'ok',Fd}> when 'true' ->
			  %% Line 660
			  apply 'read_rep'/5
			      (Fd, FilePosition, _3, _4, _5)
		      %% Line 661
		      <_15> when 'true' ->
			  do  %% Line 662
			      call 'io':'format'
				  ([114|[98|[58|[32|[99|[97|[110|[39|[116|[32|[111|[112|[101|[110|[32|[102|[105|[108|[101|[32|[126|[116|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]], [Fname|[]])
			      %% Line 663
			      {'proceed',_3}
		    end
	    %% Line 665
	    <'no_report'> when 'true' ->
		%% Line 666
		{'proceed',_3}
	    ( <_8> when 'true' ->
		  primop 'match_fail'
		      ({'case_clause',_8})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'print_report',6}}] )
'find_report'/2 =
    %% Line 669
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <[{No,_X_Type,_X_Descr,_X_Date,Fname,FilePosition}|_X_T],_4>
		  when call 'erlang':'=:='
			(_4,
			 No) ->
		  %% Line 670
		  {Fname,FilePosition}
	      %% Line 671
	      <[_X_H|T],No> when 'true' ->
		  %% Line 672
		  apply 'find_report'/2
		      (T, No)
	      %% Line 673
	      <[],No> when 'true' ->
		  do  %% Line 674
		      call 'io':'format'
			  ([84|[104|[101|[114|[101|[32|[105|[115|[32|[110|[111|[32|[114|[101|[112|[111|[114|[116|[32|[119|[105|[116|[104|[32|[110|[117|[109|[98|[101|[114|[32|[126|[112|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [No|[]])
		      %% Line 675
		      'no_report'
	      ( <_3,_2> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_3,_2})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'find_report',2}}] )
      -| [{'function',{'find_report',2}}] )
'print_grep_reports'/6 =
    %% Line 677
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  ( case <_0,_1,_2,_3,_4,_5> of
	      <_X_Dir,[],_X_RegExp,Device,_X_Abort,_X_Log> when 'true' ->
		  %% Line 678
		  Device
	      %% Line 679
	      <Dir,Data,RegExp,Device,Abort,Log> when 'true' ->
		  let <_6> =
		      call %% Line 680
			   'erlang':%% Line 680
				    'hd'
			  (%% Line 680
			   Data)
		  in  let <_7> =
			  call %% Line 680
			       'erlang':%% Line 680
					'element'
			      (%% Line 680
			       1, _6)
		      in  %% Line 680
			  case apply 'print_grep_report'/7
				   (Dir, Data, _7, %% Line 681
						   Device, %% Line 681
							   RegExp, %% Line 681
								   Abort, %% Line 681
									  Log) of
			    <{Next,Device1}> when 'true' ->
				%% Line 682
				case <> of
				  <>
				      when call 'erlang':'=='
					    (Next,
					     'abort') ->
				      %% Line 683
				      Device1
				  %% Line 684
				  <> when 'true' ->
				      let <_9> =
					  call %% Line 685
					       'erlang':%% Line 685
							'tl'
					      (%% Line 685
					       Data)
				      in  %% Line 685
					  apply 'print_grep_reports'/6
					      (Dir, _9, RegExp, Device1, Abort, Log)
				end
			    ( <_8> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_8})
			      -| ['compiler_generated'] )
			  end
	    end
	    -| [{'function',{'print_grep_reports',6}}] )
      -| [{'function',{'print_grep_reports',6}}] )
'print_grep_report'/7 =
    %% Line 688
    ( fun (_0,_1,_2,_3,_4,_5,_6) ->
	  %% Line 689
	  case apply 'find_report'/2
		   (_1, _2) of
	    <{Fname,FilePosition}> when 'true' ->
		let <FileName> =
		    call %% Line 690
			 'lists':%% Line 690
				 'concat'
			(%% Line 690
			 [_0|[Fname|[]]])
		in  %% Line 691
		    case call 'file':'open'
			     (FileName, ['read']) of
		      %% Line 692
		      <{'ok',Fd}>
			  when call 'erlang':'is_pid'
				(Fd) ->
			  %% Line 693
			  apply 'check_rep'/7
			      (Fd, FilePosition, _3, _4, _2, _5, _6)
		      %% Line 694
		      <_17> when 'true' ->
			  do  %% Line 695
			      call 'io':'format'
				  ([114|[98|[58|[32|[99|[97|[110|[39|[116|[32|[111|[112|[101|[110|[32|[102|[105|[108|[101|[32|[126|[116|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]], [Fname|[]])
			      %% Line 696
			      {'proceed',_3}
		    end
	    ( <_7> when 'true' ->
		  primop 'match_fail'
		      ({'badmatch',_7})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'print_grep_report',7}}] )
'check_rep'/7 =
    %% Line 699
    ( fun (_0,_1,_2,_3,_4,_5,_6) ->
	  %% Line 700
	  case apply 'read_rep_msg'/2
		   (_0, _1) of
	    %% Line 701
	    <{Date,Msg}> when 'true' ->
		let <_7> =
		    call %% Line 702
			 'io_lib':%% Line 702
				  'format'
			(%% Line 702
			 [126|[116|[112]]], %% Line 702
					    [Msg|[]])
		in  let <MsgStr> =
			call %% Line 702
			     'lists':%% Line 702
				     'flatten'
			    (_7)
		    in  %% Line 703
			case apply 'run_re'/2
				 (MsgStr, _3) of
			  %% Line 704
			  <'match'> when 'true' ->
			      do  %% Line 705
				  call 'io':'format'
				      ([70|[111|[117|[110|[100|[32|[109|[97|[116|[99|[104|[32|[105|[110|[32|[114|[101|[112|[111|[114|[116|[32|[110|[117|[109|[98|[101|[114|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_4|[]])
				  let <_9> =
				      catch
					  %% Line 706
					  call 'rb_format_supp':'print'
					      (Date, Msg, _2)
				  in  %% Line 706
				      case _9 of
					%% Line 707
					<{'EXIT',_20}> when 'true' ->
					    %% Line 708
					    apply 'handle_bad_form'/5
						(Date, Msg, _2, _5, _6)
					%% Line 709
					<_21> when 'true' ->
					    %% Line 710
					    {'proceed',_2}
				      end
			  %% Line 712
			  <_22> when 'true' ->
			      %% Line 713
			      {'proceed',_2}
			end
	    %% Line 715
	    <_23> when 'true' ->
		do  %% Line 716
		    call 'io':'format'
			([114|[98|[58|[32|[67|[97|[110|[110|[111|[116|[32|[114|[101|[97|[100|[32|[102|[114|[111|[109|[32|[102|[105|[108|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]])
		    %% Line 717
		    {'proceed',_2}
	  end
      -| [{'function',{'check_rep',7}}] )
'run_re'/2 =
    %% Line 720
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <Subject,{Regexp,Options}> when 'true' ->
		  %% Line 721
		  apply 'run_re'/3
		      (Subject, Regexp, Options)
	      %% Line 722
	      <Subject,Regexp> when 'true' ->
		  %% Line 723
		  apply 'run_re'/3
		      (Subject, Regexp, [])
	    end
	    -| [{'function',{'run_re',2}}] )
      -| [{'function',{'run_re',2}}] )
'run_re'/3 =
    %% Line 725
    ( fun (_0,_1,_2) ->
	  let <_3> =
	      call %% Line 726
		   'erlang':%% Line 726
			    '--'
		  (_2, %% Line 726
		       ['unicode'])
	  in  %% Line 726
	      case call 're':'run'
		       (_0, _1, ['unicode'|_3]) of
		%% Line 727
		<'nomatch'> when 'true' ->
		    %% Line 728
		    'nomatch'
		%% Line 729
		<_8> when 'true' ->
		    %% Line 730
		    'match'
	      end
      -| [{'function',{'run_re',3}}] )
'filter_all_reports'/6 =
    %% Line 733
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  ( case <_0,_1,_2,_3,_4,_5> of
	      <_X_Dir,[],_X_Filters,Device,_X_Abort,_X_Log> when 'true' ->
		  %% Line 734
		  Device
	      %% Line 735
	      <Dir,Data,Filters,Device,Abort,Log> when 'true' ->
		  let <_6> =
		      call %% Line 736
			   'erlang':%% Line 736
				    'hd'
			  (%% Line 736
			   Data)
		  in  let <_7> =
			  call %% Line 736
			       'erlang':%% Line 736
					'element'
			      (%% Line 736
			       1, _6)
		      in  %% Line 736
			  case apply 'filter_report'/7
				   (Dir, Data, Filters, _7, %% Line 737
							    Device, %% Line 737
								    Abort, %% Line 737
									   Log) of
			    <{Next,Device1}> when 'true' ->
				%% Line 738
				case <> of
				  <>
				      when call 'erlang':'=='
					    (Next,
					     'abort') ->
				      %% Line 739
				      Device1
				  %% Line 740
				  <> when 'true' ->
				      let <_9> =
					  call %% Line 741
					       'erlang':%% Line 741
							'tl'
					      (%% Line 741
					       Data)
				      in  %% Line 741
					  apply 'filter_all_reports'/6
					      (Dir, _9, Filters, Device1, Abort, Log)
				end
			    ( <_8> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_8})
			      -| ['compiler_generated'] )
			  end
	    end
	    -| [{'function',{'filter_all_reports',6}}] )
      -| [{'function',{'filter_all_reports',6}}] )
'filter_report'/7 =
    %% Line 744
    ( fun (_0,_1,_2,_3,_4,_5,_6) ->
	  %% Line 745
	  case apply 'find_report'/2
		   (_1, _3) of
	    %% Line 746
	    <{Fname,FilePosition}> when 'true' ->
		let <FileName> =
		    call %% Line 747
			 'lists':%% Line 747
				 'concat'
			(%% Line 747
			 [_0|[Fname|[]]])
		in  %% Line 748
		    case call 'file':'open'
			     (FileName, ['read']) of
		      %% Line 749
		      <{'ok',Fd}> when 'true' ->
			  %% Line 750
			  apply 'filter_rep'/6
			      (_2, Fd, FilePosition, _4, _5, _6)
		      %% Line 751
		      <_17> when 'true' ->
			  do  %% Line 752
			      call 'io':'format'
				  ([114|[98|[58|[32|[99|[97|[110|[39|[116|[32|[111|[112|[101|[110|[32|[102|[105|[108|[101|[32|[126|[116|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]], [Fname|[]])
			      %% Line 753
			      {'proceed',_4}
		    end
	    %% Line 755
	    <'no_report'> when 'true' ->
		%% Line 756
		{'proceed',_4}
	    ( <_9> when 'true' ->
		  primop 'match_fail'
		      ({'case_clause',_9})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'filter_report',7}}] )
'filter_rep'/6 =
    %% Line 759
    ( fun (_0,_1,_2,_3,_4,_5) ->
	  ( case <_0,_1,_2,_3,_4,_5> of
	      <{Filters,FDates},Fd,FilePosition,Device,Abort,Log> when 'true' ->
		  let <RepMsg> =
		      apply %% Line 760
			    'read_rep_msg'/2
			  (%% Line 760
			   Fd, %% Line 760
			       FilePosition)
		  in  %% Line 761
		      case RepMsg of
			%% Line 762
			<{_X_DateStr,{Date,_X_Msg}}> when 'true' ->
			    %% Line 763
			    case apply 'compare_dates'/2
				     (Date, FDates) of
			      %% Line 764
			      <'true'> when 'true' ->
				  %% Line 765
				  apply 'print_filter_report'/5
				      (RepMsg, Filters, Device, Abort, Log)
			      %% Line 766
			      <_17> when 'true' ->
				  %% Line 767
				  {'proceed',Device}
			    end
			%% Line 769
			<_18> when 'true' ->
			    do  %% Line 770
				call 'io':'format'
				    ([114|[98|[58|[32|[67|[97|[110|[110|[111|[116|[32|[114|[101|[97|[100|[32|[102|[114|[111|[109|[32|[102|[105|[108|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]])
				%% Line 771
				{'proceed',Device}
		      end
	      %% Line 773
	      <Filters,Fd,FilePosition,Device,Abort,Log> when 'true' ->
		  %% Line 775
		  case apply 'read_rep_msg'/2
			   (Fd, FilePosition) of
		    %% Line 776
		    <_@r0 = {Date,Msg}> when 'true' ->
			%% Line 777
			apply 'print_filter_report'/5
			    (_@r0, Filters, Device, Abort, Log)
		    %% Line 778
		    <_19> when 'true' ->
			do  %% Line 779
			    call 'io':'format'
				([114|[98|[58|[32|[67|[97|[110|[110|[111|[116|[32|[114|[101|[97|[100|[32|[102|[114|[111|[109|[32|[102|[105|[108|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]])
			    %% Line 780
			    {'proceed',Device}
		  end
	    end
	    -| [{'function',{'filter_rep',6}}] )
      -| [{'function',{'filter_rep',6}}] )
'filter_report'/2 =
    %% Line 783
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <[],_X_Msg> when 'true' ->
		  %% Line 784
		  'true'
	      %% Line 785
	      <[{Key,Value}|T],Msg> when 'true' ->
		  %% Line 786
		  case call 'proplists':'get_value'
			   (Key, Msg) of
		    %% Line 787
		    <_14>
			when call 'erlang':'=:='
			      (_14,
			       Value) ->
			%% Line 788
			apply 'filter_report'/2
			    (T, Msg)
		    %% Line 789
		    <_15> when 'true' ->
			%% Line 790
			'false'
		  end
	      %% Line 792
	      <[{Key,Value,'no'}|T],Msg> when 'true' ->
		  %% Line 793
		  case call 'proplists':'get_value'
			   (Key, Msg) of
		    %% Line 794
		    <_16>
			when call 'erlang':'=:='
			      (_16,
			       Value) ->
			%% Line 795
			'false'
		    %% Line 796
		    <_17> when 'true' ->
			%% Line 797
			apply 'filter_report'/2
			    (T, Msg)
		  end
	      %% Line 799
	      <[{Key,RegExp,'re'}|T],Msg> when 'true' ->
		  %% Line 800
		  case call 'proplists':'get_value'
			   (Key, Msg) of
		    %% Line 801
		    <'undefined'> when 'true' ->
			%% Line 802
			'false'
		    %% Line 803
		    <Value> when 'true' ->
			let <_4> =
			    call %% Line 804
				 'io_lib':%% Line 804
					  'format'
				(%% Line 804
				 [126|[116|[112]]], %% Line 804
						    [Value|[]])
			in  let <Subject> =
				call %% Line 804
				     'lists':%% Line 804
					     'flatten'
				    (_4)
			    in  %% Line 805
				case apply 'run_re'/2
					 (Subject, RegExp) of
				  %% Line 806
				  <'match'> when 'true' ->
				      %% Line 807
				      apply 'filter_report'/2
					  (T, Msg)
				  %% Line 808
				  <_18> when 'true' ->
				      'false'
				end
		  end
	      %% Line 811
	      <[{Key,RegExp,'re','no'}|T],Msg> when 'true' ->
		  %% Line 812
		  case call 'proplists':'get_value'
			   (Key, Msg) of
		    %% Line 813
		    <'undefined'> when 'true' ->
			%% Line 814
			'true'
		    %% Line 815
		    <Value> when 'true' ->
			let <_8> =
			    call %% Line 816
				 'io_lib':%% Line 816
					  'format'
				(%% Line 816
				 [126|[116|[112]]], %% Line 816
						    [Value|[]])
			in  let <Subject> =
				call %% Line 816
				     'lists':%% Line 816
					     'flatten'
				    (_8)
			    in  %% Line 817
				case apply 'run_re'/2
					 (Subject, RegExp) of
				  %% Line 818
				  <'match'> when 'true' ->
				      'false'
				  %% Line 819
				  <_19> when 'true' ->
				      apply 'filter_report'/2
					  (T, Msg)
				end
		  end
	      ( <_13,_12> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_13,_12})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'filter_report',2}}] )
      -| [{'function',{'filter_report',2}}] )
'get_compare_dates'/2 =
    %% Line 823
    ( fun (_0,_1) ->
	  %% Line 824
	  case call 'application':'get_env'
		   ('sasl', 'utc_log') of
	    %% Line 825
	    <{'ok','true'}> when 'true' ->
		let <_3> =
		    apply %% Line 826
			  'local_time_to_universal_time'/1
			(_0)
		in  let <_2> =
			apply %% Line 827
			      'local_time_to_universal_time'/1
			    (_1)
		    in  %% Line 826
			{_3,_2}
	    %% Line 828
	    <_7> when 'true' ->
		%% Line 829
		{_0,_1}
	  end
      -| [{'function',{'get_compare_dates',2}}] )
'get_compare_dates'/3 =
    %% Line 831
    ( fun (_0,_1,_2) ->
	  %% Line 832
	  case call 'application':'get_env'
		   ('sasl', 'utc_log') of
	    %% Line 833
	    <{'ok','true'}> when 'true' ->
		let <_5> =
		    apply %% Line 834
			  'local_time_to_universal_time'/1
			(_0)
		in  let <_4> =
			apply %% Line 835
			      'local_time_to_universal_time'/1
			    (_1)
		    in  let <_3> =
			    apply %% Line 836
				  'local_time_to_universal_time'/1
				(_2)
			in  %% Line 834
			    {_5,_4,_3}
	    %% Line 837
	    <_10> when 'true' ->
		%% Line 838
		{_0,_1,_2}
	  end
      -| [{'function',{'get_compare_dates',3}}] )
'compare_dates'/2 =
    %% Line 841
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <Date,{CompareDate,'from'}> when 'true' ->
		  %% Line 842
		  case apply 'get_compare_dates'/2
			   (Date, CompareDate) of
		    <{Date2,DateFrom}> when 'true' ->
			let <_4> =
			    call %% Line 843
				 'calendar':%% Line 843
					    'datetime_to_gregorian_seconds'
				(%% Line 843
				 Date2)
			in  let <_3> =
				call %% Line 844
				     'calendar':%% Line 844
						'datetime_to_gregorian_seconds'
				    (%% Line 844
				     DateFrom)
			    in  %% Line 843
				call 'erlang':'>='
				    (_4, _3)
		    ( <_2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_2})
		      -| ['compiler_generated'] )
		  end
	      %% Line 845
	      <Date,{CompareDate,'to'}> when 'true' ->
		  %% Line 846
		  case apply 'get_compare_dates'/2
			   (Date, CompareDate) of
		    <{Date2,DateTo}> when 'true' ->
			let <_7> =
			    call %% Line 847
				 'calendar':%% Line 847
					    'datetime_to_gregorian_seconds'
				(%% Line 847
				 Date2)
			in  let <_6> =
				call %% Line 848
				     'calendar':%% Line 848
						'datetime_to_gregorian_seconds'
				    (%% Line 848
				     DateTo)
			    in  %% Line 847
				call 'erlang':'=<'
				    (_7, _6)
		    ( <_5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5})
		      -| ['compiler_generated'] )
		  end
	      %% Line 849
	      <Date,{From,To}> when 'true' ->
		  %% Line 850
		  case apply 'get_compare_dates'/3
			   (Date, From, To) of
		    <{Date2,DateFrom,DateTo}> when 'true' ->
			let <_11> =
			    call %% Line 851
				 'calendar':%% Line 851
					    'datetime_to_gregorian_seconds'
				(%% Line 851
				 Date2)
			in  let <_10> =
				call %% Line 852
				     'calendar':%% Line 852
						'datetime_to_gregorian_seconds'
				    (%% Line 852
				     DateFrom)
			    in  %% Line 853
				( case call 'erlang':'>='
					   (_11, _10) of
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_13> =
					      call %% Line 854
						   'calendar':%% Line 854
							      'datetime_to_gregorian_seconds'
						  (%% Line 854
						   Date2)
					  in  let <_12> =
						  call %% Line 855
						       'calendar':%% Line 855
								  'datetime_to_gregorian_seconds'
						      (%% Line 855
						       DateTo)
					      in  %% Line 854
						  call 'erlang':'=<'
						      (_13, _12)
				      -| ['compiler_generated'] )
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  'false'
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
		    ( <_8> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8})
		      -| ['compiler_generated'] )
		  end
	      ( <_16,_15> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_16,_15})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'compare_dates',2}}] )
      -| [{'function',{'compare_dates',2}}] )
'print_filter_report'/5 =
    %% Line 857
    ( fun (_0,_1,_2,_3,_4) ->
	  ( case <_0,_1,_2,_3,_4> of
	      <{Date,Msg},Filters,Device,Abort,Log> when 'true' ->
		  %% Line 858
		  case Msg of
		    <{_X_D,M}> when 'true' ->
			%% Line 859
			case M of
			  <{_16,_17,M2}> when 'true' ->
			      %% Line 860
			      case M2 of
				%% Line 861
				<{_18,_19,Report}> when 'true' ->
				    %% Line 862
				    case apply 'filter_report'/2
					     (Filters, Report) of
				      %% Line 863
				      <'true'> when 'true' ->
					  let <_7> =
					      catch
						  %% Line 864
						  call 'rb_format_supp':'print'
						      (Date, Msg, Device)
					  in  %% Line 864
					      case _7 of
						%% Line 865
						<{'EXIT',_20}> when 'true' ->
						    %% Line 866
						    apply 'handle_bad_form'/5
							(Date, Msg, Device, Abort, Log)
						%% Line 867
						<_21> when 'true' ->
						    %% Line 868
						    {'proceed',Device}
					      end
				      %% Line 870
				      <_22> when 'true' ->
					  %% Line 871
					  {'proceed',Device}
				    end
				%% Line 873
				<_23> when 'true' ->
				    %% Line 874
				    {'proceed',Device}
			      end
			  ( <_6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_6})
			    -| ['compiler_generated'] )
			end
		    ( <_5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5})
		      -| ['compiler_generated'] )
		  end
	      ( <_15,_14,_13,_12,_11> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_15,_14,_13,_12,_11})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'print_filter_report',5}}] )
      -| [{'function',{'print_filter_report',5}}] )
'read_rep'/5 =
    %% Line 877
    ( fun (_0,_1,_2,_3,_4) ->
	  %% Line 878
	  case apply 'read_rep_msg'/2
		   (_0, _1) of
	    %% Line 879
	    <{Date,Msg}> when 'true' ->
		let <_5> =
		    catch
			%% Line 880
			call 'rb_format_supp':'print'
			    (Date, Msg, _2)
		in  %% Line 880
		    case _5 of
		      %% Line 881
		      <{'EXIT',_13}> when 'true' ->
			  %% Line 882
			  apply 'handle_bad_form'/5
			      (Date, Msg, _2, _3, _4)
		      %% Line 883
		      <_14> when 'true' ->
			  %% Line 884
			  {'proceed',_2}
		    end
	    %% Line 886
	    <_15> when 'true' ->
		do  %% Line 887
		    call 'io':'format'
			([114|[98|[58|[32|[67|[97|[110|[110|[111|[116|[32|[114|[101|[97|[100|[32|[102|[114|[111|[109|[32|[102|[105|[108|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]])
		    %% Line 888
		    {'proceed',_2}
	  end
      -| [{'function',{'read_rep',5}}] )
'handle_bad_form'/5 =
    %% Line 891
    ( fun (_0,_1,_2,_3,_4) ->
	  do  %% Line 892
	      call 'io':'format'
		  ([114|[98|[58|[32|[69|[82|[82|[79|[82|[33|[32|[65|[32|[114|[101|[112|[111|[114|[116|[32|[111|[110|[32|[98|[97|[100|[32|[102|[111|[114|[109|[32|[119|[97|[115|[32|[101|[110|[99|[111|[117|[110|[116|[101|[114|[101|[100|[46|[32|[73|[116|[32|[99|[97|[110|[110|[111|[116|[32|[98|[101|[32|[112|[114|[105|[110|[116|[101|[100|[32|[116|[111|[32|[116|[104|[101|[32|[108|[111|[103|[46|[126|[110|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      do  %% Line 894
		  call 'io':'format'
		      ([68|[101|[116|[97|[105|[108|[115|[58|[126|[110|[126|[112|[32|[126|[116|[112|[126|[110|[126|[110]]]]]]]]]]]]]]]]]]]], [_0|[_1|[]]])
		  let <_6> =
		      apply %% Line 895
			    'open_log_file'/1
			  (_4)
		  in  %% Line 895
		      case <_3,_2,_6> of
			%% Line 896
			<'true','standard_io','standard_io'> when 'true' ->
			    do  %% Line 897
				call 'io':'format'
				    ([114|[98|[58|[32|[76|[111|[103|[103|[105|[110|[103|[32|[97|[98|[111|[114|[116|[101|[100|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]])
				%% Line 898
				{'abort',_2}
			%% Line 899
			<'false','standard_io','standard_io'> when 'true' ->
			    do  %% Line 900
				call 'io':'format'
				    ([114|[98|[58|[32|[76|[111|[103|[103|[105|[110|[103|[32|[114|[101|[115|[117|[109|[101|[100|[46|[46|[46|[126|[110|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]])
				%% Line 901
				{'proceed',_2}
			%% Line 902
			<_18,_19,( 'standard_io'
				   -| ['compiler_generated'] )> when 'true' ->
			    do  %% Line 903
				call 'io':'format'
				    ([114|[98|[58|[32|[67|[97|[110|[32|[110|[111|[116|[32|[114|[101|[111|[112|[101|[110|[32|[126|[116|[112|[46|[32|[76|[111|[103|[103|[105|[110|[103|[32|[97|[98|[111|[114|[116|[101|[100|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_4|[]])
				%% Line 904
				{'abort',_2}
			%% Line 905
			<( 'true'
			   -| ['compiler_generated'] ),_20,NewDevice> when 'true' ->
			    do  %% Line 906
				call 'io':'format'
				    (NewDevice, %% Line 907
						[126|[110|[126|[110|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[32|[82|[66|[32|[69|[82|[82|[79|[82|[32|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[126|[110|[65|[32|[114|[101|[112|[111|[114|[116|[32|[111|[110|[32|[98|[97|[100|[32|[102|[111|[114|[109|[32|[119|[97|[115|[32|[101|[110|[99|[111|[117|[110|[116|[101|[114|[101|[100|[32|[104|[101|[114|[101|[32|[97|[110|[100|[32|[116|[104|[101|[32|[108|[111|[103|[103|[105|[110|[103|[126|[110|[112|[114|[111|[99|[101|[115|[115|[32|[119|[97|[115|[32|[97|[98|[111|[114|[116|[101|[100|[46|[32|[78|[111|[116|[101|[32|[116|[104|[97|[116|[32|[116|[104|[101|[114|[101|[32|[109|[97|[121|[32|[119|[101|[108|[108|[32|[98|[101|[32|[114|[101|[109|[97|[105|[110|[105|[110|[103|[126|[110|[114|[101|[112|[111|[114|[116|[115|[32|[116|[104|[97|[116|[32|[104|[97|[118|[101|[110|[39|[116|[32|[121|[101|[116|[32|[98|[101|[101|[110|[32|[108|[111|[103|[103|[101|[100|[46|[32|[80|[108|[101|[97|[115|[101|[32|[115|[101|[101|[32|[116|[104|[101|[32|[114|[98|[126|[110|[109|[97|[110|[117|[97|[108|[32|[102|[111|[114|[32|[109|[111|[114|[101|[32|[105|[110|[102|[111|[46|[126|[110|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[42|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 912
																																																																																																																																																																																																																																			       [])
				do  %% Line 913
				    call 'io':'format'
					([114|[98|[58|[32|[76|[111|[103|[103|[105|[110|[103|[32|[97|[98|[111|[114|[116|[101|[100|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]])
				    %% Line 914
				    {'abort',NewDevice}
			%% Line 915
			<( 'false'
			   -| ['compiler_generated'] ),_21,NewDevice> when 'true' ->
			    do  %% Line 916
				call 'io':'format'
				    (NewDevice, %% Line 917
						[126|[110|[32|[32|[32|[42|[42|[42|[42|[42|[42|[42|[42|[42|[32|[82|[66|[58|[32|[85|[78|[80|[82|[73|[78|[84|[65|[66|[76|[69|[32|[82|[69|[80|[79|[82|[84|[32|[42|[42|[42|[42|[42|[42|[42|[42|[126|[110|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 917
																																						 [])
				do  %% Line 918
				    call 'io':'format'
					([114|[98|[58|[32|[76|[111|[103|[103|[105|[110|[103|[32|[114|[101|[115|[117|[109|[101|[100|[46|[46|[46|[126|[110|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]])
				    %% Line 919
				    {'proceed',NewDevice}
			( <( _22
			     -| ['compiler_generated'] ),( _23
							   -| ['compiler_generated'] ),( _24
											 -| ['compiler_generated'] )> when 'true' ->
			      let <_12> = {( _22
				     -| ['compiler_generated'] ),( _23
								   -| ['compiler_generated'] ),( _24
												 -| ['compiler_generated'] )}
			      in  primop 'match_fail'
				      ({'case_clause',_12})
			  -| ['compiler_generated'] )
		      end
      -| [{'function',{'handle_bad_form',5}}] )
'read_rep_msg'/2 =
    %% Line 922
    ( fun (_0,_1) ->
	  %% Line 923
	  case call 'file':'position'
		   (_0, {'bof',_1}) of
	    <{'ok',_11}> when 'true' ->
		let <_3> =
		    catch
			%% Line 925
			apply 'read_report'/1
			    (_0)
		in  let <_6> =
			case _3 of
			  %% Line 926
			  <{'ok',Report}> when 'true' ->
			      %% Line 927
			      case apply 'get_short_descr'/1
				       (Report) of
				<{_X_ShortDescr,Date}> when 'true' ->
				    %% Line 928
				    {Date,Report}
				( <_4> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_4})
				  -| ['compiler_generated'] )
			      end
			  %% Line 929
			  <_12> when 'true' ->
			      'error'
			end
		    in  %% Line 931
			case call 'file':'close'
				 (_0) of
			  <'ok'> when 'true' ->
			      _6
			  ( <_8> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_8})
			    -| ['compiler_generated'] )
			end
	    ( <_2> when 'true' ->
		  primop 'match_fail'
		      ({'badmatch',_2})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'read_rep_msg',2}}] )
'module_info'/0 =
    ( fun () ->
	  call 'erlang':'get_module_info'
	      ('rb')
      -| [{'function',{'module_info',0}}] )
'module_info'/1 =
    ( fun (_0) ->
	  call 'erlang':'get_module_info'
	      ('rb', ( _0
		       -| [{'function',{'module_info',1}}] ))
      -| [{'function',{'module_info',1}}] )
end