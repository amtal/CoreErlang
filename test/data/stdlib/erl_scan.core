module 'erl_scan' ['category'/1,
		   'column'/1,
		   'continuation_location'/1,
		   'end_location'/1,
		   'format_error'/1,
		   'line'/1,
		   'location'/1,
		   'module_info'/0,
		   'module_info'/1,
		   'reserved_word'/1,
		   'string'/1,
		   'string'/2,
		   'string'/3,
		   'symbol'/1,
		   'text'/1,
		   'tokens'/3,
		   'tokens'/4]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[115|[114|[99|[47|[101|[114|[108|[95|[115|[99|[97|[110|[46|[101|[114|[108]]]]]]]]]]]]]]]],1}],
		%% Line 63
		'export_type' =
		    %% Line 63
		    [{'error_info',0}|[{'options',0}|[{'return_cont',0}|[{'token',0}|[{'tokens_result',0}]]]]],
		%% Line 70
		'removed' =
		    %% Line 70
		    [{'set_attribute',3,[117|[115|[101|[32|[101|[114|[108|[95|[97|[110|[110|[111|[58|[115|[101|[116|[95|[108|[105|[110|[101|[47|[50|[32|[105|[110|[115|[116|[101|[97|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}|[{'attributes_info','_',[101|[114|[108|[95|[97|[110|[110|[111|[58|[123|[99|[111|[108|[117|[109|[110|[44|[108|[105|[110|[101|[44|[108|[111|[99|[97|[116|[105|[111|[110|[44|[116|[101|[120|[116|[125|[47|[49|[32|[105|[110|[115|[116|[101|[97|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}|[{'token_info','_',[101|[114|[108|[95|[115|[99|[97|[110|[58|[123|[99|[97|[116|[101|[103|[111|[114|[121|[44|[99|[111|[108|[117|[109|[110|[44|[108|[105|[110|[101|[44|[108|[111|[99|[97|[116|[105|[111|[110|[44|[115|[121|[109|[98|[111|[108|[44|[116|[101|[120|[116|[125|[47|[49|[32|[105|[110|[115|[116|[101|[97|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}]]],
		%% Line 76
		'removed_type' =
		    %% Line 76
		    [{'column',0,[117|[115|[101|[32|[101|[114|[108|[95|[97|[110|[110|[111|[58|[99|[111|[108|[117|[109|[110|[40|[41|[32|[105|[110|[115|[116|[101|[97|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}|[{'line',0,[117|[115|[101|[32|[101|[114|[108|[95|[97|[110|[110|[111|[58|[108|[105|[110|[101|[40|[41|[32|[105|[110|[115|[116|[101|[97|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]}|[{'location',0,[117|[115|[101|[32|[101|[114|[108|[95|[97|[110|[110|[111|[58|[108|[111|[99|[97|[116|[105|[111|[110|[40|[41|[32|[105|[110|[115|[116|[101|[97|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}]]],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'category',{'type',90,'atom',[]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'resword_fun',{'type',91,'fun',[{'type',91,'product',[{'type',91,'atom',[]}]}|[{'type',91,'boolean',[]}]]},[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{'option',{'type',92,'union',[{'atom',92,'return'}|[{'atom',92,'return_white_spaces'}|[{'atom',92,'return_comments'}|[{'atom',93,'text'}|[{'type',93,'tuple',[{'atom',93,'reserved_word_fun'}|[{'user_type',93,'resword_fun',[]}]]}]]]]]},[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'options',{'type',94,'union',[{'user_type',94,'option',[]}|[{'type',94,'list',[{'user_type',94,'option',[]}]}]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'symbol',{'type',95,'union',[{'type',95,'atom',[]}|[{'type',95,'float',[]}|[{'type',95,'integer',[]}|[{'type',95,'string',[]}]]]]},[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{'token',{'type',96,'union',[{'type',96,'tuple',[{'user_type',96,'category',[]}|[{'ann_type',96,[{'var',96,'Anno'}|[{'remote_type',96,[{'atom',96,'erl_anno'}|[{'atom',96,'anno'}|[[]]]]}]]}|[{'user_type',96,'symbol',[]}]]]}|[{'type',97,'tuple',[{'user_type',97,'category',[]}|[{'ann_type',97,[{'var',97,'Anno'}|[{'remote_type',97,[{'atom',97,'erl_anno'}|[{'atom',97,'anno'}|[[]]]]}]]}]]}]]},[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{'tokens',{'type',98,'list',[{'user_type',98,'token',[]}]},[]}],
		%% Line 99
		'type' =
		    %% Line 99
		    [{'error_description',{'type',99,'term',[]},[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'error_info',{'type',100,'tuple',[{'remote_type',100,[{'atom',100,'erl_anno'}|[{'atom',100,'location'}|[[]]]]}|[{'type',100,'module',[]}|[{'user_type',100,'error_description',[]}]]]},[]}],
		%% Line 103
		'record' =
		    %% Line 103
		    [{'erl_scan',[{'typed_record_field',{'record_field',104,{'atom',104,'resword_fun'},{'fun',104,{'function','reserved_word',1}}},{'user_type',104,'resword_fun',[]}}|[{'typed_record_field',{'record_field',105,{'atom',105,'ws'},{'atom',105,'false'}},{'type',105,'boolean',[]}}|[{'typed_record_field',{'record_field',106,{'atom',106,'comment'},{'atom',106,'false'}},{'type',106,'boolean',[]}}|[{'typed_record_field',{'record_field',107,{'atom',107,'text'},{'atom',107,'false'}},{'type',107,'boolean',[]}}]]]]}],
		%% Line 111
		'spec' =
		    %% Line 111
		    [{{'format_error',1},[{'type',111,'bounded_fun',[{'type',111,'fun',[{'type',111,'product',[{'var',111,'ErrorDescriptor'}]}|[{'type',111,'string',[]}]]}|[[{'type',112,'constraint',[{'atom',112,'is_subtype'}|[[{'var',112,'ErrorDescriptor'}|[{'user_type',112,'error_description',[]}]]]]}]]]}]}],
		%% Line 125
		'spec' =
		    %% Line 125
		    [{{'string',1},[{'type',125,'bounded_fun',[{'type',125,'fun',[{'type',125,'product',[{'var',125,'String'}]}|[{'var',125,'Return'}]]}|[[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'String'}|[{'type',126,'string',[]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Return'}|[{'type',127,'union',[{'type',127,'tuple',[{'atom',127,'ok'}|[{'ann_type',127,[{'var',127,'Tokens'}|[{'user_type',127,'tokens',[]}]]}|[{'var',127,'EndLocation'}]]]}|[{'type',128,'tuple',[{'atom',128,'error'}|[{'ann_type',128,[{'var',128,'ErrorInfo'}|[{'user_type',128,'error_info',[]}]]}|[{'var',128,'ErrorLocation'}]]]}]]}]]]]}|[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'EndLocation'}|[{'remote_type',129,[{'atom',129,'erl_anno'}|[{'atom',129,'location'}|[[]]]]}]]]]}|[{'type',130,'constraint',[{'atom',130,'is_subtype'}|[[{'var',130,'ErrorLocation'}|[{'remote_type',130,[{'atom',130,'erl_anno'}|[{'atom',130,'location'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 134
		'spec' =
		    %% Line 134
		    [{{'string',2},[{'type',134,'bounded_fun',[{'type',134,'fun',[{'type',134,'product',[{'var',134,'String'}|[{'var',134,'StartLocation'}]]}|[{'var',134,'Return'}]]}|[[{'type',135,'constraint',[{'atom',135,'is_subtype'}|[[{'var',135,'String'}|[{'type',135,'string',[]}]]]]}|[{'type',136,'constraint',[{'atom',136,'is_subtype'}|[[{'var',136,'Return'}|[{'type',136,'union',[{'type',136,'tuple',[{'atom',136,'ok'}|[{'ann_type',136,[{'var',136,'Tokens'}|[{'user_type',136,'tokens',[]}]]}|[{'var',136,'EndLocation'}]]]}|[{'type',137,'tuple',[{'atom',137,'error'}|[{'ann_type',137,[{'var',137,'ErrorInfo'}|[{'user_type',137,'error_info',[]}]]}|[{'var',137,'ErrorLocation'}]]]}]]}]]]]}|[{'type',138,'constraint',[{'atom',138,'is_subtype'}|[[{'var',138,'StartLocation'}|[{'remote_type',138,[{'atom',138,'erl_anno'}|[{'atom',138,'location'}|[[]]]]}]]]]}|[{'type',139,'constraint',[{'atom',139,'is_subtype'}|[[{'var',139,'EndLocation'}|[{'remote_type',139,[{'atom',139,'erl_anno'}|[{'atom',139,'location'}|[[]]]]}]]]]}|[{'type',140,'constraint',[{'atom',140,'is_subtype'}|[[{'var',140,'ErrorLocation'}|[{'remote_type',140,[{'atom',140,'erl_anno'}|[{'atom',140,'location'}|[[]]]]}]]]]}]]]]]]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'string',3},[{'type',144,'bounded_fun',[{'type',144,'fun',[{'type',144,'product',[{'var',144,'String'}|[{'var',144,'StartLocation'}|[{'var',144,'Options'}]]]}|[{'var',144,'Return'}]]}|[[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'String'}|[{'type',145,'string',[]}]]]]}|[{'type',146,'constraint',[{'atom',146,'is_subtype'}|[[{'var',146,'Options'}|[{'user_type',146,'options',[]}]]]]}|[{'type',147,'constraint',[{'atom',147,'is_subtype'}|[[{'var',147,'Return'}|[{'type',147,'union',[{'type',147,'tuple',[{'atom',147,'ok'}|[{'ann_type',147,[{'var',147,'Tokens'}|[{'user_type',147,'tokens',[]}]]}|[{'var',147,'EndLocation'}]]]}|[{'type',148,'tuple',[{'atom',148,'error'}|[{'ann_type',148,[{'var',148,'ErrorInfo'}|[{'user_type',148,'error_info',[]}]]}|[{'var',148,'ErrorLocation'}]]]}]]}]]]]}|[{'type',149,'constraint',[{'atom',149,'is_subtype'}|[[{'var',149,'StartLocation'}|[{'remote_type',149,[{'atom',149,'erl_anno'}|[{'atom',149,'location'}|[[]]]]}]]]]}|[{'type',150,'constraint',[{'atom',150,'is_subtype'}|[[{'var',150,'EndLocation'}|[{'remote_type',150,[{'atom',150,'erl_anno'}|[{'atom',150,'location'}|[[]]]]}]]]]}|[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'ErrorLocation'}|[{'remote_type',151,[{'atom',151,'erl_anno'}|[{'atom',151,'location'}|[[]]]]}]]]]}]]]]]]]]}]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{'char_spec',{'type',159,'union',[{'type',159,'string',[]}|[{'atom',159,'eof'}]]},[]}],
		%% Line 160
		'type' =
		    %% Line 160
		    [{'cont_fun',{'type',160,'fun',[{'type',160,'product',[{'user_type',160,'char_spec',[]}|[{'type',160,'record',[{'atom',160,'erl_scan'}]}|[{'remote_type',161,[{'atom',161,'erl_anno'}|[{'atom',161,'line'}|[[]]]]}|[{'remote_type',161,[{'atom',161,'erl_anno'}|[{'atom',161,'column'}|[[]]]]}|[{'user_type',162,'tokens',[]}|[{'type',162,'any',[]}]]]]]]}|[{'type',162,'any',[]}]]},[]}],
		%% Line 163
		'opaque' =
		    %% Line 163
		    [{'return_cont',{'type',163,'tuple',[{'atom',163,'erl_scan_continuation'}|[{'type',164,'string',[]}|[{'remote_type',164,[{'atom',164,'erl_anno'}|[{'atom',164,'column'}|[[]]]]}|[{'user_type',164,'tokens',[]}|[{'remote_type',165,[{'atom',165,'erl_anno'}|[{'atom',165,'line'}|[[]]]]}|[{'type',166,'record',[{'atom',166,'erl_scan'}]}|[{'type',166,'any',[]}|[{'user_type',166,'cont_fun',[]}]]]]]]]]},[]}],
		%% Line 167
		'type' =
		    %% Line 167
		    [{'tokens_result',{'type',167,'union',[{'type',167,'tuple',[{'atom',167,'ok'}|[{'ann_type',167,[{'var',167,'Tokens'}|[{'user_type',167,'tokens',[]}]]}|[{'ann_type',168,[{'var',168,'EndLocation'}|[{'remote_type',168,[{'atom',168,'erl_anno'}|[{'atom',168,'location'}|[[]]]]}]]}]]]}|[{'type',169,'tuple',[{'atom',169,'eof'}|[{'ann_type',169,[{'var',169,'EndLocation'}|[{'remote_type',169,[{'atom',169,'erl_anno'}|[{'atom',169,'location'}|[[]]]]}]]}]]}|[{'type',170,'tuple',[{'atom',170,'error'}|[{'ann_type',170,[{'var',170,'ErrorInfo'}|[{'user_type',170,'error_info',[]}]]}|[{'ann_type',171,[{'var',171,'EndLocation'}|[{'remote_type',171,[{'atom',171,'erl_anno'}|[{'atom',171,'location'}|[[]]]]}]]}]]]}]]]},[]}],
		%% Line 173
		'spec' =
		    %% Line 173
		    [{{'tokens',3},[{'type',173,'bounded_fun',[{'type',173,'fun',[{'type',173,'product',[{'var',173,'Continuation'}|[{'var',173,'CharSpec'}|[{'var',173,'StartLocation'}]]]}|[{'var',173,'Return'}]]}|[[{'type',174,'constraint',[{'atom',174,'is_subtype'}|[[{'var',174,'Continuation'}|[{'type',174,'union',[{'user_type',174,'return_cont',[]}|[{'type',174,'nil',[]}]]}]]]]}|[{'type',175,'constraint',[{'atom',175,'is_subtype'}|[[{'var',175,'CharSpec'}|[{'user_type',175,'char_spec',[]}]]]]}|[{'type',176,'constraint',[{'atom',176,'is_subtype'}|[[{'var',176,'StartLocation'}|[{'remote_type',176,[{'atom',176,'erl_anno'}|[{'atom',176,'location'}|[[]]]]}]]]]}|[{'type',177,'constraint',[{'atom',177,'is_subtype'}|[[{'var',177,'Return'}|[{'type',177,'union',[{'type',177,'tuple',[{'atom',177,'done'}|[{'ann_type',177,[{'var',177,'Result'}|[{'user_type',177,'tokens_result',[]}]]}|[{'ann_type',177,[{'var',177,'LeftOverChars'}|[{'user_type',177,'char_spec',[]}]]}]]]}|[{'type',178,'tuple',[{'atom',178,'more'}|[{'ann_type',178,[{'var',178,'Continuation1'}|[{'user_type',178,'return_cont',[]}]]}]]}]]}]]]]}]]]]]]}]}],
		%% Line 182
		'spec' =
		    %% Line 182
		    [{{'tokens',4},[{'type',182,'bounded_fun',[{'type',182,'fun',[{'type',182,'product',[{'var',182,'Continuation'}|[{'var',182,'CharSpec'}|[{'var',182,'StartLocation'}|[{'var',182,'Options'}]]]]}|[{'var',182,'Return'}]]}|[[{'type',183,'constraint',[{'atom',183,'is_subtype'}|[[{'var',183,'Continuation'}|[{'type',183,'union',[{'user_type',183,'return_cont',[]}|[{'type',183,'nil',[]}]]}]]]]}|[{'type',184,'constraint',[{'atom',184,'is_subtype'}|[[{'var',184,'CharSpec'}|[{'user_type',184,'char_spec',[]}]]]]}|[{'type',185,'constraint',[{'atom',185,'is_subtype'}|[[{'var',185,'StartLocation'}|[{'remote_type',185,[{'atom',185,'erl_anno'}|[{'atom',185,'location'}|[[]]]]}]]]]}|[{'type',186,'constraint',[{'atom',186,'is_subtype'}|[[{'var',186,'Options'}|[{'user_type',186,'options',[]}]]]]}|[{'type',187,'constraint',[{'atom',187,'is_subtype'}|[[{'var',187,'Return'}|[{'type',187,'union',[{'type',187,'tuple',[{'atom',187,'done'}|[{'ann_type',187,[{'var',187,'Result'}|[{'user_type',187,'tokens_result',[]}]]}|[{'ann_type',187,[{'var',187,'LeftOverChars'}|[{'user_type',187,'char_spec',[]}]]}]]]}|[{'type',188,'tuple',[{'atom',188,'more'}|[{'ann_type',188,[{'var',188,'Continuation1'}|[{'user_type',188,'return_cont',[]}]]}]]}]]}]]]]}]]]]]]]}]}],
		%% Line 203
		'spec' =
		    %% Line 203
		    [{{'column',1},[{'type',203,'bounded_fun',[{'type',203,'fun',[{'type',203,'product',[{'var',203,'Token'}]}|[{'type',203,'union',[{'remote_type',203,[{'atom',203,'erl_anno'}|[{'atom',203,'column'}|[[]]]]}|[{'atom',203,'undefined'}]]}]]}|[[{'type',204,'constraint',[{'atom',204,'is_subtype'}|[[{'var',204,'Token'}|[{'user_type',204,'token',[]}]]]]}]]]}]}],
		%% Line 209
		'spec' =
		    %% Line 209
		    [{{'end_location',1},[{'type',209,'bounded_fun',[{'type',209,'fun',[{'type',209,'product',[{'var',209,'Token'}]}|[{'type',209,'union',[{'remote_type',209,[{'atom',209,'erl_anno'}|[{'atom',209,'location'}|[[]]]]}|[{'atom',209,'undefined'}]]}]]}|[[{'type',210,'constraint',[{'atom',210,'is_subtype'}|[[{'var',210,'Token'}|[{'user_type',210,'token',[]}]]]]}]]]}]}],
		%% Line 215
		'spec' =
		    %% Line 215
		    [{{'line',1},[{'type',215,'bounded_fun',[{'type',215,'fun',[{'type',215,'product',[{'var',215,'Token'}]}|[{'remote_type',215,[{'atom',215,'erl_anno'}|[{'atom',215,'line'}|[[]]]]}]]}|[[{'type',216,'constraint',[{'atom',216,'is_subtype'}|[[{'var',216,'Token'}|[{'user_type',216,'token',[]}]]]]}]]]}]}],
		%% Line 221
		'spec' =
		    %% Line 221
		    [{{'location',1},[{'type',221,'bounded_fun',[{'type',221,'fun',[{'type',221,'product',[{'var',221,'Token'}]}|[{'remote_type',221,[{'atom',221,'erl_anno'}|[{'atom',221,'location'}|[[]]]]}]]}|[[{'type',222,'constraint',[{'atom',222,'is_subtype'}|[[{'var',222,'Token'}|[{'user_type',222,'token',[]}]]]]}]]]}]}],
		%% Line 227
		'spec' =
		    %% Line 227
		    [{{'text',1},[{'type',227,'bounded_fun',[{'type',227,'fun',[{'type',227,'product',[{'var',227,'Token'}]}|[{'type',227,'union',[{'remote_type',227,[{'atom',227,'erl_anno'}|[{'atom',227,'text'}|[[]]]]}|[{'atom',227,'undefined'}]]}]]}|[[{'type',228,'constraint',[{'atom',228,'is_subtype'}|[[{'var',228,'Token'}|[{'user_type',228,'token',[]}]]]]}]]]}]}],
		%% Line 233
		'spec' =
		    %% Line 233
		    [{{'category',1},[{'type',233,'bounded_fun',[{'type',233,'fun',[{'type',233,'product',[{'var',233,'Token'}]}|[{'user_type',233,'category',[]}]]}|[[{'type',234,'constraint',[{'atom',234,'is_subtype'}|[[{'var',234,'Token'}|[{'user_type',234,'token',[]}]]]]}]]]}]}],
		%% Line 243
		'spec' =
		    %% Line 243
		    [{{'symbol',1},[{'type',243,'bounded_fun',[{'type',243,'fun',[{'type',243,'product',[{'var',243,'Token'}]}|[{'user_type',243,'symbol',[]}]]}|[[{'type',244,'constraint',[{'atom',244,'is_subtype'}|[[{'var',244,'Token'}|[{'user_type',244,'token',[]}]]]]}]]]}]}],
		%% Line 723
		'compile' =
		    %% Line 723
		    [{'inline',[{'white_space_end',7}]}],
		%% Line 1136
		'compile' =
		    %% Line 1136
		    [{'inline',[{'anno',4}]}],
		%% Line 1154
		'compile' =
		    %% Line 1154
		    [{'inline',[{'anno',1}|[{'incr_column',2}|[{'new_column',2}]]]}],
		%% Line 1225
		'spec' =
		    %% Line 1225
		    [{{'reserved_word',1},[{'type',1225,'fun',[{'type',1225,'product',[{'ann_type',1225,[{'var',1225,'Atom'}|[{'type',1225,'atom',[]}]]}]}|[{'type',1225,'boolean',[]}]]}]}]]
'format_error'/1 =
    %% Line 113
    fun (_0) ->
	case _0 of
	  <{'string',Quote,Head}> when 'true' ->
	      let <_3> =
		  apply %% Line 114
			'string_thing'/1
		      (%% Line 114
		       Quote)
	      in  let <_1> =
		      call %% Line 116
			   'io_lib':%% Line 116
				    'write_string'
			  (%% Line 116
			   Head, %% Line 116
				 Quote)
		  in  let <_2> =
			  call %% Line 115
			       'erlang':%% Line 115
					'++'
			      (%% Line 115
			       [32|[115|[116|[97|[114|[116|[105|[110|[103|[32|[119|[105|[116|[104|[32]]]]]]]]]]]]]]], _1)
		      in  let <_4> =
			      call %% Line 114
				   'erlang':%% Line 114
					    '++'
				  (_3, _2)
			  in  let <_5> =
				  call %% Line 114
				       'erlang':%% Line 114
						'++'
				      (%% Line 114
				       [117|[110|[116|[101|[114|[109|[105|[110|[97|[116|[101|[100|[32]]]]]]]]]]]]], _4)
			      in  %% Line 114
				  call 'lists':'flatten'
				      ([_5|%% Line 116
					   []])
	  %% Line 117
	  <{'illegal',Type}> when 'true' ->
	      let <_6> =
		  call %% Line 118
		       'io_lib':%% Line 118
				'fwrite'
		      (%% Line 118
		       [105|[108|[108|[101|[103|[97|[108|[32|[126|[119]]]]]]]]]], %% Line 118
										  [Type|[]])
	      in  %% Line 118
		  call 'lists':'flatten'
		      (_6)
	  %% Line 119
	  <'char'> when 'true' ->
	      [117|[110|[116|[101|[114|[109|[105|[110|[97|[116|[101|[100|[32|[99|[104|[97|[114|[97|[99|[116|[101|[114]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 120
	  <{'base',Base}> when 'true' ->
	      let <_7> =
		  call %% Line 121
		       'io_lib':%% Line 121
				'fwrite'
		      (%% Line 121
		       [105|[108|[108|[101|[103|[97|[108|[32|[98|[97|[115|[101|[32|[39|[126|[119|[39]]]]]]]]]]]]]]]]], %% Line 121
														       [Base|[]])
	      in  %% Line 121
		  call 'lists':'flatten'
		      (_7)
	  %% Line 122
	  <Other> when 'true' ->
	      let <_8> =
		  call %% Line 123
		       'io_lib':%% Line 123
				'write'
		      (%% Line 123
		       Other)
	      in  %% Line 123
		  call 'lists':'flatten'
		      (_8)
	end
'string'/1 =
    %% Line 131
    fun (_0) ->
	%% Line 132
	apply 'string'/3
	    (_0, 1, [])
'string'/2 =
    %% Line 141
    fun (_0,_1) ->
	%% Line 142
	apply 'string'/3
	    (_0, _1, [])
'string'/3 =
    %% Line 152
    fun (_0,_1,_2) ->
	case <_0,_1,_2> of
	  <String,Line,Options>
	      when let <_3> =
		    call 'erlang':'is_list'
			(String)
		in  let <_4> =
			call 'erlang':'is_integer'
			    (Line)
		    in  call 'erlang':'and'
			    (_3, _4) ->
	      let <_5> =
		  apply %% Line 153
			'options'/1
		      (%% Line 153
		       Options)
	      in  %% Line 153
		  apply 'string1'/5
		      (String, _5, Line, 'no_col', [])
	  %% Line 154
	  <String,{Line,Column},Options>
	      when try
		    let <_6> =
			call 'erlang':'is_list'
			    (String)
		    in  let <_7> =
			    call %% Line 155
				 'erlang':%% Line 155
					  'is_integer'
				(%% Line 155
				 Line)
			in  ( let <_10> =
				  case %% Line 156
				       call 'erlang':'is_integer'
					   (Column) of
				    %% Line 156
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  call 'erlang':'>='
					      (Column, 1)
				      -| ['compiler_generated'] )
				    %% Line 156
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  'false'
				      -| ['compiler_generated'] )
				    %% Line 156
				    ( <_8> when 'true' ->
					  _8
				      -| ['compiler_generated'] )
				  end
			      in  let <_11> =
				      call 'erlang':'=:='
					  (%% Line 156
					   ( _10
					     -| ['compiler_generated'] ), 'true')
				  in  let <_12> =
					  call 'erlang':'and'
					      (_7, _11)
				      in  call 'erlang':'and'
					      (_6, _12)
			      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_13> =
		  apply %% Line 157
			'options'/1
		      (%% Line 157
		       Options)
	      in  %% Line 157
		  apply 'string1'/5
		      (String, _13, Line, Column, [])
	  ( <_16,_15,_14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_16,_15,_14})
		  -| [{'function_name',{'string',3}}] )
	    -| ['compiler_generated'] )
	end
'tokens'/3 =
    %% Line 179
    fun (_0,_1,_2) ->
	%% Line 180
	apply 'tokens'/4
	    (_0, _1, _2, [])
'tokens'/4 =
    %% Line 189
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <[],CharSpec,Line,Options>
	      when call 'erlang':'is_integer'
		    (Line) ->
	      let <_5> =
		  apply %% Line 190
			'options'/1
		      (%% Line 190
		       Options)
	      in  let <_4> = 'scan'/6
		  in  %% Line 190
		      apply 'tokens1'/7
			  (CharSpec, _5, Line, 'no_col', [], _4, [])
	  %% Line 191
	  <[],CharSpec,{Line,Column},Options>
	      when try
		    let <_6> =
			call 'erlang':'is_integer'
			    (Line)
		    in  ( let <_9> =
			      case %% Line 192
				   call 'erlang':'is_integer'
				       (Column) of
				%% Line 192
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      call 'erlang':'>='
					  (Column, 1)
				  -| ['compiler_generated'] )
				%% Line 192
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
				%% Line 192
				( <_7> when 'true' ->
				      _7
				  -| ['compiler_generated'] )
			      end
			  in  let <_10> =
				  call 'erlang':'=:='
				      (%% Line 192
				       ( _9
					 -| ['compiler_generated'] ), 'true')
			      in  call 'erlang':'and'
				      (_6, _10)
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_12> =
		  apply %% Line 193
			'options'/1
		      (%% Line 193
		       Options)
	      in  let <_11> = 'scan'/6
		  in  %% Line 193
		      apply 'tokens1'/7
			  (CharSpec, _12, Line, Column, [], _11, [])
	  %% Line 194
	  <{'erl_scan_continuation',Cs,Col,Toks,Line,St,Any,Fun},%% Line 195
								 CharSpec,%% Line 195
									  _X_Loc,%% Line 195
										 _X_Opts> when 'true' ->
	      let <_13> =
		  call %% Line 196
		       'erlang':%% Line 196
				'++'
		      (%% Line 196
		       Cs, %% Line 196
			   CharSpec)
	      in  %% Line 196
		  apply 'tokens1'/7
		      (_13, St, Line, Col, Toks, Fun, Any)
	  ( <_17,_16,_15,_14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_17,_16,_15,_14})
		  -| [{'function_name',{'tokens',4}}] )
	    -| ['compiler_generated'] )
	end
'continuation_location'/1 =
    %% Line 198
    fun (_0) ->
	case _0 of
	  <{'erl_scan_continuation',_2,'no_col',_3,Line,_4,_5,_6}> when 'true' ->
	      %% Line 199
	      Line
	  %% Line 200
	  <{'erl_scan_continuation',_7,Col,_8,Line,_9,_10,_11}> when 'true' ->
	      %% Line 201
	      {Line,Col}
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'continuation_location',1}}] )
	    -| ['compiler_generated'] )
	end
'column'/1 =
    %% Line 206
    fun (_0) ->
	let <_1> =
	    call %% Line 207
		 'erlang':%% Line 207
			  'element'
		(%% Line 207
		 2, _0)
	in  %% Line 207
	    call 'erl_anno':'column'
		(_1)
'end_location'/1 =
    %% Line 212
    fun (_0) ->
	let <_1> =
	    call %% Line 213
		 'erlang':%% Line 213
			  'element'
		(%% Line 213
		 2, _0)
	in  %% Line 213
	    call 'erl_anno':'end_location'
		(_1)
'line'/1 =
    %% Line 218
    fun (_0) ->
	let <_1> =
	    call %% Line 219
		 'erlang':%% Line 219
			  'element'
		(%% Line 219
		 2, _0)
	in  %% Line 219
	    call 'erl_anno':'line'
		(_1)
'location'/1 =
    %% Line 224
    fun (_0) ->
	let <_1> =
	    call %% Line 225
		 'erlang':%% Line 225
			  'element'
		(%% Line 225
		 2, _0)
	in  %% Line 225
	    call 'erl_anno':'location'
		(_1)
'text'/1 =
    %% Line 230
    fun (_0) ->
	let <_1> =
	    call %% Line 231
		 'erlang':%% Line 231
			  'element'
		(%% Line 231
		 2, _0)
	in  %% Line 231
	    call 'erl_anno':'text'
		(_1)
'category'/1 =
    %% Line 236
    fun (_0) ->
	case _0 of
	  <{Category,_X_Anno}> when 'true' ->
	      %% Line 237
	      Category
	  %% Line 238
	  <{Category,_X_Anno,_X_Symbol}> when 'true' ->
	      %% Line 239
	      Category
	  %% Line 240
	  <T> when 'true' ->
	      %% Line 241
	      call 'erlang':'error'
		  ('badarg', [T|[]])
	end
'symbol'/1 =
    %% Line 246
    fun (_0) ->
	case _0 of
	  <{Category,_X_Anno}> when 'true' ->
	      %% Line 247
	      Category
	  %% Line 248
	  <{_X_Category,_X_Anno,Symbol}> when 'true' ->
	      %% Line 249
	      Symbol
	  %% Line 250
	  <T> when 'true' ->
	      %% Line 251
	      call 'erlang':'error'
		  ('badarg', [T|[]])
	end
'string_thing'/1 =
    %% Line 257
    fun (_0) ->
	case _0 of
	  <39> when 'true' ->
	      [97|[116|[111|[109]]]]
	  %% Line 258
	  <_2> when 'true' ->
	      [115|[116|[114|[105|[110|[103]]]]]]
	end
'options'/1 =
    %% Line 273
    fun (_0) ->
	case _0 of
	  <Opts0>
	      when call 'erlang':'is_list'
		    (_0) ->
	      let <_1> = 'expand_opt'/2
	      in  let <Opts> =
		      call %% Line 274
			   'lists':%% Line 274
				   'foldr'
			  (_1, %% Line 274
			       [], %% Line 274
				   Opts0)
		  in  let <_4> =
			  case %% Line 276
			       apply 'opts'/3
				   (Opts, ['reserved_word_fun'], []) of
			    %% Line 277
			    <'badarg'> when 'true' ->
				%% Line 278
				call 'erlang':'error'
				    ('badarg', [Opts0|[]])
			    %% Line 279
			    <R> when 'true' ->
				%% Line 280
				R
			  end
		      in  %% Line 275
			  case _4 of
			    <[RW_fun|[]]> when 'true' ->
				let <Comment> =
				    call %% Line 282
					 'proplists':%% Line 282
						     'get_bool'
					(%% Line 282
					 'return_comments', %% Line 282
							    Opts)
				in  let <WS> =
					call %% Line 283
					     'proplists':%% Line 283
							 'get_bool'
					    (%% Line 283
					     'return_white_spaces', %% Line 283
								    Opts)
				    in  let <Txt> =
					    call %% Line 284
						 'proplists':%% Line 284
							     'get_bool'
						(%% Line 284
						 'text', %% Line 284
							 Opts)
					in  %% Line 285
					    {'erl_scan',RW_fun,%% Line 287
							       WS,%% Line 286
								  Comment,%% Line 288
									  Txt}
			    ( <_5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_5})
			      -| ['compiler_generated'] )
			  end
	  %% Line 289
	  <Opt> when 'true' ->
	      %% Line 290
	      apply 'options'/1
		  ([Opt|[]])
	end
'opts'/3 =
    %% Line 292
    fun (_0,_1,_2) ->
	case <_0,_1,_2> of
	  <Options,[Key|Keys],L> when 'true' ->
	      let <_5> =
		  case %% Line 293
		       call 'lists':'keyfind'
			   (Key, 1, Options) of
		    %% Line 294
		    <{'reserved_word_fun',F}>
			when call 'erlang':'is_function'
			      (F,
			       1) ->
			%% Line 295
			{'ok',F}
		    %% Line 296
		    <{_11,_12}>
			when call 'erlang':'=:='
			      (_11,
			       Key) ->
			%% Line 297
			'badarg'
		    %% Line 298
		    <'false'> when 'true' ->
			let <_3> =
			    apply %% Line 299
				  'default_option'/1
				(%% Line 299
				 Key)
			in  %% Line 299
			    {'ok',_3}
		    ( <_4> when 'true' ->
			  %% Line 293
			  primop 'match_fail'
			      ({'case_clause',_4})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 301
		  case _5 of
		    %% Line 302
		    <'badarg'> when 'true' ->
			%% Line 303
			'badarg'
		    %% Line 304
		    <{'ok',Value}> when 'true' ->
			%% Line 305
			apply 'opts'/3
			    (Options, Keys, [Value|L])
		    ( <_7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_7})
		      -| ['compiler_generated'] )
		  end
	  %% Line 307
	  <_X_Options,[],L> when 'true' ->
	      %% Line 308
	      call 'lists':'reverse'
		  (L)
	  ( <_10,_9,_8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_10,_9,_8})
		  -| [{'function_name',{'opts',3}}] )
	    -| ['compiler_generated'] )
	end
'default_option'/1 =
    %% Line 310
    fun (_0) ->
	case _0 of
	  <'reserved_word_fun'> when 'true' ->
	      %% Line 311
	      ( 'reserved_word'/1
		-| [{'id',{0,0,'-default_option/1-fun-0-'}}] )
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'default_option',1}}] )
	    -| ['compiler_generated'] )
	end
'expand_opt'/2 =
    %% Line 313
    fun (_0,_1) ->
	case <_0,_1> of
	  <'return',Os> when 'true' ->
	      %% Line 314
	      ['return_comments'|['return_white_spaces'|Os]]
	  %% Line 315
	  <O,Os> when 'true' ->
	      %% Line 316
	      [O|Os]
	end
'tokens1'/7 =
    %% Line 318
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	case <_0,_1,_2,_3,_4,_5,_6> of
	  <Cs,St,Line,Col,Toks,Fun,Any>
	      when let <_7> =
		    call 'erlang':'is_list'
			(Cs)
		in  let <_8> =
			call 'erlang':'=:='
			    (Cs, 'eof')
		    in  call 'erlang':'or'
			    (_7, _8) ->
	      %% Line 319
	      case apply Fun
		       (Cs, St, Line, Col, Toks, Any) of
		%% Line 320
		<{'more',{Cs0,Ncol,Ntoks,Nline,Nany,Nfun}}> when 'true' ->
		    %% Line 321
		    {'more',{'erl_scan_continuation',Cs0,Ncol,Ntoks,Nline,St,Nany,Nfun}}
		%% Line 322
		<{'ok',Toks0,'eof',Nline,Ncol}> when 'true' ->
		    let <_13> =
			case %% Line 323
			     Toks0 of
			  %% Line 324
			  <[]> when 'true' ->
			      let <_9> =
				  apply %% Line 325
					'location'/2
				      (%% Line 325
				       Nline, %% Line 325
					      Ncol)
			      in  %% Line 325
				  {'eof',_9}
			  %% Line 326
			  <_25> when 'true' ->
			      let <_11> =
				  call %% Line 327
				       'lists':%% Line 327
					       'reverse'
				      (%% Line 327
				       Toks0)
			      in  let <_10> =
				      apply %% Line 327
					    'location'/2
					  (%% Line 327
					   Nline, %% Line 327
						  Ncol)
				  in  %% Line 327
				      {'ok',_11,_10}
			end
		    in  %% Line 329
			{'done',_13,'eof'}
		%% Line 330
		<{'ok',Toks0,Rest,Nline,Ncol}> when 'true' ->
		    let <_16> =
			call %% Line 331
			     'lists':%% Line 331
				     'reverse'
			    (%% Line 331
			     Toks0)
		    in  let <_15> =
			    apply %% Line 331
				  'location'/2
				(%% Line 331
				 Nline, %% Line 331
					Ncol)
			in  %% Line 331
			    {'done',{'ok',_16,_15},Rest}
		%% Line 332
		<{Error = {'error',_26,_27},Rest}> when 'true' ->
		    %% Line 333
		    {'done',Error,Rest}
		( <_17> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_17})
		  -| ['compiler_generated'] )
	      end
	  ( <_24,_23,_22,_21,_20,_19,_18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_24,_23,_22,_21,_20,_19,_18})
		  -| [{'function_name',{'tokens1',7}}] )
	    -| ['compiler_generated'] )
	end
'string1'/5 =
    %% Line 336
    fun (_0,_1,_2,_3,_4) ->
	%% Line 337
	case apply 'scan1'/5
		 (_0, _1, _2, _3, _4) of
	  %% Line 338
	  <{'more',{Cs0,Ncol,Ntoks,Nline,Any,Fun}}> when 'true' ->
	      let <_5> =
		  call %% Line 339
		       'erlang':%% Line 339
				'++'
		      (%% Line 339
		       Cs0, %% Line 339
			    'eof')
	      in  %% Line 339
		  case apply Fun
			   (_5, _1, Nline, Ncol, Ntoks, Any) of
		    %% Line 340
		    <{'ok',Toks1,_X_Rest,Line2,Col2}> when 'true' ->
			let <_7> =
			    call %% Line 341
				 'lists':%% Line 341
					 'reverse'
				(%% Line 341
				 Toks1)
			in  let <_6> =
				apply %% Line 341
				      'location'/2
				    (%% Line 341
				     Line2, %% Line 341
					    Col2)
			    in  %% Line 341
				{'ok',_7,_6}
		    %% Line 342
		    <{Error = {'error',_17,_18},_X_Rest}> when 'true' ->
			%% Line 343
			Error
		    ( <_8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_8})
		      -| ['compiler_generated'] )
		  end
	  %% Line 345
	  <{'ok',Ntoks,Rest = [_19|_20],Nline,Ncol}> when 'true' ->
	      %% Line 346
	      apply 'string1'/5
		  (Rest, _1, Nline, Ncol, Ntoks)
	  %% Line 347
	  <{'ok',Ntoks,_21,Nline,Ncol}> when 'true' ->
	      let <_10> =
		  call %% Line 348
		       'lists':%% Line 348
			       'reverse'
		      (%% Line 348
		       Ntoks)
	      in  let <_9> =
		      apply %% Line 348
			    'location'/2
			  (%% Line 348
			   Nline, %% Line 348
				  Ncol)
		  in  %% Line 348
		      {'ok',_10,_9}
	  %% Line 349
	  <{Error = {'error',_22,_23},_X_Rest}> when 'true' ->
	      %% Line 350
	      Error
	  ( <_11> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_11})
	    -| ['compiler_generated'] )
	end
'scan'/6 =
    %% Line 353
    fun (_0,_1,_2,_3,_4,_5) ->
	%% Line 354
	apply 'scan1'/5
	    (_0, _1, _2, _3, _4)
'scan1'/5 =
    %% Line 356
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <[32|Cs],St = {'erl_scan',_99,_100,_101,_102},Line,Col,Toks>
	      when ( try
		      let <_9> =
			  call 'erlang':'element'
			      (3, St)
		      in  ( call 'erlang':'=:='
				(_9, 'true')
			    -| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 357
	      apply 'scan_spcs'/6
		  (Cs, St, Line, Col, Toks, 1)
	  %% Line 358
	  <[32|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 359
	      apply 'skip_white_space'/6
		  (Cs, St, Line, Col, Toks, 1)
	  %% Line 360
	  <[10|Cs],St = {'erl_scan',_103,_104,_105,_106},Line,Col,Toks>
	      when ( try
		      let <_15> =
			  call 'erlang':'element'
			      (3, St)
		      in  ( call 'erlang':'=:='
				(_15, 'true')
			    -| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 361
	      apply 'scan_newline'/5
		  (Cs, St, Line, Col, Toks)
	  %% Line 362
	  <[10|Cs],St,Line,Col,Toks> when 'true' ->
	      let <_18> =
		  call %% Line 363
		       'erlang':%% Line 363
				'+'
		      (%% Line 363
		       Line, %% Line 363
			     1)
	      in  let <_17> =
		      case %% Line 363
			   Col of
			%% Line 1164
			( <( _121 = ( 'no_col'
				      -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _121
			  -| ['compiler_generated'] )
			%% Line 1166
			( <_122>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      ( 1
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_123> when ( 'true'
					-| ['compiler_generated'] ) ->
			      %% Line 1164
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_123,( 1
									     -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 363
		      apply 'skip_white_space'/6
			  (Cs, St, _18, _17, Toks, 0)
	  %% Line 364
	  <[C|Cs],St,Line,Col,Toks>
	      when let <_19> =
		    call 'erlang':'>='
			(C, 65)
		in  let <_20> =
			call 'erlang':'=<'
			    (C, 90)
		    in  call 'erlang':'and'
			    (_19, _20) ->
	      %% Line 365
	      apply 'scan_variable'/6
		  (Cs, St, Line, Col, Toks, [C|[]])
	  %% Line 366
	  <[C|Cs],St,Line,Col,Toks>
	      when let <_21> =
		    call 'erlang':'>='
			(C, 97)
		in  let <_22> =
			call 'erlang':'=<'
			    (C, 122)
		    in  call 'erlang':'and'
			    (_21, _22) ->
	      %% Line 367
	      apply 'scan_atom'/6
		  (Cs, St, Line, Col, Toks, [C|[]])
	  %% Line 369
	  <[44|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 370
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [44], ',', 1)
	  %% Line 371
	  <[40|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 372
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [40], '(', 1)
	  %% Line 373
	  <[41|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 374
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [41], ')', 1)
	  %% Line 375
	  <[123|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 376
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [123], '{', 1)
	  %% Line 377
	  <[125|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 378
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [125], '}', 1)
	  %% Line 379
	  <[91|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 380
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [91], '[', 1)
	  %% Line 381
	  <[93|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 382
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [93], ']', 1)
	  %% Line 383
	  <[59|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 384
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [59], ';', 1)
	  %% Line 385
	  <[C = 95|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 386
	      apply 'scan_variable'/6
		  (Cs, St, Line, Col, Toks, [C|[]])
	  %% Line 388
	  <[37|Cs],St,Line,Col,Toks>
	      when try
		    ( let <_25> =
			  case ( call ( 'erlang'
					-| ['compiler_generated'] ):( 'is_record'
								      -| ['compiler_generated'] )
				     (St, ( 'erl_scan'
					    -| ['compiler_generated'] ), ( 5
									   -| ['compiler_generated'] ))
				 -| ['compiler_generated'] ) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( 'true'
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( 'fail'
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( _23
				 -| ['compiler_generated'] )> when 'true' ->
				  ( _23
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		      in  let <_26> =
			      call 'erlang':'=:='
				  (( _25
				     -| ['compiler_generated'] ), 'true')
			  in  let <_27> =
				  call 'erlang':'element'
				      (4, St)
			      in  let <_28> =
				      call 'erlang':'=:='
					  (_27, 'true')
				  in  let <_29> =
					  call ( 'erlang'
						 -| ['compiler_generated'] ):( 'and'
									       -| ['compiler_generated'] )
					      (_26, _28)
				      in  let <_30> =
					      call 'erlang':'not'
						  (_29)
					  in  let <_31> =
						  call 'erlang':'is_boolean'
						      (_27)
					      in  let <_32> =
						      call 'erlang':'and'
							  (_30, _31)
						  in  let <_33> =
							  call 'erlang':'is_boolean'
							      (_25)
						      in  ( call 'erlang':'and'
								(_32, _33)
							    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 389
	      apply 'skip_comment'/6
		  (Cs, St, Line, Col, Toks, 1)
	  %% Line 390
	  <[C = 37|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 391
	      apply 'scan_comment'/6
		  (Cs, St, Line, Col, Toks, [C|[]])
	  %% Line 392
	  <[C|Cs],St,Line,Col,Toks>
	      when try
		    ( let <_36> =
			  case call 'erlang':'>='
				   (C, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  call 'erlang':'=<'
				      (C, 57)
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_34> when 'true' ->
				  _34
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _36
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 393
	      apply 'scan_number'/7
		  (Cs, St, Line, Col, Toks, [C|[]], 'no_underscore')
	  %% Line 394
	  <[46|[46|[46|Cs]]],St,Line,Col,Toks> when 'true' ->
	      %% Line 395
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [46|[46|[46]]], '...', 3)
	  %% Line 396
	  <Cs = [46|[46]],_X_St,Line,Col,Toks> when 'true' ->
	      let <_37> = 'scan'/6
	      in  %% Line 397
		  {'more',{Cs,Col,Toks,Line,[],_37}}
	  %% Line 398
	  <[46|[46|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 399
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [46|[46]], '..', 2)
	  %% Line 400
	  <Cs = [46],_X_St,Line,Col,Toks> when 'true' ->
	      let <_38> = 'scan'/6
	      in  %% Line 401
		  {'more',{Cs,Col,Toks,Line,[],_38}}
	  %% Line 402
	  <[C = 46|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 403
	      apply 'scan_dot'/6
		  (Cs, St, Line, Col, Toks, [C|[]])
	  %% Line 404
	  <[34|Cs],St,Line,Col,Toks> when 'true' ->
	      let <State0> =
		  {%% Line 405
		   [],%% Line 405
		      [],%% Line 405
			 Line,%% Line 405
			      Col}
	      in  let <_40> =
		      case %% Line 406
			   Col of
			%% Line 1159
			( <( _127 = ( 'no_col'
				      -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _127
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_128>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_128, ( 1
					     -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_129> when ( 'true'
					-| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_129,( 1
									     -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 406
		      apply 'scan_string'/6
			  (Cs, St, Line, _40, Toks, State0)
	  %% Line 407
	  <[39|Cs],St,Line,Col,Toks> when 'true' ->
	      let <State0> =
		  {%% Line 408
		   [],%% Line 408
		      [],%% Line 408
			 Line,%% Line 408
			      Col}
	      in  let <_42> =
		      case %% Line 409
			   Col of
			%% Line 1159
			( <( _133 = ( 'no_col'
				      -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _133
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_134>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_134, ( 1
					     -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_135> when ( 'true'
					-| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_135,( 1
									     -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 409
		      apply 'scan_qatom'/6
			  (Cs, St, Line, _42, Toks, State0)
	  %% Line 410
	  <[36|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 411
	      apply 'scan_char'/5
		  (Cs, St, Line, Col, Toks)
	  %% Line 412
	  <[13|Cs],St = {'erl_scan',_107,_108,_109,_110},Line,Col,Toks>
	      when ( try
		      let <_47> =
			  call 'erlang':'element'
			      (3, St)
		      in  ( call 'erlang':'=:='
				(_47, 'true')
			    -| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 726
	      ( apply 'tok3'/9
		    (Cs, St, Line, Col, Toks, ( 'white_space'
						-| ['compiler_generated'] ), ( [13]
									       -| ['compiler_generated'] ), ( [13]
													      -| ['compiler_generated'] ), ( 1
																	     -| ['compiler_generated'] ))
		-| ['compiler_generated'] )
	  %% Line 414
	  <[C|Cs],St,Line,Col,Toks>
	      when try
		    let <_49> =
			call 'erlang':'>='
			    (C, 223)
		    in  let <_50> =
			    call 'erlang':'=<'
				(C, 255)
			in  let <_51> =
				call 'erlang':'=/='
				    (C, 247)
			    in  let <_52> =
				    call 'erlang':'and'
					(_50, _51)
				in  call 'erlang':'and'
					(_49, _52)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 415
	      apply 'scan_atom'/6
		  (Cs, St, Line, Col, Toks, [C|[]])
	  %% Line 416
	  <[C|Cs],St,Line,Col,Toks>
	      when try
		    let <_53> =
			call 'erlang':'>='
			    (C, 192)
		    in  let <_54> =
			    call 'erlang':'=<'
				(C, 222)
			in  let <_55> =
				call 'erlang':'/='
				    (C, 215)
			    in  let <_56> =
				    call 'erlang':'and'
					(_54, _55)
				in  call 'erlang':'and'
					(_53, _56)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 417
	      apply 'scan_variable'/6
		  (Cs, St, Line, Col, Toks, [C|[]])
	  %% Line 418
	  <[9|Cs],St = {'erl_scan',_111,_112,_113,_114},Line,Col,Toks>
	      when ( try
		      let <_61> =
			  call 'erlang':'element'
			      (3, St)
		      in  ( call 'erlang':'=:='
				(_61, 'true')
			    -| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 419
	      apply 'scan_tabs'/6
		  (Cs, St, Line, Col, Toks, 1)
	  %% Line 420
	  <[9|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 421
	      apply 'skip_white_space'/6
		  (Cs, St, Line, Col, Toks, 1)
	  %% Line 422
	  <[C|Cs],St,Line,Col,Toks>
	      when try
		    ( let <_72> =
			  case call 'erlang':'is_integer'
				   (C) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_67> =
				      case call 'erlang':'>='
					       (C, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (C, 32)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_65> when 'true' ->
					      _65
					  -| ['compiler_generated'] )
				      end
				  in  ( case _67 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						( case call 'erlang':'>='
							   (C, 128) of
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  call 'erlang':'=<'
							      (C, 160)
						      -| ['compiler_generated'] )
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						    ( <_68> when 'true' ->
							  _68
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_64> when 'true' ->
						_64
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_63> when 'true' ->
				  _63
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _72
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 423
	      ( case St of
		  ( <( {'erl_scan',_115,_rec0,_116,_117}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec0 of
			  %% Line 424
			  <'true'> when 'true' ->
			      %% Line 425
			      apply 'scan_white_space'/6
				  (Cs, St, Line, Col, Toks, [C|[]])
			  %% Line 426
			  <'false'> when 'true' ->
			      %% Line 427
			      apply 'skip_white_space'/6
				  (Cs, St, Line, Col, Toks, 1)
			  ( <_75> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_75})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_118> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','erl_scan'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 431
	  <[60|[60|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 432
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [60|[60]], '<<', 2)
	  %% Line 433
	  <[60|[45|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 434
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [60|[45]], '<-', 2)
	  %% Line 435
	  <[60|[61|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 436
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [60|[61]], '<=', 2)
	  %% Line 437
	  <Cs = [60],_X_St,Line,Col,Toks> when 'true' ->
	      let <_76> = 'scan'/6
	      in  %% Line 438
		  {'more',{Cs,Col,Toks,Line,[],_76}}
	  %% Line 440
	  <[62|[62|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 441
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [62|[62]], '>>', 2)
	  %% Line 442
	  <[62|[61|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 443
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [62|[61]], '>=', 2)
	  %% Line 444
	  <Cs = [62],_X_St,Line,Col,Toks> when 'true' ->
	      let <_77> = 'scan'/6
	      in  %% Line 445
		  {'more',{Cs,Col,Toks,Line,[],_77}}
	  %% Line 447
	  <[45|[62|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 448
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [45|[62]], '->', 2)
	  %% Line 449
	  <[45|[45|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 450
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [45|[45]], '--', 2)
	  %% Line 451
	  <Cs = [45],_X_St,Line,Col,Toks> when 'true' ->
	      let <_78> = 'scan'/6
	      in  %% Line 452
		  {'more',{Cs,Col,Toks,Line,[],_78}}
	  %% Line 454
	  <[43|[43|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 455
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [43|[43]], '++', 2)
	  %% Line 456
	  <Cs = [43],_X_St,Line,Col,Toks> when 'true' ->
	      let <_79> = 'scan'/6
	      in  %% Line 457
		  {'more',{Cs,Col,Toks,Line,[],_79}}
	  %% Line 459
	  <[61|[58|[61|Cs]]],St,Line,Col,Toks> when 'true' ->
	      %% Line 460
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [61|[58|[61]]], '=:=', 3)
	  %% Line 461
	  <Cs = [61|[58]],_X_St,Line,Col,Toks> when 'true' ->
	      let <_80> = 'scan'/6
	      in  %% Line 462
		  {'more',{Cs,Col,Toks,Line,[],_80}}
	  %% Line 463
	  <[61|[47|[61|Cs]]],St,Line,Col,Toks> when 'true' ->
	      %% Line 464
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [61|[47|[61]]], '=/=', 3)
	  %% Line 465
	  <Cs = [61|[47]],_X_St,Line,Col,Toks> when 'true' ->
	      let <_81> = 'scan'/6
	      in  %% Line 466
		  {'more',{Cs,Col,Toks,Line,[],_81}}
	  %% Line 467
	  <[61|[60|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 468
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [61|[60]], '=<', 2)
	  %% Line 469
	  <[61|[62|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 470
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [61|[62]], '=>', 2)
	  %% Line 471
	  <[61|[61|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 472
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [61|[61]], '==', 2)
	  %% Line 473
	  <Cs = [61],_X_St,Line,Col,Toks> when 'true' ->
	      let <_82> = 'scan'/6
	      in  %% Line 474
		  {'more',{Cs,Col,Toks,Line,[],_82}}
	  %% Line 476
	  <[47|[61|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 477
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [47|[61]], '/=', 2)
	  %% Line 478
	  <Cs = [47],_X_St,Line,Col,Toks> when 'true' ->
	      let <_83> = 'scan'/6
	      in  %% Line 479
		  {'more',{Cs,Col,Toks,Line,[],_83}}
	  %% Line 481
	  <[124|[124|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 482
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [124|[124]], '||', 2)
	  %% Line 483
	  <Cs = [124],_X_St,Line,Col,Toks> when 'true' ->
	      let <_84> = 'scan'/6
	      in  %% Line 484
		  {'more',{Cs,Col,Toks,Line,[],_84}}
	  %% Line 486
	  <[58|[61|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 487
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [58|[61]], ':=', 2)
	  %% Line 489
	  <[58|[58|Cs]],St,Line,Col,Toks> when 'true' ->
	      %% Line 490
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [58|[58]], '::', 2)
	  %% Line 491
	  <Cs = [58],_X_St,Line,Col,Toks> when 'true' ->
	      let <_85> = 'scan'/6
	      in  %% Line 492
		  {'more',{Cs,Col,Toks,Line,[],_85}}
	  %% Line 494
	  <[61|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 495
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [61], '=', 1)
	  %% Line 496
	  <[58|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 497
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [58], ':', 1)
	  %% Line 498
	  <[124|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 499
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [124], '|', 1)
	  %% Line 500
	  <[35|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 501
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [35], '#', 1)
	  %% Line 502
	  <[47|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 503
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [47], '/', 1)
	  %% Line 504
	  <[63|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 505
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [63], '?', 1)
	  %% Line 506
	  <[45|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 507
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [45], '-', 1)
	  %% Line 508
	  <[43|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 509
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [43], '+', 1)
	  %% Line 510
	  <[42|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 511
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [42], '*', 1)
	  %% Line 512
	  <[60|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 513
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [60], '<', 1)
	  %% Line 514
	  <[62|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 515
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [62], '>', 1)
	  %% Line 516
	  <[33|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 517
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [33], '!', 1)
	  %% Line 518
	  <[64|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 519
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [64], '@', 1)
	  %% Line 520
	  <[92|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 521
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [92], '\\', 1)
	  %% Line 522
	  <[94|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 523
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [94], '^', 1)
	  %% Line 524
	  <[96|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 525
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [96], '`', 1)
	  %% Line 526
	  <[126|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 527
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [126], '~', 1)
	  %% Line 528
	  <[38|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 529
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, [38], '&', 1)
	  %% Line 531
	  <[C|Cs],St,Line,Col,Toks>
	      when let <_86> =
		    call 'erlang':'>='
			(C, 0)
		in  let <_87> =
			call 'erlang':'=<'
			    (C, 255)
		    in  call 'erlang':'and'
			    (_86, _87) ->
	      let <Str> =
		  [%% Line 532
		   C|%% Line 532
		     []]
	      in  let <_89> =
		      call %% Line 533
			   'erlang':%% Line 533
				    'list_to_atom'
			  (%% Line 533
			   Str)
		  in  %% Line 533
		      apply 'tok2'/8
			  (Cs, St, Line, Col, Toks, Str, _89, 1)
	  %% Line 534
	  <[C|Cs],_X_St,Line,Col,_X_Toks>
	      when let <_90> =
		    call 'erlang':'is_integer'
			(C)
		in  let <_91> =
			call 'erlang':'>='
			    (C, 0)
		    in  call 'erlang':'and'
			    (_90, _91) ->
	      let <Ncol> =
		  case %% Line 535
		       Col of
		    %% Line 1159
		    ( <( _154 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _154
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_155>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_155, ( 1
					 -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_156> when ( 'true'
				    -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_156,( 1
									 -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 536
		  apply 'scan_error'/6
		      ({'illegal','character'}, Line, Col, Line, Ncol, Cs)
	  %% Line 537
	  <Cs = [],_X_St,Line,Col,Toks> when 'true' ->
	      let <_93> = 'scan'/6
	      in  %% Line 538
		  {'more',{Cs,Col,Toks,Line,[],_93}}
	  %% Line 539
	  <Cs = 'eof',_X_St,Line,Col,Toks> when 'true' ->
	      %% Line 540
	      {'ok',Toks,Cs,Line,Col}
	  ( <_98,_97,_96,_95,_94> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_98,_97,_96,_95,_94})
		  -| [{'function_name',{'scan1',5}}] )
	    -| ['compiler_generated'] )
	end
'scan_atom'/6 =
    %% Line 542
    fun (_0,_1,_2,_3,_4,_5) ->
	%% Line 543
	case apply 'scan_name'/2
		 (_0, _5) of
	  %% Line 544
	  <{'more',Ncs}> when 'true' ->
	      let <_6> = 'scan_atom'/6
	      in  %% Line 545
		  {'more',{[],_3,_4,_2,Ncs,_6}}
	  %% Line 546
	  <{Wcs,Cs}> when 'true' ->
	      let <_7> =
		  catch
		      %% Line 547
		      call 'erlang':'list_to_atom'
			  (Wcs)
	      in  %% Line 547
		  case _7 of
		    %% Line 548
		    <Name>
			when call 'erlang':'is_atom'
			      (_7) ->
			%% Line 549
			( case _1 of
			    ( <( {'erl_scan',_rec1,_21,_22,_23}
				 -| ['compiler_generated'] )> when 'true' ->
				  case apply _rec1
					   (Name) of
				    %% Line 550
				    <'true'> when 'true' ->
					%% Line 551
					apply 'tok2'/7
					    (Cs, _1, _2, _3, _4, Wcs, Name)
				    %% Line 552
				    <'false'> when 'true' ->
					%% Line 553
					apply 'tok3'/8
					    (Cs, _1, _2, _3, _4, 'atom', Wcs, Name)
				    ( <_10> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_10})
				      -| ['compiler_generated'] )
				  end
			      -| ['compiler_generated'] )
			    ( <_24> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','erl_scan'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 555
		    <_X_Error> when 'true' ->
			let <_11> =
			    call %% Line 556
				 'erlang':%% Line 556
					  'length'
				(%% Line 556
				 Wcs)
			in  let <Ncol> =
				case <_3,_11> of
				  %% Line 1159
				  ( <( _27 = ( 'no_col'
					       -| ['compiler_generated'] )
				       -| ['compiler_generated'] ),_X_N> when ( 'true'
										-| ['compiler_generated'] ) ->
					_27
				    -| ['compiler_generated'] )
				  %% Line 1161
				  ( <_28,N>
					when ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'is_integer'
										 -| ['compiler_generated'] )
						(_28)
					    -| ['compiler_generated'] ) ->
					%% Line 1162
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( '+'
									       -| ['compiler_generated'] )
					      (_28, N)
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_29,_30> when ( 'true'
						     -| ['compiler_generated'] ) ->
					%% Line 1159
					( primop ( 'match_fail'
						   -| ['compiler_generated'] )
					      (( {( 'function_clause'
						    -| ['compiler_generated'] ),_29,_30}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    in  %% Line 557
				apply 'scan_error'/6
				    ({'illegal','atom'}, _2, _3, _2, Ncol, Cs)
		  end
	  ( <_14> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_14})
	    -| ['compiler_generated'] )
	end
'scan_variable'/6 =
    %% Line 561
    fun (_0,_1,_2,_3,_4,_5) ->
	%% Line 562
	case apply 'scan_name'/2
		 (_0, _5) of
	  %% Line 563
	  <{'more',Ncs}> when 'true' ->
	      let <_6> = 'scan_variable'/6
	      in  %% Line 564
		  {'more',{[],_3,_4,_2,Ncs,_6}}
	  %% Line 565
	  <{Wcs,Cs}> when 'true' ->
	      let <_7> =
		  catch
		      %% Line 566
		      call 'erlang':'list_to_atom'
			  (Wcs)
	      in  %% Line 566
		  case _7 of
		    %% Line 567
		    <Name>
			when call 'erlang':'is_atom'
			      (_7) ->
			%% Line 568
			apply 'tok3'/8
			    (Cs, _1, _2, _3, _4, 'var', Wcs, Name)
		    %% Line 569
		    <_X_Error> when 'true' ->
			let <_8> =
			    call %% Line 570
				 'erlang':%% Line 570
					  'length'
				(%% Line 570
				 Wcs)
			in  let <Ncol> =
				case <_3,_8> of
				  %% Line 1159
				  ( <( _20 = ( 'no_col'
					       -| ['compiler_generated'] )
				       -| ['compiler_generated'] ),_X_N> when ( 'true'
										-| ['compiler_generated'] ) ->
					_20
				    -| ['compiler_generated'] )
				  %% Line 1161
				  ( <_21,N>
					when ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'is_integer'
										 -| ['compiler_generated'] )
						(_21)
					    -| ['compiler_generated'] ) ->
					%% Line 1162
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( '+'
									       -| ['compiler_generated'] )
					      (_21, N)
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_22,_23> when ( 'true'
						     -| ['compiler_generated'] ) ->
					%% Line 1159
					( primop ( 'match_fail'
						   -| ['compiler_generated'] )
					      (( {( 'function_clause'
						    -| ['compiler_generated'] ),_22,_23}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    in  %% Line 571
				apply 'scan_error'/6
				    ({'illegal','var'}, _2, _3, _2, Ncol, Cs)
		  end
	  ( <_11> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_11})
	    -| ['compiler_generated'] )
	end
'scan_name'/2 =
    %% Line 575
    fun (_0,_1) ->
	case <_0,_1> of
	  <[C|Cs],Ncs>
	      when let <_2> =
		    call 'erlang':'>='
			(C, 97)
		in  let <_3> =
			call 'erlang':'=<'
			    (C, 122)
		    in  call 'erlang':'and'
			    (_2, _3) ->
	      %% Line 576
	      apply 'scan_name'/2
		  (Cs, [C|Ncs])
	  %% Line 577
	  <[C|Cs],Ncs>
	      when let <_4> =
		    call 'erlang':'>='
			(C, 65)
		in  let <_5> =
			call 'erlang':'=<'
			    (C, 90)
		    in  call 'erlang':'and'
			    (_4, _5) ->
	      %% Line 578
	      apply 'scan_name'/2
		  (Cs, [C|Ncs])
	  %% Line 579
	  <[C = 95|Cs],Ncs> when 'true' ->
	      %% Line 580
	      apply 'scan_name'/2
		  (Cs, [C|Ncs])
	  %% Line 581
	  <[C|Cs],Ncs>
	      when try
		    ( let <_8> =
			  case call 'erlang':'>='
				   (C, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  call 'erlang':'=<'
				      (C, 57)
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_6> when 'true' ->
				  _6
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _8
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 582
	      apply 'scan_name'/2
		  (Cs, [C|Ncs])
	  %% Line 583
	  <[C = 64|Cs],Ncs> when 'true' ->
	      %% Line 584
	      apply 'scan_name'/2
		  (Cs, [C|Ncs])
	  %% Line 585
	  <[C|Cs],Ncs>
	      when try
		    let <_9> =
			call 'erlang':'>='
			    (C, 223)
		    in  let <_10> =
			    call 'erlang':'=<'
				(C, 255)
			in  let <_11> =
				call 'erlang':'=/='
				    (C, 247)
			    in  let <_12> =
				    call 'erlang':'and'
					(_10, _11)
				in  call 'erlang':'and'
					(_9, _12)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 586
	      apply 'scan_name'/2
		  (Cs, [C|Ncs])
	  %% Line 587
	  <[C|Cs],Ncs>
	      when try
		    let <_13> =
			call 'erlang':'>='
			    (C, 192)
		    in  let <_14> =
			    call 'erlang':'=<'
				(C, 222)
			in  let <_15> =
				call 'erlang':'=/='
				    (C, 215)
			    in  let <_16> =
				    call 'erlang':'and'
					(_14, _15)
				in  call 'erlang':'and'
					(_13, _16)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 588
	      apply 'scan_name'/2
		  (Cs, [C|Ncs])
	  %% Line 589
	  <[],Ncs> when 'true' ->
	      %% Line 590
	      {'more',Ncs}
	  %% Line 591
	  <Cs,Ncs> when 'true' ->
	      let <_17> =
		  call %% Line 592
		       'lists':%% Line 592
			       'reverse'
		      (%% Line 592
		       Ncs)
	      in  %% Line 592
		  {_17,Cs}
	end
'scan_dot'/6 =
    %% Line 596
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs = [37|_45],St,Line,Col,Toks,Ncs> when 'true' ->
	      let <Anno> =
		  case %% Line 597
		       <Line,Col,St,Ncs> of
		    %% Line 1138
		    ( <_50,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),_X_String> when ( 'true'
													 -| ['compiler_generated'] ) ->
			  %% Line 1157
			  ( call ( 'erl_anno'
				   -| ['compiler_generated'] ):( 'new'
								 -| ['compiler_generated'] )
				(_50)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1140
		    ( <_53,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),String> when ( 'true'
												      -| ['compiler_generated'] ) ->
			  ( let <Anno> =
				call %% Line 1157
				     ( 'erl_anno'
				       -| ['compiler_generated'] ):%% Line 1157
								   ( 'new'
								     -| ['compiler_generated'] )
				    (_53)
			    in  %% Line 1142
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'set_text'
								       -| ['compiler_generated'] )
				      (String, Anno)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1143
		    ( <_56,_57,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_16,_17,_18,( 'false'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),_X_String> when ( 'true'
									       -| ['compiler_generated'] ) ->
			  ( let <_58> = {_56,_57}
			    in  %% Line 1157
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'new'
								       -| ['compiler_generated'] )
				      (_58)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1145
		    ( <_60,_61,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_19,_20,_21,( 'true'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),String> when ( 'true'
									    -| ['compiler_generated'] ) ->
			  ( let <_62> = {_60,_61}
			    in  ( let <Anno> =
				      call %% Line 1157
					   ( 'erl_anno'
					     -| ['compiler_generated'] ):%% Line 1157
									 ( 'new'
									   -| ['compiler_generated'] )
					  (_62)
				  in  %% Line 1147
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'set_text'
									     -| ['compiler_generated'] )
					    (String, Anno)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_9,_8,_7,_6> when ( 'true'
					   -| ['compiler_generated'] ) ->
			  %% Line 1138
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_9,_8,_7,_6}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  let <_7> =
		      case %% Line 598
			   Col of
			%% Line 1159
			( <( _66 = ( 'no_col'
				     -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _66
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_67>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_67, ( 1
					    -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_68> when ( 'true'
				       -| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_68,( 1
									    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 598
		      {'ok',[{'dot',Anno}|Toks],Cs,Line,_7}
	  %% Line 599
	  <[C = 10|Cs],St,Line,Col,Toks,Ncs> when 'true' ->
	      let <_14> =
		  case <> of
		    %% Line 600
		    <>
			when ( try
				( let <_10> =
				      case ( call ( 'erlang'
						    -| ['compiler_generated'] ):( 'is_record'
										  -| ['compiler_generated'] )
						 (St, ( 'erl_scan'
							-| ['compiler_generated'] ), ( 5
										       -| ['compiler_generated'] ))
					     -| ['compiler_generated'] ) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      ( 'true'
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      ( 'fail'
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( _8
					     -| ['compiler_generated'] )> when 'true' ->
					      ( _8
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  in  let <_11> =
					  call 'erlang':'=:='
					      (( _10
						 -| ['compiler_generated'] ), 'true')
				      in  let <_12> =
					      call 'erlang':'element'
						  (5, St)
					  in  let <_13> =
						  call 'erlang':'=:='
						      (_12, 'true')
					      in  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'and'
											 -| ['compiler_generated'] )
							(_11, _13)
						    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			    -| ['compiler_generated'] ) ->
			call 'erlang':'++'
			    (Ncs, [C|[]])
		    %% Line 600
		    <> when 'true' ->
			[]
		  end
	      in  let <Anno> =
		      case %% Line 600
			   <Line,Col,St,_14> of
			%% Line 1138
			( <_74,( 'no_col'
				 -| ['compiler_generated'] ),( {( 'erl_scan'
								  -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													    -| ['compiler_generated'] )}
							       -| ['compiler_generated'] ),_X_String> when ( 'true'
													     -| ['compiler_generated'] ) ->
			      %% Line 1157
			      ( call ( 'erl_anno'
				       -| ['compiler_generated'] ):( 'new'
								     -| ['compiler_generated'] )
				    (_74)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1140
			( <_77,( 'no_col'
				 -| ['compiler_generated'] ),( {( 'erl_scan'
								  -| ['compiler_generated'] ),_13,_78,_15,( 'true'
													    -| ['compiler_generated'] )}
							       -| ['compiler_generated'] ),String> when ( 'true'
													  -| ['compiler_generated'] ) ->
			      ( let <Anno> =
				    call %% Line 1157
					 ( 'erl_anno'
					   -| ['compiler_generated'] ):%% Line 1157
								       ( 'new'
									 -| ['compiler_generated'] )
					(_77)
				in  %% Line 1142
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'set_text'
									   -| ['compiler_generated'] )
					  (String, Anno)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1143
			( <_81,_82,( {( 'erl_scan'
					-| ['compiler_generated'] ),_16,_17,_18,( 'false'
										  -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),_X_String> when ( 'true'
										   -| ['compiler_generated'] ) ->
			      ( let <_83> = {_81,_82}
				in  %% Line 1157
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'new'
									   -| ['compiler_generated'] )
					  (_83)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1145
			( <_85,_86,( {( 'erl_scan'
					-| ['compiler_generated'] ),_19,_20,_21,( 'true'
										  -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),String> when ( 'true'
										-| ['compiler_generated'] ) ->
			      ( let <_87> = {_85,_86}
				in  ( let <Anno> =
					  call %% Line 1157
					       ( 'erl_anno'
						 -| ['compiler_generated'] ):%% Line 1157
									     ( 'new'
									       -| ['compiler_generated'] )
					      (_87)
				      in  %% Line 1147
					  ( call ( 'erl_anno'
						   -| ['compiler_generated'] ):( 'set_text'
										 -| ['compiler_generated'] )
						(String, Anno)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_9,_8,_7,_6> when ( 'true'
					       -| ['compiler_generated'] ) ->
			      %% Line 1138
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_9,_8,_7,_6}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  let <_17> =
			  call %% Line 601
			       'erlang':%% Line 601
					'+'
			      (%% Line 601
			       Line, %% Line 601
				     1)
		      in  let <_16> =
			      case %% Line 601
				   Col of
				%% Line 1164
				( <( _91 = ( 'no_col'
					     -| ['compiler_generated'] )
				     -| ['compiler_generated'] )> when ( 'true'
									 -| ['compiler_generated'] ) ->
				      _91
				  -| ['compiler_generated'] )
				%% Line 1166
				( <_92>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_integer'
									       -| ['compiler_generated'] )
					      (Col)
					  -| ['compiler_generated'] ) ->
				      ( 1
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_93> when ( 'true'
					       -| ['compiler_generated'] ) ->
				      %% Line 1164
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),_93,( 1
										    -| ['compiler_generated'] )}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 601
			      {'ok',[{'dot',Anno}|Toks],Cs,_17,_16}
	  %% Line 602
	  <[C|Cs],St,Line,Col,Toks,Ncs>
	      when try
		    ( let <_27> =
			  case call 'erlang':'is_integer'
				   (C) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_22> =
				      case call 'erlang':'>='
					       (C, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (C, 32)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_20> when 'true' ->
					      _20
					  -| ['compiler_generated'] )
				      end
				  in  ( case _22 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						( case call 'erlang':'>='
							   (C, 128) of
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  call 'erlang':'=<'
							      (C, 160)
						      -| ['compiler_generated'] )
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						    ( <_23> when 'true' ->
							  _23
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_19> when 'true' ->
						_19
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_18> when 'true' ->
				  _18
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _27
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_34> =
		  case <> of
		    %% Line 603
		    <>
			when ( try
				( let <_30> =
				      case ( call ( 'erlang'
						    -| ['compiler_generated'] ):( 'is_record'
										  -| ['compiler_generated'] )
						 (St, ( 'erl_scan'
							-| ['compiler_generated'] ), ( 5
										       -| ['compiler_generated'] ))
					     -| ['compiler_generated'] ) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      ( 'true'
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      ( 'fail'
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( _28
					     -| ['compiler_generated'] )> when 'true' ->
					      ( _28
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  in  let <_31> =
					  call 'erlang':'=:='
					      (( _30
						 -| ['compiler_generated'] ), 'true')
				      in  let <_32> =
					      call 'erlang':'element'
						  (5, St)
					  in  let <_33> =
						  call 'erlang':'=:='
						      (_32, 'true')
					      in  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'and'
											 -| ['compiler_generated'] )
							(_31, _33)
						    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			    -| ['compiler_generated'] ) ->
			call 'erlang':'++'
			    (Ncs, [C|[]])
		    %% Line 603
		    <> when 'true' ->
			[]
		  end
	      in  let <Anno> =
		      case %% Line 603
			   <Line,Col,St,_34> of
			%% Line 1138
			( <_99,( 'no_col'
				 -| ['compiler_generated'] ),( {( 'erl_scan'
								  -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													    -| ['compiler_generated'] )}
							       -| ['compiler_generated'] ),_X_String> when ( 'true'
													     -| ['compiler_generated'] ) ->
			      %% Line 1157
			      ( call ( 'erl_anno'
				       -| ['compiler_generated'] ):( 'new'
								     -| ['compiler_generated'] )
				    (_99)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1140
			( <_102,( 'no_col'
				  -| ['compiler_generated'] ),( {( 'erl_scan'
								   -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													     -| ['compiler_generated'] )}
								-| ['compiler_generated'] ),String> when ( 'true'
													   -| ['compiler_generated'] ) ->
			      ( let <Anno> =
				    call %% Line 1157
					 ( 'erl_anno'
					   -| ['compiler_generated'] ):%% Line 1157
								       ( 'new'
									 -| ['compiler_generated'] )
					(_102)
				in  %% Line 1142
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'set_text'
									   -| ['compiler_generated'] )
					  (String, Anno)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1143
			( <_105,_106,( {( 'erl_scan'
					  -| ['compiler_generated'] ),_16,_17,_18,( 'false'
										    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ),_X_String> when ( 'true'
										     -| ['compiler_generated'] ) ->
			      ( let <_107> = {_105,_106}
				in  %% Line 1157
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'new'
									   -| ['compiler_generated'] )
					  (_107)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1145
			( <_109,_110,( {( 'erl_scan'
					  -| ['compiler_generated'] ),_19,_20,_21,( 'true'
										    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ),String> when ( 'true'
										  -| ['compiler_generated'] ) ->
			      ( let <_111> = {_109,_110}
				in  ( let <Anno> =
					  call %% Line 1157
					       ( 'erl_anno'
						 -| ['compiler_generated'] ):%% Line 1157
									     ( 'new'
									       -| ['compiler_generated'] )
					      (_111)
				      in  %% Line 1147
					  ( call ( 'erl_anno'
						   -| ['compiler_generated'] ):( 'set_text'
										 -| ['compiler_generated'] )
						(String, Anno)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_9,_8,_7,_6> when ( 'true'
					       -| ['compiler_generated'] ) ->
			      %% Line 1138
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_9,_8,_7,_6}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  let <_36> =
			  case %% Line 604
			       Col of
			    %% Line 1159
			    ( <( _115 = ( 'no_col'
					  -| ['compiler_generated'] )
				 -| ['compiler_generated'] )> when ( 'true'
								     -| ['compiler_generated'] ) ->
				  _115
			      -| ['compiler_generated'] )
			    %% Line 1161
			    ( <_116>
				  when ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'is_integer'
									   -| ['compiler_generated'] )
					  (Col)
				      -| ['compiler_generated'] ) ->
				  %% Line 1162
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( '+'
									 -| ['compiler_generated'] )
					(_116, ( 2
						 -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_117> when ( 'true'
					    -| ['compiler_generated'] ) ->
				  %% Line 1159
				  ( primop ( 'match_fail'
					     -| ['compiler_generated'] )
					(( {( 'function_clause'
					      -| ['compiler_generated'] ),_117,( 2
										 -| ['compiler_generated'] )}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 604
			  {'ok',[{'dot',Anno}|Toks],Cs,Line,_36}
	  %% Line 605
	  <Cs = 'eof',St,Line,Col,Toks,Ncs> when 'true' ->
	      let <Anno> =
		  case %% Line 606
		       <Line,Col,St,Ncs> of
		    %% Line 1138
		    ( <_123,( 'no_col'
			      -| ['compiler_generated'] ),( {( 'erl_scan'
							       -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													 -| ['compiler_generated'] )}
							    -| ['compiler_generated'] ),_X_String> when ( 'true'
													  -| ['compiler_generated'] ) ->
			  %% Line 1157
			  ( call ( 'erl_anno'
				   -| ['compiler_generated'] ):( 'new'
								 -| ['compiler_generated'] )
				(_123)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1140
		    ( <_126,( 'no_col'
			      -| ['compiler_generated'] ),( {( 'erl_scan'
							       -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													 -| ['compiler_generated'] )}
							    -| ['compiler_generated'] ),String> when ( 'true'
												       -| ['compiler_generated'] ) ->
			  ( let <Anno> =
				call %% Line 1157
				     ( 'erl_anno'
				       -| ['compiler_generated'] ):%% Line 1157
								   ( 'new'
								     -| ['compiler_generated'] )
				    (_126)
			    in  %% Line 1142
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'set_text'
								       -| ['compiler_generated'] )
				      (String, Anno)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1143
		    ( <_129,_130,( {( 'erl_scan'
				      -| ['compiler_generated'] ),_16,_17,_18,( 'false'
										-| ['compiler_generated'] )}
				   -| ['compiler_generated'] ),_X_String> when ( 'true'
										 -| ['compiler_generated'] ) ->
			  ( let <_131> = {_129,_130}
			    in  %% Line 1157
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'new'
								       -| ['compiler_generated'] )
				      (_131)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1145
		    ( <_133,_134,( {( 'erl_scan'
				      -| ['compiler_generated'] ),_19,_20,_21,( 'true'
										-| ['compiler_generated'] )}
				   -| ['compiler_generated'] ),String> when ( 'true'
									      -| ['compiler_generated'] ) ->
			  ( let <_135> = {_133,_134}
			    in  ( let <Anno> =
				      call %% Line 1157
					   ( 'erl_anno'
					     -| ['compiler_generated'] ):%% Line 1157
									 ( 'new'
									   -| ['compiler_generated'] )
					  (_135)
				  in  %% Line 1147
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'set_text'
									     -| ['compiler_generated'] )
					    (String, Anno)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_9,_8,_7,_6> when ( 'true'
					   -| ['compiler_generated'] ) ->
			  %% Line 1138
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_9,_8,_7,_6}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  let <_38> =
		      case %% Line 607
			   Col of
			%% Line 1159
			( <( _139 = ( 'no_col'
				      -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _139
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_140>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_140, ( 1
					     -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_141> when ( 'true'
					-| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_141,( 1
									     -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 607
		      {'ok',[{'dot',Anno}|Toks],Cs,Line,_38}
	  %% Line 608
	  <Cs,St,Line,Col,Toks,Ncs> when 'true' ->
	      %% Line 609
	      apply 'tok2'/8
		  (Cs, St, Line, Col, Toks, Ncs, '.', 1)
	end
'scan_newline'/5 =
    %% Line 630
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <[32|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 631
	      apply 'scan_nl_spcs'/6
		  (Cs, St, Line, Col, Toks, 2)
	  %% Line 632
	  <[9|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 633
	      apply 'scan_nl_tabs'/6
		  (Cs, St, Line, Col, Toks, 2)
	  %% Line 634
	  <[13|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 635
	      apply 'newline_end'/7
		  (Cs, St, Line, Col, Toks, 2, [10|[13]])
	  %% Line 636
	  <[12|Cs],St,Line,Col,Toks> when 'true' ->
	      %% Line 637
	      apply 'newline_end'/7
		  (Cs, St, Line, Col, Toks, 2, [10|[12]])
	  %% Line 638
	  <[],_X_St,Line,Col,Toks> when 'true' ->
	      let <_5> = 'scan'/6
	      in  %% Line 639
		  {'more',{[10],Col,Toks,Line,[],_5}}
	  %% Line 640
	  <Cs,St,Line,Col,Toks> when 'true' ->
	      %% Line 641
	      apply 'scan_nl_white_space'/6
		  (Cs, St, Line, Col, Toks, [10])
	end
'scan_nl_spcs'/6 =
    %% Line 643
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[32|Cs],St,Line,Col,Toks,N>
	      when call 'erlang':'<'
		    (N,
		     17) ->
	      let <_6> =
		  call %% Line 644
		       'erlang':%% Line 644
				'+'
		      (%% Line 644
		       N, %% Line 644
			  1)
	      in  %% Line 644
		  apply 'scan_nl_spcs'/6
		      (Cs, St, Line, Col, Toks, _6)
	  %% Line 645
	  <Cs = [],_X_St,Line,Col,Toks,N> when 'true' ->
	      let <_7> = 'scan_nl_spcs'/6
	      in  %% Line 646
		  {'more',{Cs,Col,Toks,Line,N,_7}}
	  %% Line 647
	  <Cs,St,Line,Col,Toks,N> when 'true' ->
	      let <_8> =
		  apply %% Line 648
			'nl_spcs'/1
		      (%% Line 648
		       N)
	      in  %% Line 648
		  apply 'newline_end'/7
		      (Cs, St, Line, Col, Toks, N, _8)
	end
'scan_nl_tabs'/6 =
    %% Line 650
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[9|Cs],St,Line,Col,Toks,N>
	      when call 'erlang':'<'
		    (N,
		     11) ->
	      let <_6> =
		  call %% Line 651
		       'erlang':%% Line 651
				'+'
		      (%% Line 651
		       N, %% Line 651
			  1)
	      in  %% Line 651
		  apply 'scan_nl_tabs'/6
		      (Cs, St, Line, Col, Toks, _6)
	  %% Line 652
	  <Cs = [],_X_St,Line,Col,Toks,N> when 'true' ->
	      let <_7> = 'scan_nl_tabs'/6
	      in  %% Line 653
		  {'more',{Cs,Col,Toks,Line,N,_7}}
	  %% Line 654
	  <Cs,St,Line,Col,Toks,N> when 'true' ->
	      let <_8> =
		  apply %% Line 655
			'nl_tabs'/1
		      (%% Line 655
		       N)
	      in  %% Line 655
		  apply 'newline_end'/7
		      (Cs, St, Line, Col, Toks, N, _8)
	end
'scan_nl_white_space'/6 =
    %% Line 660
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[10|Cs],St = {'erl_scan',_42,_43,_44,'false'},Line,Col = 'no_col',%% Line 661
									     Toks0,%% Line 661
										   Ncs> when 'true' ->
	      let <_7> =
		  call %% Line 1157
		       ( 'erl_anno'
			 -| ['compiler_generated'] ):%% Line 1157
						     ( 'new'
						       -| ['compiler_generated'] )
		      (%% Line 662
		       Line)
	      in  let <_6> =
		      call %% Line 662
			   'lists':%% Line 662
				   'reverse'
			  (%% Line 662
			   Ncs)
		  in  let <Toks> =
			  [%% Line 662
			   {'white_space',_7,_6}|%% Line 662
						 Toks0]
		      in  let <_9> =
			      call %% Line 663
				   'erlang':%% Line 663
					    '+'
				  (%% Line 663
				   Line, %% Line 663
					 1)
			  in  %% Line 663
			      apply 'scan_newline'/5
				  (Cs, St, _9, Col, Toks)
	  %% Line 664
	  <[10|Cs],St,Line,Col,Toks,Ncs0> when 'true' ->
	      let <Ncs> =
		  call %% Line 665
		       'lists':%% Line 665
			       'reverse'
		      (%% Line 665
		       Ncs0)
	      in  let <Anno> =
		      case %% Line 666
			   <Line,Col,St,Ncs> of
			%% Line 1138
			( <_54,( 'no_col'
				 -| ['compiler_generated'] ),( {( 'erl_scan'
								  -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													    -| ['compiler_generated'] )}
							       -| ['compiler_generated'] ),_X_String> when ( 'true'
													     -| ['compiler_generated'] ) ->
			      %% Line 1157
			      ( call ( 'erl_anno'
				       -| ['compiler_generated'] ):( 'new'
								     -| ['compiler_generated'] )
				    (_54)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1140
			( <_57,( 'no_col'
				 -| ['compiler_generated'] ),( {( 'erl_scan'
								  -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													    -| ['compiler_generated'] )}
							       -| ['compiler_generated'] ),String> when ( 'true'
													  -| ['compiler_generated'] ) ->
			      ( let <Anno> =
				    call %% Line 1157
					 ( 'erl_anno'
					   -| ['compiler_generated'] ):%% Line 1157
								       ( 'new'
									 -| ['compiler_generated'] )
					(_57)
				in  %% Line 1142
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'set_text'
									   -| ['compiler_generated'] )
					  (String, Anno)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1143
			( <_60,_61,( {( 'erl_scan'
					-| ['compiler_generated'] ),_16,_17,_18,( 'false'
										  -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),_X_String> when ( 'true'
										   -| ['compiler_generated'] ) ->
			      ( let <_62> = {_60,_61}
				in  %% Line 1157
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'new'
									   -| ['compiler_generated'] )
					  (_62)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1145
			( <_64,_65,( {( 'erl_scan'
					-| ['compiler_generated'] ),_19,_20,_21,( 'true'
										  -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),String> when ( 'true'
										-| ['compiler_generated'] ) ->
			      ( let <_66> = {_64,_65}
				in  ( let <Anno> =
					  call %% Line 1157
					       ( 'erl_anno'
						 -| ['compiler_generated'] ):%% Line 1157
									     ( 'new'
									       -| ['compiler_generated'] )
					      (_66)
				      in  %% Line 1147
					  ( call ( 'erl_anno'
						   -| ['compiler_generated'] ):( 'set_text'
										 -| ['compiler_generated'] )
						(String, Anno)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_9,_8,_7,_6> when ( 'true'
					       -| ['compiler_generated'] ) ->
			      %% Line 1138
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_9,_8,_7,_6}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  let <Token> = {%% Line 667
			   'white_space',%% Line 667
					 Anno,%% Line 667
					      Ncs}
		      in  let <_15> =
			      call %% Line 668
				   'erlang':%% Line 668
					    '+'
				  (%% Line 668
				   Line, %% Line 668
					 1)
			  in  let <_13> =
				  call %% Line 668
				       'erlang':%% Line 668
						'length'
				      (%% Line 668
				       Ncs)
			      in  let <_14> =
				      case %% Line 668
					   <Col,_13> of
					%% Line 1164
					( <( _70 = ( 'no_col'
						     -| ['compiler_generated'] )
					     -| ['compiler_generated'] ),_X_Ncol> when ( 'true'
											 -| ['compiler_generated'] ) ->
					      _70
					  -| ['compiler_generated'] )
					%% Line 1166
					( <_71,Ncol>
					      when ( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'is_integer'
										       -| ['compiler_generated'] )
						      (_71)
						  -| ['compiler_generated'] ) ->
					      %% Line 1167
					      Ncol
					  -| ['compiler_generated'] )
					( <_72,_73> when ( 'true'
							   -| ['compiler_generated'] ) ->
					      %% Line 1164
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'function_clause'
							  -| ['compiler_generated'] ),_72,_73}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  in  %% Line 668
				      apply 'scan_newline'/5
					  (Cs, St, _15, _14, [Token|Toks])
	  %% Line 669
	  <[C|Cs],St,Line,Col,Toks,Ncs>
	      when try
		    ( let <_25> =
			  case call 'erlang':'is_integer'
				   (C) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_20> =
				      case call 'erlang':'>='
					       (C, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (C, 32)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_18> when 'true' ->
					      _18
					  -| ['compiler_generated'] )
				      end
				  in  ( case _20 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						( case call 'erlang':'>='
							   (C, 128) of
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  call 'erlang':'=<'
							      (C, 160)
						      -| ['compiler_generated'] )
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						    ( <_21> when 'true' ->
							  _21
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_17> when 'true' ->
						_17
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_16> when 'true' ->
				  _16
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _25
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 670
	      apply 'scan_nl_white_space'/6
		  (Cs, St, Line, Col, Toks, [C|Ncs])
	  %% Line 671
	  <Cs = [],_X_St,Line,Col,Toks,Ncs> when 'true' ->
	      let <_26> = 'scan_nl_white_space'/6
	      in  %% Line 672
		  {'more',{Cs,Col,Toks,Line,Ncs,_26}}
	  %% Line 673
	  <Cs,St = {'erl_scan',_45,_46,_47,'false'},Line,Col = 'no_col',%% Line 674
									Toks,%% Line 674
									     Ncs> when 'true' ->
	      let <Anno> =
		  call %% Line 1157
		       ( 'erl_anno'
			 -| ['compiler_generated'] ):%% Line 1157
						     ( 'new'
						       -| ['compiler_generated'] )
		      (%% Line 675
		       Line)
	      in  let <_29> =
		      call %% Line 676
			   'erlang':%% Line 676
				    '+'
			  (%% Line 676
			   Line, %% Line 676
				 1)
		  in  let <_28> =
			  call %% Line 676
			       'lists':%% Line 676
				       'reverse'
			      (%% Line 676
			       Ncs)
		      in  %% Line 676
			  apply 'scan1'/5
			      (Cs, St, _29, Col, [{'white_space',Anno,_28}|Toks])
	  %% Line 677
	  <Cs,St,Line,Col,Toks,Ncs0> when 'true' ->
	      let <Ncs> =
		  call %% Line 678
		       'lists':%% Line 678
			       'reverse'
		      (%% Line 678
		       Ncs0)
	      in  let <Anno> =
		      case %% Line 679
			   <Line,Col,St,Ncs> of
			%% Line 1138
			( <_80,( 'no_col'
				 -| ['compiler_generated'] ),( {( 'erl_scan'
								  -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													    -| ['compiler_generated'] )}
							       -| ['compiler_generated'] ),_X_String> when ( 'true'
													     -| ['compiler_generated'] ) ->
			      %% Line 1157
			      ( call ( 'erl_anno'
				       -| ['compiler_generated'] ):( 'new'
								     -| ['compiler_generated'] )
				    (_80)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1140
			( <_83,( 'no_col'
				 -| ['compiler_generated'] ),( {( 'erl_scan'
								  -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													    -| ['compiler_generated'] )}
							       -| ['compiler_generated'] ),String> when ( 'true'
													  -| ['compiler_generated'] ) ->
			      ( let <Anno> =
				    call %% Line 1157
					 ( 'erl_anno'
					   -| ['compiler_generated'] ):%% Line 1157
								       ( 'new'
									 -| ['compiler_generated'] )
					(_83)
				in  %% Line 1142
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'set_text'
									   -| ['compiler_generated'] )
					  (String, Anno)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1143
			( <_86,_87,( {( 'erl_scan'
					-| ['compiler_generated'] ),_16,_17,_18,( 'false'
										  -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),_X_String> when ( 'true'
										   -| ['compiler_generated'] ) ->
			      ( let <_88> = {_86,_87}
				in  %% Line 1157
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'new'
									   -| ['compiler_generated'] )
					  (_88)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1145
			( <_90,_91,( {( 'erl_scan'
					-| ['compiler_generated'] ),_19,_20,_21,( 'true'
										  -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),String> when ( 'true'
										-| ['compiler_generated'] ) ->
			      ( let <_92> = {_90,_91}
				in  ( let <Anno> =
					  call %% Line 1157
					       ( 'erl_anno'
						 -| ['compiler_generated'] ):%% Line 1157
									     ( 'new'
									       -| ['compiler_generated'] )
					      (_92)
				      in  %% Line 1147
					  ( call ( 'erl_anno'
						   -| ['compiler_generated'] ):( 'set_text'
										 -| ['compiler_generated'] )
						(String, Anno)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_9,_8,_7,_6> when ( 'true'
					       -| ['compiler_generated'] ) ->
			      %% Line 1138
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_9,_8,_7,_6}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  let <Token> = {%% Line 680
			   'white_space',%% Line 680
					 Anno,%% Line 680
					      Ncs}
		      in  let <_35> =
			      call %% Line 681
				   'erlang':%% Line 681
					    '+'
				  (%% Line 681
				   Line, %% Line 681
					 1)
			  in  let <_33> =
				  call %% Line 681
				       'erlang':%% Line 681
						'length'
				      (%% Line 681
				       Ncs)
			      in  let <_34> =
				      case %% Line 681
					   <Col,_33> of
					%% Line 1164
					( <( _96 = ( 'no_col'
						     -| ['compiler_generated'] )
					     -| ['compiler_generated'] ),_X_Ncol> when ( 'true'
											 -| ['compiler_generated'] ) ->
					      _96
					  -| ['compiler_generated'] )
					%% Line 1166
					( <_97,Ncol>
					      when ( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'is_integer'
										       -| ['compiler_generated'] )
						      (_97)
						  -| ['compiler_generated'] ) ->
					      %% Line 1167
					      Ncol
					  -| ['compiler_generated'] )
					( <_98,_99> when ( 'true'
							   -| ['compiler_generated'] ) ->
					      %% Line 1164
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'function_clause'
							  -| ['compiler_generated'] ),_98,_99}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  in  %% Line 681
				      apply 'scan1'/5
					  (Cs, St, _35, _34, [Token|Toks])
	end
'newline_end'/7 =
    %% Line 683
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	case <_0,_1,_2,_3,_4,_5,_6> of
	  <Cs,St = {'erl_scan',_19,_20,_21,'false'},Line,Col = 'no_col',%% Line 684
									Toks,%% Line 684
									     _X_N,%% Line 684
										  Ncs> when 'true' ->
	      let <_8> =
		  call %% Line 685
		       'erlang':%% Line 685
				'+'
		      (%% Line 685
		       Line, %% Line 685
			     1)
	      in  let <_7> =
		      call %% Line 1157
			   ( 'erl_anno'
			     -| ['compiler_generated'] ):%% Line 1157
							 ( 'new'
							   -| ['compiler_generated'] )
			  (%% Line 685
			   Line)
		  in  %% Line 685
		      apply 'scan1'/5
			  (Cs, St, _8, Col, [{'white_space',_7,Ncs}|Toks])
	  %% Line 686
	  <Cs,St,Line,Col,Toks,N,Ncs> when 'true' ->
	      let <Anno> =
		  case %% Line 687
		       <Line,Col,St,Ncs> of
		    %% Line 1138
		    ( <_28,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),_X_String> when ( 'true'
													 -| ['compiler_generated'] ) ->
			  %% Line 1157
			  ( call ( 'erl_anno'
				   -| ['compiler_generated'] ):( 'new'
								 -| ['compiler_generated'] )
				(_28)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1140
		    ( <_31,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),String> when ( 'true'
												      -| ['compiler_generated'] ) ->
			  ( let <Anno> =
				call %% Line 1157
				     ( 'erl_anno'
				       -| ['compiler_generated'] ):%% Line 1157
								   ( 'new'
								     -| ['compiler_generated'] )
				    (_31)
			    in  %% Line 1142
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'set_text'
								       -| ['compiler_generated'] )
				      (String, Anno)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1143
		    ( <_34,_35,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_16,_17,_18,( 'false'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),_X_String> when ( 'true'
									       -| ['compiler_generated'] ) ->
			  ( let <_36> = {_34,_35}
			    in  %% Line 1157
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'new'
								       -| ['compiler_generated'] )
				      (_36)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1145
		    ( <_38,_39,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_19,_20,_21,( 'true'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),String> when ( 'true'
									    -| ['compiler_generated'] ) ->
			  ( let <_40> = {_38,_39}
			    in  ( let <Anno> =
				      call %% Line 1157
					   ( 'erl_anno'
					     -| ['compiler_generated'] ):%% Line 1157
									 ( 'new'
									   -| ['compiler_generated'] )
					  (_40)
				  in  %% Line 1147
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'set_text'
									     -| ['compiler_generated'] )
					    (String, Anno)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_9,_8,_7,_42> when ( 'true'
					    -| ['compiler_generated'] ) ->
			  %% Line 1138
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_9,_8,_7,_42}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  let <_11> =
		      call %% Line 688
			   'erlang':%% Line 688
				    '+'
			  (%% Line 688
			   Line, %% Line 688
				 1)
		  in  let <_10> =
			  case %% Line 688
			       <Col,N> of
			    %% Line 1164
			    ( <( _45 = ( 'no_col'
					 -| ['compiler_generated'] )
				 -| ['compiler_generated'] ),_X_Ncol> when ( 'true'
									     -| ['compiler_generated'] ) ->
				  _45
			      -| ['compiler_generated'] )
			    %% Line 1166
			    ( <_46,Ncol>
				  when ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'is_integer'
									   -| ['compiler_generated'] )
					  (_46)
				      -| ['compiler_generated'] ) ->
				  %% Line 1167
				  Ncol
			      -| ['compiler_generated'] )
			    ( <_47,_48> when ( 'true'
					       -| ['compiler_generated'] ) ->
				  %% Line 1164
				  ( primop ( 'match_fail'
					     -| ['compiler_generated'] )
					(( {( 'function_clause'
					      -| ['compiler_generated'] ),_47,_48}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 688
			  apply 'scan1'/5
			      (Cs, St, _11, _10, [{'white_space',Anno,Ncs}|Toks])
	end
'scan_spcs'/6 =
    %% Line 690
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[32|Cs],St,Line,Col,Toks,N>
	      when call 'erlang':'<'
		    (N,
		     16) ->
	      let <_6> =
		  call %% Line 691
		       'erlang':%% Line 691
				'+'
		      (%% Line 691
		       N, %% Line 691
			  1)
	      in  %% Line 691
		  apply 'scan_spcs'/6
		      (Cs, St, Line, Col, Toks, _6)
	  %% Line 692
	  <Cs = [],_X_St,Line,Col,Toks,N> when 'true' ->
	      let <_7> = 'scan_spcs'/6
	      in  %% Line 693
		  {'more',{Cs,Col,Toks,Line,N,_7}}
	  %% Line 694
	  <Cs,St,Line,Col,Toks,N> when 'true' ->
	      let <_8> =
		  apply %% Line 695
			'spcs'/1
		      (%% Line 695
		       N)
	      in  %% Line 726
		  ( apply 'tok3'/9
			(Cs, St, Line, Col, Toks, ( 'white_space'
						    -| ['compiler_generated'] ), _8, _8, N)
		    -| ['compiler_generated'] )
	end
'scan_tabs'/6 =
    %% Line 697
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[9|Cs],St,Line,Col,Toks,N>
	      when call 'erlang':'<'
		    (N,
		     10) ->
	      let <_6> =
		  call %% Line 698
		       'erlang':%% Line 698
				'+'
		      (%% Line 698
		       N, %% Line 698
			  1)
	      in  %% Line 698
		  apply 'scan_tabs'/6
		      (Cs, St, Line, Col, Toks, _6)
	  %% Line 699
	  <Cs = [],_X_St,Line,Col,Toks,N> when 'true' ->
	      let <_7> = 'scan_tabs'/6
	      in  %% Line 700
		  {'more',{Cs,Col,Toks,Line,N,_7}}
	  %% Line 701
	  <Cs,St,Line,Col,Toks,N> when 'true' ->
	      let <_8> =
		  apply %% Line 702
			'tabs'/1
		      (%% Line 702
		       N)
	      in  %% Line 726
		  ( apply 'tok3'/9
			(Cs, St, Line, Col, Toks, ( 'white_space'
						    -| ['compiler_generated'] ), _8, _8, N)
		    -| ['compiler_generated'] )
	end
'skip_white_space'/6 =
    %% Line 704
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[10|Cs],St,Line,Col,Toks,_X_N> when 'true' ->
	      let <_7> =
		  call %% Line 705
		       'erlang':%% Line 705
				'+'
		      (%% Line 705
		       Line, %% Line 705
			     1)
	      in  let <_6> =
		      case %% Line 705
			   Col of
			%% Line 1164
			( <( _29 = ( 'no_col'
				     -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _29
			  -| ['compiler_generated'] )
			%% Line 1166
			( <_30>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      ( 1
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_31> when ( 'true'
				       -| ['compiler_generated'] ) ->
			      %% Line 1164
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_31,( 1
									    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 705
		      apply 'skip_white_space'/6
			  (Cs, St, _7, _6, Toks, 0)
	  %% Line 706
	  <[C|Cs],St,Line,Col,Toks,N>
	      when try
		    ( let <_17> =
			  case call 'erlang':'is_integer'
				   (C) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_12> =
				      case call 'erlang':'>='
					       (C, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (C, 32)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_10> when 'true' ->
					      _10
					  -| ['compiler_generated'] )
				      end
				  in  ( case _12 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						( case call 'erlang':'>='
							   (C, 128) of
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  call 'erlang':'=<'
							      (C, 160)
						      -| ['compiler_generated'] )
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						    ( <_13> when 'true' ->
							  _13
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_9> when 'true' ->
						_9
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_8> when 'true' ->
				  _8
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _17
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_18> =
		  call %% Line 707
		       'erlang':%% Line 707
				'+'
		      (%% Line 707
		       N, %% Line 707
			  1)
	      in  %% Line 707
		  apply 'skip_white_space'/6
		      (Cs, St, Line, Col, Toks, _18)
	  %% Line 708
	  <Cs = [],_X_St,Line,Col,Toks,N> when 'true' ->
	      let <_19> = 'skip_white_space'/6
	      in  %% Line 709
		  {'more',{Cs,Col,Toks,Line,N,_19}}
	  %% Line 710
	  <Cs,St,Line,Col,Toks,N> when 'true' ->
	      let <_20> =
		  case %% Line 711
		       <Col,N> of
		    %% Line 1159
		    ( <( _35 = ( 'no_col'
				 -| ['compiler_generated'] )
			 -| ['compiler_generated'] ),_X_N> when ( 'true'
								  -| ['compiler_generated'] ) ->
			  _35
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_36,_37>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (_36)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_36, _37)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_38,_39> when ( 'true'
				       -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_38,_39}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 711
		  apply 'scan1'/5
		      (Cs, St, Line, _20, Toks)
	end
'scan_white_space'/6 =
    %% Line 714
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs = [10|_27],St,Line,Col,Toks,Ncs> when 'true' ->
	      let <_7> =
		  call %% Line 715
		       'erlang':%% Line 715
				'length'
		      (%% Line 715
		       Ncs)
	      in  let <_6> =
		      call %% Line 715
			   'lists':%% Line 715
				   'reverse'
			  (%% Line 715
			   Ncs)
		  in  %% Line 726
		      ( apply 'tok3'/9
			    (Cs, St, Line, Col, Toks, ( 'white_space'
							-| ['compiler_generated'] ), _6, _6, _7)
			-| ['compiler_generated'] )
	  %% Line 716
	  <[C|Cs],St,Line,Col,Toks,Ncs>
	      when try
		    ( let <_17> =
			  case call 'erlang':'is_integer'
				   (C) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_12> =
				      case call 'erlang':'>='
					       (C, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (C, 32)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_10> when 'true' ->
					      _10
					  -| ['compiler_generated'] )
				      end
				  in  ( case _12 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						( case call 'erlang':'>='
							   (C, 128) of
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  call 'erlang':'=<'
							      (C, 160)
						      -| ['compiler_generated'] )
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						    ( <_13> when 'true' ->
							  _13
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_9> when 'true' ->
						_9
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_8> when 'true' ->
				  _8
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _17
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 717
	      apply 'scan_white_space'/6
		  (Cs, St, Line, Col, Toks, [C|Ncs])
	  %% Line 718
	  <Cs = [],_X_St,Line,Col,Toks,Ncs> when 'true' ->
	      let <_18> = 'scan_white_space'/6
	      in  %% Line 719
		  {'more',{Cs,Col,Toks,Line,Ncs,_18}}
	  %% Line 720
	  <Cs,St,Line,Col,Toks,Ncs> when 'true' ->
	      let <_20> =
		  call %% Line 721
		       'erlang':%% Line 721
				'length'
		      (%% Line 721
		       Ncs)
	      in  let <_19> =
		      call %% Line 721
			   'lists':%% Line 721
				   'reverse'
			  (%% Line 721
			   Ncs)
		  in  %% Line 726
		      ( apply 'tok3'/9
			    (Cs, St, Line, Col, Toks, ( 'white_space'
							-| ['compiler_generated'] ), _19, _19, _20)
			-| ['compiler_generated'] )
	end
'white_space_end'/7 =
    %% Line 725
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	%% Line 726
	apply 'tok3'/9
	    (_0, _1, _2, _3, _4, 'white_space', _6, _6, _5)
'scan_char'/5 =
    %% Line 728
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <Cs0 = [92|Cs],St,Line,Col,Toks> when 'true' ->
	      let <_5> =
		  case %% Line 729
		       Col of
		    %% Line 1159
		    ( <( _73 = ( 'no_col'
				 -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _73
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_74>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_74, ( 2
					-| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_75> when ( 'true'
				   -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_75,( 2
									-| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 729
		  case apply 'scan_escape'/2
			   (Cs, _5) of
		    %% Line 730
		    <'more'> when 'true' ->
			let <_6> = 'scan'/6
			in  %% Line 731
			    {'more',{[36|Cs0],Col,Toks,Line,[],_6}}
		    %% Line 732
		    <{'error',Ncs,Error,Ncol}> when 'true' ->
			%% Line 733
			apply 'scan_error'/6
			    (Error, Line, Col, Line, Ncol, Ncs)
		    %% Line 734
		    <{'eof',Ncol}> when 'true' ->
			%% Line 735
			apply 'scan_error'/6
			    ('char', Line, Col, Line, Ncol, 'eof')
		    %% Line 736
		    <{'nl',Val,Str,Ncs,Ncol}> when 'true' ->
			let <_13> =
			    case <> of
			      %% Line 737
			      <>
				  when ( try
					  ( let <_9> =
						case ( call ( 'erlang'
							      -| ['compiler_generated'] ):( 'is_record'
											    -| ['compiler_generated'] )
							   (St, ( 'erl_scan'
								  -| ['compiler_generated'] ), ( 5
												 -| ['compiler_generated'] ))
						       -| ['compiler_generated'] ) of
						  ( <( 'true'
						       -| ['compiler_generated'] )> when 'true' ->
							( 'true'
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						  ( <( 'false'
						       -| ['compiler_generated'] )> when 'true' ->
							( 'fail'
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						  ( <( _7
						       -| ['compiler_generated'] )> when 'true' ->
							( _7
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
					    in  let <_10> =
						    call 'erlang':'=:='
							(( _9
							   -| ['compiler_generated'] ), 'true')
						in  let <_11> =
							call 'erlang':'element'
							    (5, St)
						    in  let <_12> =
							    call 'erlang':'=:='
								(_11, 'true')
							in  ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'and'
												   -| ['compiler_generated'] )
								  (_10, _12)
							      -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
				      of <Try> ->
					  Try
				      catch <T,R> ->
					  'false'
				      -| ['compiler_generated'] ) ->
				  [36|[92|Str]]
			      %% Line 737
			      <> when 'true' ->
				  []
			    end
			in  let <Anno> =
				case %% Line 737
				     <Line,Col,St,_13> of
				  %% Line 1138
				  ( <_81,( 'no_col'
					   -| ['compiler_generated'] ),( {( 'erl_scan'
									    -| ['compiler_generated'] ),_10,_11,_12,( 'false'
														      -| ['compiler_generated'] )}
									 -| ['compiler_generated'] ),_X_String> when ( 'true'
														       -| ['compiler_generated'] ) ->
					%% Line 1157
					( call ( 'erl_anno'
						 -| ['compiler_generated'] ):( 'new'
									       -| ['compiler_generated'] )
					      (_81)
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  %% Line 1140
				  ( <_84,( 'no_col'
					   -| ['compiler_generated'] ),( {( 'erl_scan'
									    -| ['compiler_generated'] ),_85,_14,_15,( 'true'
														      -| ['compiler_generated'] )}
									 -| ['compiler_generated'] ),String> when ( 'true'
														    -| ['compiler_generated'] ) ->
					( let <Anno> =
					      call %% Line 1157
						   ( 'erl_anno'
						     -| ['compiler_generated'] ):%% Line 1157
										 ( 'new'
										   -| ['compiler_generated'] )
						  (_84)
					  in  %% Line 1142
					      ( call ( 'erl_anno'
						       -| ['compiler_generated'] ):( 'set_text'
										     -| ['compiler_generated'] )
						    (String, Anno)
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  %% Line 1143
				  ( <_88,_89,( {( 'erl_scan'
						  -| ['compiler_generated'] ),_16,_17,_18,( 'false'
											    -| ['compiler_generated'] )}
					       -| ['compiler_generated'] ),_X_String> when ( 'true'
											     -| ['compiler_generated'] ) ->
					( let <_90> = {_88,_89}
					  in  %% Line 1157
					      ( call ( 'erl_anno'
						       -| ['compiler_generated'] ):( 'new'
										     -| ['compiler_generated'] )
						    (_90)
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  %% Line 1145
				  ( <_92,_93,( {( 'erl_scan'
						  -| ['compiler_generated'] ),_19,_20,_21,( 'true'
											    -| ['compiler_generated'] )}
					       -| ['compiler_generated'] ),String> when ( 'true'
											  -| ['compiler_generated'] ) ->
					( let <_94> = {_92,_93}
					  in  ( let <Anno> =
						    call %% Line 1157
							 ( 'erl_anno'
							   -| ['compiler_generated'] ):%% Line 1157
										       ( 'new'
											 -| ['compiler_generated'] )
							(_94)
						in  %% Line 1147
						    ( call ( 'erl_anno'
							     -| ['compiler_generated'] ):( 'set_text'
											   -| ['compiler_generated'] )
							  (String, Anno)
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_9,_8,_7,_6> when ( 'true'
							 -| ['compiler_generated'] ) ->
					%% Line 1138
					( primop ( 'match_fail'
						   -| ['compiler_generated'] )
					      (( {( 'function_clause'
						    -| ['compiler_generated'] ),_9,_8,_7,_6}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    in  let <Ntoks> =
				    [%% Line 738
				     {'char',Anno,Val}|%% Line 738
						       Toks]
				in  let <_16> =
					call %% Line 739
					     'erlang':%% Line 739
						      '+'
					    (%% Line 739
					     Line, %% Line 739
						   1)
				    in  %% Line 739
					apply 'scan1'/5
					    (Ncs, St, _16, Ncol, Ntoks)
		    %% Line 740
		    <{Val,Str,Ncs,Ncol}> when 'true' ->
			let <_23> =
			    case <> of
			      %% Line 741
			      <>
				  when ( try
					  ( let <_19> =
						case ( call ( 'erlang'
							      -| ['compiler_generated'] ):( 'is_record'
											    -| ['compiler_generated'] )
							   (St, ( 'erl_scan'
								  -| ['compiler_generated'] ), ( 5
												 -| ['compiler_generated'] ))
						       -| ['compiler_generated'] ) of
						  ( <( 'true'
						       -| ['compiler_generated'] )> when 'true' ->
							( 'true'
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						  ( <( 'false'
						       -| ['compiler_generated'] )> when 'true' ->
							( 'fail'
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						  ( <( _17
						       -| ['compiler_generated'] )> when 'true' ->
							( _17
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
					    in  let <_20> =
						    call 'erlang':'=:='
							(( _19
							   -| ['compiler_generated'] ), 'true')
						in  let <_21> =
							call 'erlang':'element'
							    (5, St)
						    in  let <_22> =
							    call 'erlang':'=:='
								(_21, 'true')
							in  ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'and'
												   -| ['compiler_generated'] )
								  (_20, _22)
							      -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
				      of <Try> ->
					  Try
				      catch <T,R> ->
					  'false'
				      -| ['compiler_generated'] ) ->
				  [36|[92|Str]]
			      %% Line 741
			      <> when 'true' ->
				  []
			    end
			in  let <Anno> =
				case %% Line 741
				     <Line,Col,St,_23> of
				  %% Line 1138
				  ( <_100,( 'no_col'
					    -| ['compiler_generated'] ),( {( 'erl_scan'
									     -| ['compiler_generated'] ),_10,_11,_12,( 'false'
														       -| ['compiler_generated'] )}
									  -| ['compiler_generated'] ),_X_String> when ( 'true'
															-| ['compiler_generated'] ) ->
					%% Line 1157
					( call ( 'erl_anno'
						 -| ['compiler_generated'] ):( 'new'
									       -| ['compiler_generated'] )
					      (_100)
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  %% Line 1140
				  ( <_103,( 'no_col'
					    -| ['compiler_generated'] ),( {( 'erl_scan'
									     -| ['compiler_generated'] ),_13,_14,_15,( 'true'
														       -| ['compiler_generated'] )}
									  -| ['compiler_generated'] ),String> when ( 'true'
														     -| ['compiler_generated'] ) ->
					( let <Anno> =
					      call %% Line 1157
						   ( 'erl_anno'
						     -| ['compiler_generated'] ):%% Line 1157
										 ( 'new'
										   -| ['compiler_generated'] )
						  (_103)
					  in  %% Line 1142
					      ( call ( 'erl_anno'
						       -| ['compiler_generated'] ):( 'set_text'
										     -| ['compiler_generated'] )
						    (String, Anno)
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  %% Line 1143
				  ( <_106,_107,( {( 'erl_scan'
						    -| ['compiler_generated'] ),_16,_17,_18,( 'false'
											      -| ['compiler_generated'] )}
						 -| ['compiler_generated'] ),_X_String> when ( 'true'
											       -| ['compiler_generated'] ) ->
					( let <_108> = {_106,_107}
					  in  %% Line 1157
					      ( call ( 'erl_anno'
						       -| ['compiler_generated'] ):( 'new'
										     -| ['compiler_generated'] )
						    (_108)
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  %% Line 1145
				  ( <_110,_111,( {( 'erl_scan'
						    -| ['compiler_generated'] ),_19,_20,_21,( 'true'
											      -| ['compiler_generated'] )}
						 -| ['compiler_generated'] ),String> when ( 'true'
											    -| ['compiler_generated'] ) ->
					( let <_112> = {_110,_111}
					  in  ( let <Anno> =
						    call %% Line 1157
							 ( 'erl_anno'
							   -| ['compiler_generated'] ):%% Line 1157
										       ( 'new'
											 -| ['compiler_generated'] )
							(_112)
						in  %% Line 1147
						    ( call ( 'erl_anno'
							     -| ['compiler_generated'] ):( 'set_text'
											   -| ['compiler_generated'] )
							  (String, Anno)
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_9,_8,_7,_6> when ( 'true'
							 -| ['compiler_generated'] ) ->
					%% Line 1138
					( primop ( 'match_fail'
						   -| ['compiler_generated'] )
					      (( {( 'function_clause'
						    -| ['compiler_generated'] ),_9,_8,_7,_6}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    in  let <Ntoks> =
				    [%% Line 742
				     {'char',Anno,Val}|%% Line 742
						       Toks]
				in  %% Line 743
				    apply 'scan1'/5
					(Ncs, St, Line, Ncol, Ntoks)
		    ( <_26> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_26})
		      -| ['compiler_generated'] )
		  end
	  %% Line 745
	  <[C = 10|Cs],St,Line,Col,Toks> when 'true' ->
	      let <_33> =
		  case <> of
		    %% Line 746
		    <>
			when ( try
				( let <_29> =
				      case ( call ( 'erlang'
						    -| ['compiler_generated'] ):( 'is_record'
										  -| ['compiler_generated'] )
						 (St, ( 'erl_scan'
							-| ['compiler_generated'] ), ( 5
										       -| ['compiler_generated'] ))
					     -| ['compiler_generated'] ) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      ( 'true'
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      ( 'fail'
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( _27
					     -| ['compiler_generated'] )> when 'true' ->
					      ( _27
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  in  let <_30> =
					  call 'erlang':'=:='
					      (( _29
						 -| ['compiler_generated'] ), 'true')
				      in  let <_31> =
					      call 'erlang':'element'
						  (5, St)
					  in  let <_32> =
						  call 'erlang':'=:='
						      (_31, 'true')
					      in  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'and'
											 -| ['compiler_generated'] )
							(_30, _32)
						    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			    -| ['compiler_generated'] ) ->
			[36|[C|[]]]
		    %% Line 746
		    <> when 'true' ->
			[]
		  end
	      in  let <Anno> =
		      case %% Line 746
			   <Line,Col,St,_33> of
			%% Line 1138
			( <_118,( 'no_col'
				  -| ['compiler_generated'] ),( {( 'erl_scan'
								   -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													     -| ['compiler_generated'] )}
								-| ['compiler_generated'] ),_X_String> when ( 'true'
													      -| ['compiler_generated'] ) ->
			      %% Line 1157
			      ( call ( 'erl_anno'
				       -| ['compiler_generated'] ):( 'new'
								     -| ['compiler_generated'] )
				    (_118)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1140
			( <_121,( 'no_col'
				  -| ['compiler_generated'] ),( {( 'erl_scan'
								   -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													     -| ['compiler_generated'] )}
								-| ['compiler_generated'] ),String> when ( 'true'
													   -| ['compiler_generated'] ) ->
			      ( let <Anno> =
				    call %% Line 1157
					 ( 'erl_anno'
					   -| ['compiler_generated'] ):%% Line 1157
								       ( 'new'
									 -| ['compiler_generated'] )
					(_121)
				in  %% Line 1142
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'set_text'
									   -| ['compiler_generated'] )
					  (String, Anno)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1143
			( <_124,_125,( {( 'erl_scan'
					  -| ['compiler_generated'] ),_16,_17,_18,( 'false'
										    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ),_X_String> when ( 'true'
										     -| ['compiler_generated'] ) ->
			      ( let <_126> = {_124,_125}
				in  %% Line 1157
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'new'
									   -| ['compiler_generated'] )
					  (_126)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1145
			( <_128,_129,( {( 'erl_scan'
					  -| ['compiler_generated'] ),_19,_20,_21,( 'true'
										    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ),String> when ( 'true'
										  -| ['compiler_generated'] ) ->
			      ( let <_130> = {_128,_129}
				in  ( let <Anno> =
					  call %% Line 1157
					       ( 'erl_anno'
						 -| ['compiler_generated'] ):%% Line 1157
									     ( 'new'
									       -| ['compiler_generated'] )
					      (_130)
				      in  %% Line 1147
					  ( call ( 'erl_anno'
						   -| ['compiler_generated'] ):( 'set_text'
										 -| ['compiler_generated'] )
						(String, Anno)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_9,_8,_7,_6> when ( 'true'
					       -| ['compiler_generated'] ) ->
			      %% Line 1138
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_9,_8,_7,_6}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  let <_36> =
			  call %% Line 747
			       'erlang':%% Line 747
					'+'
			      (%% Line 747
			       Line, %% Line 747
				     1)
		      in  let <_35> =
			      case %% Line 747
				   Col of
				%% Line 1164
				( <( _134 = ( 'no_col'
					      -| ['compiler_generated'] )
				     -| ['compiler_generated'] )> when ( 'true'
									 -| ['compiler_generated'] ) ->
				      _134
				  -| ['compiler_generated'] )
				%% Line 1166
				( <_135>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_integer'
									       -| ['compiler_generated'] )
					      (Col)
					  -| ['compiler_generated'] ) ->
				      ( 1
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_136> when ( 'true'
						-| ['compiler_generated'] ) ->
				      %% Line 1164
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),_136,( 1
										     -| ['compiler_generated'] )}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 747
			      apply 'scan1'/5
				  (Cs, St, _36, _35, [{'char',Anno,C}|Toks])
	  %% Line 748
	  <[C|Cs],St,Line,Col,Toks>
	      when try
		    ( let <_51> =
			  case call 'erlang':'is_integer'
				   (C) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_41> =
				      case call 'erlang':'>='
					       (C, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'<'
						  (C, 55296)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_39> when 'true' ->
					      _39
					  -| ['compiler_generated'] )
				      end
				  in  ( case _41 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						let <_45> =
						    case call 'erlang':'>'
							     (C, 57343) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    call 'erlang':'<'
								(C, 65534)
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_43> when 'true' ->
							    _43
							-| ['compiler_generated'] )
						    end
						in  ( case _45 of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      'true'
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      ( case call 'erlang':'>'
									 (C, 65535) of
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									call 'erlang':'=<'
									    (C, 1114111)
								    -| ['compiler_generated'] )
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									'false'
								    -| ['compiler_generated'] )
								  ( <_46> when 'true' ->
									_46
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
							( <_42> when 'true' ->
							      _42
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_38> when 'true' ->
						_38
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_37> when 'true' ->
				  _37
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _51
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_58> =
		  case <> of
		    %% Line 749
		    <>
			when ( try
				( let <_54> =
				      case ( call ( 'erlang'
						    -| ['compiler_generated'] ):( 'is_record'
										  -| ['compiler_generated'] )
						 (St, ( 'erl_scan'
							-| ['compiler_generated'] ), ( 5
										       -| ['compiler_generated'] ))
					     -| ['compiler_generated'] ) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      ( 'true'
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      ( 'fail'
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( _52
					     -| ['compiler_generated'] )> when 'true' ->
					      ( _52
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  in  let <_55> =
					  call 'erlang':'=:='
					      (( _54
						 -| ['compiler_generated'] ), 'true')
				      in  let <_56> =
					      call 'erlang':'element'
						  (5, St)
					  in  let <_57> =
						  call 'erlang':'=:='
						      (_56, 'true')
					      in  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'and'
											 -| ['compiler_generated'] )
							(_55, _57)
						    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			    -| ['compiler_generated'] ) ->
			[36|[C|[]]]
		    %% Line 749
		    <> when 'true' ->
			[]
		  end
	      in  let <Anno> =
		      case %% Line 749
			   <Line,Col,St,_58> of
			%% Line 1138
			( <_142,( 'no_col'
				  -| ['compiler_generated'] ),( {( 'erl_scan'
								   -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													     -| ['compiler_generated'] )}
								-| ['compiler_generated'] ),_X_String> when ( 'true'
													      -| ['compiler_generated'] ) ->
			      %% Line 1157
			      ( call ( 'erl_anno'
				       -| ['compiler_generated'] ):( 'new'
								     -| ['compiler_generated'] )
				    (_142)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1140
			( <_145,( 'no_col'
				  -| ['compiler_generated'] ),( {( 'erl_scan'
								   -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													     -| ['compiler_generated'] )}
								-| ['compiler_generated'] ),String> when ( 'true'
													   -| ['compiler_generated'] ) ->
			      ( let <Anno> =
				    call %% Line 1157
					 ( 'erl_anno'
					   -| ['compiler_generated'] ):%% Line 1157
								       ( 'new'
									 -| ['compiler_generated'] )
					(_145)
				in  %% Line 1142
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'set_text'
									   -| ['compiler_generated'] )
					  (String, Anno)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1143
			( <_148,_149,( {( 'erl_scan'
					  -| ['compiler_generated'] ),_16,_17,_18,( 'false'
										    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ),_X_String> when ( 'true'
										     -| ['compiler_generated'] ) ->
			      ( let <_150> = {_148,_149}
				in  %% Line 1157
				    ( call ( 'erl_anno'
					     -| ['compiler_generated'] ):( 'new'
									   -| ['compiler_generated'] )
					  (_150)
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1145
			( <_152,_153,( {( 'erl_scan'
					  -| ['compiler_generated'] ),_19,_20,_21,( 'true'
										    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ),String> when ( 'true'
										  -| ['compiler_generated'] ) ->
			      ( let <_154> = {_152,_153}
				in  ( let <Anno> =
					  call %% Line 1157
					       ( 'erl_anno'
						 -| ['compiler_generated'] ):%% Line 1157
									     ( 'new'
									       -| ['compiler_generated'] )
					      (_154)
				      in  %% Line 1147
					  ( call ( 'erl_anno'
						   -| ['compiler_generated'] ):( 'set_text'
										 -| ['compiler_generated'] )
						(String, Anno)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_9,_8,_7,_6> when ( 'true'
					       -| ['compiler_generated'] ) ->
			      %% Line 1138
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_9,_8,_7,_6}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  let <_60> =
			  case %% Line 750
			       Col of
			    %% Line 1159
			    ( <( _158 = ( 'no_col'
					  -| ['compiler_generated'] )
				 -| ['compiler_generated'] )> when ( 'true'
								     -| ['compiler_generated'] ) ->
				  _158
			      -| ['compiler_generated'] )
			    %% Line 1161
			    ( <_159>
				  when ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'is_integer'
									   -| ['compiler_generated'] )
					  (Col)
				      -| ['compiler_generated'] ) ->
				  %% Line 1162
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( '+'
									 -| ['compiler_generated'] )
					(_159, ( 2
						 -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_160> when ( 'true'
					    -| ['compiler_generated'] ) ->
				  %% Line 1159
				  ( primop ( 'match_fail'
					     -| ['compiler_generated'] )
					(( {( 'function_clause'
					      -| ['compiler_generated'] ),_160,( 2
										 -| ['compiler_generated'] )}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 750
			  apply 'scan1'/5
			      (Cs, St, Line, _60, [{'char',Anno,C}|Toks])
	  %% Line 751
	  <[C|_X_Cs],_X_St,Line,Col,_X_Toks>
	      when let <_61> =
		    call 'erlang':'is_integer'
			(C)
		in  let <_62> =
			call 'erlang':'>='
			    (C, 0)
		    in  call 'erlang':'and'
			    (_61, _62) ->
	      let <_63> =
		  case %% Line 752
		       Col of
		    %% Line 1159
		    ( <( _164 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _164
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_165>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_165, ( 1
					 -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_166> when ( 'true'
				    -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_166,( 1
									 -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 752
		  apply 'scan_error'/6
		      ({'illegal','character'}, Line, Col, Line, _63, 'eof')
	  %% Line 753
	  <[],_X_St,Line,Col,Toks> when 'true' ->
	      let <_64> = 'scan'/6
	      in  %% Line 754
		  {'more',{[36],Col,Toks,Line,[],_64}}
	  %% Line 755
	  <'eof',_X_St,Line,Col,_X_Toks> when 'true' ->
	      let <_65> =
		  case %% Line 756
		       Col of
		    %% Line 1159
		    ( <( _170 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _170
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_171>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_171, ( 1
					 -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_172> when ( 'true'
				    -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_172,( 1
									 -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 756
		  apply 'scan_error'/6
		      ('char', Line, Col, Line, _65, 'eof')
	  ( <_70,_69,_68,_67,_66> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_70,_69,_68,_67,_66})
		  -| [{'function_name',{'scan_char',5}}] )
	    -| ['compiler_generated'] )
	end
'scan_string'/6 =
    %% Line 758
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs,St,Line,Col,Toks,{Wcs,Str,Line0,Col0}> when 'true' ->
	      %% Line 759
	      case apply 'scan_string0'/7
		       (Cs, St, Line, Col, 34, Str, Wcs) of
		%% Line 760
		<{'more',Ncs,Nline,Ncol,Nstr,Nwcs}> when 'true' ->
		    let <State> =
			{%% Line 761
			 Nwcs,%% Line 761
			      Nstr,%% Line 761
				   Line0,%% Line 761
					 Col0}
		    in  let <_7> = 'scan_string'/6
			in  %% Line 762
			    {'more',{Ncs,Ncol,Toks,Nline,State,_7}}
		%% Line 763
		<{'char_error',Ncs,Error,Nline,Ncol,EndCol}> when 'true' ->
		    %% Line 764
		    apply 'scan_error'/6
			(Error, Nline, Ncol, Nline, EndCol, Ncs)
		%% Line 765
		<{'error',Nline,Ncol,Nwcs,Ncs}> when 'true' ->
		    let <Estr> =
			call %% Line 766
			     'string':%% Line 766
				      'slice'
			    (%% Line 766
			     Nwcs, %% Line 766
				   0, %% Line 766
				      16)
		    in  %% Line 767
			apply 'scan_error'/6
			    ({'string',34,Estr}, Line0, Col0, Nline, Ncol, Ncs)
		%% Line 768
		<{Ncs,Nline,Ncol,Nstr,Nwcs}> when 'true' ->
		    let <Anno> =
			case %% Line 769
			     <Line0,Col0,St,Nstr> of
			  %% Line 1138
			  ( <_26,( 'no_col'
				   -| ['compiler_generated'] ),( {( 'erl_scan'
								    -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													      -| ['compiler_generated'] )}
								 -| ['compiler_generated'] ),_X_String> when ( 'true'
													       -| ['compiler_generated'] ) ->
				%% Line 1157
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'new'
								       -| ['compiler_generated'] )
				      (_26)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1140
			  ( <_29,( 'no_col'
				   -| ['compiler_generated'] ),( {( 'erl_scan'
								    -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													      -| ['compiler_generated'] )}
								 -| ['compiler_generated'] ),String> when ( 'true'
													    -| ['compiler_generated'] ) ->
				( let <Anno> =
				      call %% Line 1157
					   ( 'erl_anno'
					     -| ['compiler_generated'] ):%% Line 1157
									 ( 'new'
									   -| ['compiler_generated'] )
					  (_29)
				  in  %% Line 1142
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'set_text'
									     -| ['compiler_generated'] )
					    (String, Anno)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1143
			  ( <_32,_33,( {( 'erl_scan'
					  -| ['compiler_generated'] ),_16,_17,_18,( 'false'
										    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ),_X_String> when ( 'true'
										     -| ['compiler_generated'] ) ->
				( let <_34> = {_32,_33}
				  in  %% Line 1157
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'new'
									     -| ['compiler_generated'] )
					    (_34)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1145
			  ( <_36,_37,( {( 'erl_scan'
					  -| ['compiler_generated'] ),_19,_20,_21,( 'true'
										    -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ),String> when ( 'true'
										  -| ['compiler_generated'] ) ->
				( let <_38> = {_36,_37}
				  in  ( let <Anno> =
					    call %% Line 1157
						 ( 'erl_anno'
						   -| ['compiler_generated'] ):%% Line 1157
									       ( 'new'
										 -| ['compiler_generated'] )
						(_38)
					in  %% Line 1147
					    ( call ( 'erl_anno'
						     -| ['compiler_generated'] ):( 'set_text'
										   -| ['compiler_generated'] )
						  (String, Anno)
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_9,_8,_7,_6> when ( 'true'
						 -| ['compiler_generated'] ) ->
				%% Line 1138
				( primop ( 'match_fail'
					   -| ['compiler_generated'] )
				      (( {( 'function_clause'
					    -| ['compiler_generated'] ),_9,_8,_7,_6}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		    in  %% Line 770
			apply 'scan1'/5
			    (Ncs, St, Nline, Ncol, [{'string',Anno,Nwcs}|Toks])
		( <_10> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_10})
		  -| ['compiler_generated'] )
	      end
	  ( <_16,_15,_14,_13,_12,_11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_16,_15,_14,_13,_12,_11})
		  -| [{'function_name',{'scan_string',6}}] )
	    -| ['compiler_generated'] )
	end
'scan_qatom'/6 =
    %% Line 773
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs,St,Line,Col,Toks,{Wcs,Str,Line0,Col0}> when 'true' ->
	      %% Line 774
	      case apply 'scan_string0'/7
		       (Cs, St, Line, Col, 39, Str, Wcs) of
		%% Line 775
		<{'more',Ncs,Nline,Ncol,Nstr,Nwcs}> when 'true' ->
		    let <State> =
			{%% Line 776
			 Nwcs,%% Line 776
			      Nstr,%% Line 776
				   Line0,%% Line 776
					 Col0}
		    in  let <_7> = 'scan_qatom'/6
			in  %% Line 777
			    {'more',{Ncs,Ncol,Toks,Nline,State,_7}}
		%% Line 778
		<{'char_error',Ncs,Error,Nline,Ncol,EndCol}> when 'true' ->
		    %% Line 779
		    apply 'scan_error'/6
			(Error, Nline, Ncol, Nline, EndCol, Ncs)
		%% Line 780
		<{'error',Nline,Ncol,Nwcs,Ncs}> when 'true' ->
		    let <Estr> =
			call %% Line 781
			     'string':%% Line 781
				      'slice'
			    (%% Line 781
			     Nwcs, %% Line 781
				   0, %% Line 781
				      16)
		    in  %% Line 782
			apply 'scan_error'/6
			    ({'string',39,Estr}, Line0, Col0, Nline, Ncol, Ncs)
		%% Line 783
		<{Ncs,Nline,Ncol,Nstr,Nwcs}> when 'true' ->
		    let <_9> =
			catch
			    %% Line 784
			    call 'erlang':'list_to_atom'
				(Nwcs)
		    in  %% Line 784
			case _9 of
			  %% Line 785
			  <A>
			      when call 'erlang':'is_atom'
				    (_9) ->
			      let <Anno> =
				  case %% Line 786
				       <Line0,Col0,St,Nstr> of
				    %% Line 1138
				    ( <_26,( 'no_col'
					     -| ['compiler_generated'] ),( {( 'erl_scan'
									      -| ['compiler_generated'] ),_10,_11,_12,( 'false'
															-| ['compiler_generated'] )}
									   -| ['compiler_generated'] ),_X_String> when ( 'true'
															 -| ['compiler_generated'] ) ->
					  %% Line 1157
					  ( call ( 'erl_anno'
						   -| ['compiler_generated'] ):( 'new'
										 -| ['compiler_generated'] )
						(_26)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    %% Line 1140
				    ( <_29,( 'no_col'
					     -| ['compiler_generated'] ),( {( 'erl_scan'
									      -| ['compiler_generated'] ),_13,_14,_15,( 'true'
															-| ['compiler_generated'] )}
									   -| ['compiler_generated'] ),String> when ( 'true'
														      -| ['compiler_generated'] ) ->
					  ( let <Anno> =
						call %% Line 1157
						     ( 'erl_anno'
						       -| ['compiler_generated'] ):%% Line 1157
										   ( 'new'
										     -| ['compiler_generated'] )
						    (_29)
					    in  %% Line 1142
						( call ( 'erl_anno'
							 -| ['compiler_generated'] ):( 'set_text'
										       -| ['compiler_generated'] )
						      (String, Anno)
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    %% Line 1143
				    ( <_32,_33,( {( 'erl_scan'
						    -| ['compiler_generated'] ),_16,_17,_18,( 'false'
											      -| ['compiler_generated'] )}
						 -| ['compiler_generated'] ),_X_String> when ( 'true'
											       -| ['compiler_generated'] ) ->
					  ( let <_34> = {_32,_33}
					    in  %% Line 1157
						( call ( 'erl_anno'
							 -| ['compiler_generated'] ):( 'new'
										       -| ['compiler_generated'] )
						      (_34)
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    %% Line 1145
				    ( <_36,_37,( {( 'erl_scan'
						    -| ['compiler_generated'] ),_19,_20,_21,( 'true'
											      -| ['compiler_generated'] )}
						 -| ['compiler_generated'] ),String> when ( 'true'
											    -| ['compiler_generated'] ) ->
					  ( let <_38> = {_36,_37}
					    in  ( let <Anno> =
						      call %% Line 1157
							   ( 'erl_anno'
							     -| ['compiler_generated'] ):%% Line 1157
											 ( 'new'
											   -| ['compiler_generated'] )
							  (_38)
						  in  %% Line 1147
						      ( call ( 'erl_anno'
							       -| ['compiler_generated'] ):( 'set_text'
											     -| ['compiler_generated'] )
							    (String, Anno)
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <_40,_8,_7,_6> when ( 'true'
							    -| ['compiler_generated'] ) ->
					  %% Line 1138
					  ( primop ( 'match_fail'
						     -| ['compiler_generated'] )
						(( {( 'function_clause'
						      -| ['compiler_generated'] ),_40,_8,_7,_6}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
			      in  %% Line 787
				  apply 'scan1'/5
				      (Ncs, St, Nline, Ncol, [{'atom',Anno,A}|Toks])
			  %% Line 788
			  <_19> when 'true' ->
			      %% Line 789
			      apply 'scan_error'/6
				  ({'illegal','atom'}, Line0, Col0, Nline, Ncol, Ncs)
			end
		( <_12> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_12})
		  -| ['compiler_generated'] )
	      end
	  ( <_18,_17,_16,_15,_14,_13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_18,_17,_16,_15,_14,_13})
		  -| [{'function_name',{'scan_qatom',6}}] )
	    -| ['compiler_generated'] )
	end
'scan_string0'/7 =
    %% Line 793
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	case <_0,_1,_2,_3,_4,_5,_6> of
	  <Cs,{'erl_scan',_14,_15,_16,'false'},Line,Col = 'no_col',Q,[],Wcs> when 'true' ->
	      %% Line 794
	      apply 'scan_string_no_col'/5
		  (Cs, Line, Col, Q, Wcs)
	  %% Line 795
	  <Cs,{'erl_scan',_17,_18,_19,'true'},Line,Col = 'no_col',Q,Str,Wcs> when 'true' ->
	      %% Line 796
	      apply 'scan_string1'/6
		  (Cs, Line, Col, Q, Str, Wcs)
	  %% Line 797
	  <Cs,St,Line,Col,Q,[],Wcs> when 'true' ->
	      %% Line 798
	      apply 'scan_string_col'/6
		  (Cs, St, Line, Col, Q, Wcs)
	  %% Line 799
	  <Cs,_X_St,Line,Col,Q,Str,Wcs> when 'true' ->
	      %% Line 800
	      apply 'scan_string1'/6
		  (Cs, Line, Col, Q, Str, Wcs)
	end
'scan_string_no_col'/5 =
    %% Line 803
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <[Q|Cs],Line,Col,_31,Wcs>
	      when call 'erlang':'=:='
		    (_31,
		     Q) ->
	      let <_5> =
		  call %% Line 804
		       'lists':%% Line 804
			       'reverse'
		      (%% Line 804
		       Wcs)
	      in  %% Line 804
		  {Cs,Line,Col,( []
				 -| ['compiler_generated'] ),_5}
	  %% Line 805
	  <[C = 10|Cs],Line,Col,Q,Wcs> when 'true' ->
	      let <_8> =
		  call %% Line 806
		       'erlang':%% Line 806
				'+'
		      (%% Line 806
		       Line, %% Line 806
			     1)
	      in  %% Line 806
		  apply 'scan_string_no_col'/5
		      (Cs, _8, Col, Q, [C|Wcs])
	  %% Line 807
	  <[C|Cs],Line,Col,Q,Wcs>
	      when try
		    let <_9> =
			call 'erlang':'=/='
			    (C, 92)
		    in  ( let <_24> =
			      case call 'erlang':'is_integer'
				       (C) of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_14> =
					  case call 'erlang':'>='
						   (C, 0) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'<'
						      (C, 55296)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_12> when 'true' ->
						  _12
					      -| ['compiler_generated'] )
					  end
				      in  ( case _14 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_18> =
							case call 'erlang':'>'
								 (C, 57343) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erlang':'<'
								    (C, 65534)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_16> when 'true' ->
								_16
							    -| ['compiler_generated'] )
							end
						    in  ( case _18 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  ( case call 'erlang':'>'
									     (C, 65535) of
								      ( <( 'true'
									   -| ['compiler_generated'] )> when 'true' ->
									    call 'erlang':'=<'
										(C, 1114111)
									-| ['compiler_generated'] )
								      ( <( 'false'
									   -| ['compiler_generated'] )> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								      ( <_19> when 'true' ->
									    _19
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_15> when 'true' ->
								  _15
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_11> when 'true' ->
						    _11
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
				( <_10> when 'true' ->
				      _10
				  -| ['compiler_generated'] )
			      end
			  in  let <_25> =
				  call 'erlang':'=:='
				      (( _24
					 -| ['compiler_generated'] ), 'true')
			      in  call 'erlang':'and'
				      (_9, _25)
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 808
	      apply 'scan_string_no_col'/5
		  (Cs, Line, Col, Q, [C|Wcs])
	  %% Line 809
	  <Cs,Line,Col,Q,Wcs> when 'true' ->
	      %% Line 810
	      apply 'scan_string1'/6
		  (Cs, Line, Col, Q, Wcs, Wcs)
	end
'scan_string_col'/6 =
    %% Line 813
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[Q|Cs],St,Line,Col,_42,Wcs0>
	      when call 'erlang':'=:='
		    (_42,
		     Q) ->
	      let <Wcs> =
		  call %% Line 814
		       'lists':%% Line 814
			       'reverse'
		      (%% Line 814
		       Wcs0)
	      in  let <_14> =
		      case <> of
			%% Line 815
			<>
			    when ( try
				    ( let <_9> =
					  case ( call ( 'erlang'
							-| ['compiler_generated'] ):( 'is_record'
										      -| ['compiler_generated'] )
						     (St, ( 'erl_scan'
							    -| ['compiler_generated'] ), ( 5
											   -| ['compiler_generated'] ))
						 -| ['compiler_generated'] ) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  ( 'true'
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  ( 'fail'
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					    ( <( _7
						 -| ['compiler_generated'] )> when 'true' ->
						  ( _7
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
				      in  let <_10> =
					      call 'erlang':'=:='
						  (( _9
						     -| ['compiler_generated'] ), 'true')
					  in  let <_11> =
						  call 'erlang':'element'
						      (5, St)
					      in  let <_12> =
						      call 'erlang':'=:='
							  (_11, 'true')
						  in  ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'and'
											     -| ['compiler_generated'] )
							    (_10, _12)
							-| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				of <Try> ->
				    Try
				catch <T,R> ->
				    'false'
				-| ['compiler_generated'] ) ->
			    let <_13> =
				call 'erlang':'++'
				    (Wcs, [Q|[]])
			    in  [Q|_13]
			%% Line 815
			<> when 'true' ->
			    []
		      end
		  in  let <_16> =
			  call %% Line 816
			       'erlang':%% Line 816
					'+'
			      (%% Line 816
			       Col, %% Line 816
				    1)
		      in  %% Line 816
			  {Cs,Line,_16,_14,Wcs}
	  %% Line 817
	  <[C = 10|Cs],St,Line,_X_xCol,Q,Wcs> when 'true' ->
	      let <_17> =
		  call %% Line 818
		       'erlang':%% Line 818
				'+'
		      (%% Line 818
		       Line, %% Line 818
			     1)
	      in  %% Line 818
		  apply 'scan_string_col'/6
		      (Cs, St, _17, 1, Q, [C|Wcs])
	  %% Line 819
	  <[C|Cs],St,Line,Col,Q,Wcs>
	      when try
		    let <_18> =
			call 'erlang':'=/='
			    (C, 92)
		    in  ( let <_33> =
			      case call 'erlang':'is_integer'
				       (C) of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_23> =
					  case call 'erlang':'>='
						   (C, 0) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'<'
						      (C, 55296)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_21> when 'true' ->
						  _21
					      -| ['compiler_generated'] )
					  end
				      in  ( case _23 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_27> =
							case call 'erlang':'>'
								 (C, 57343) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erlang':'<'
								    (C, 65534)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_25> when 'true' ->
								_25
							    -| ['compiler_generated'] )
							end
						    in  ( case _27 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  ( case call 'erlang':'>'
									     (C, 65535) of
								      ( <( 'true'
									   -| ['compiler_generated'] )> when 'true' ->
									    call 'erlang':'=<'
										(C, 1114111)
									-| ['compiler_generated'] )
								      ( <( 'false'
									   -| ['compiler_generated'] )> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								      ( <_28> when 'true' ->
									    _28
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_24> when 'true' ->
								  _24
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_20> when 'true' ->
						    _20
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
				( <_19> when 'true' ->
				      _19
				  -| ['compiler_generated'] )
			      end
			  in  let <_34> =
				  call 'erlang':'=:='
				      (( _33
					 -| ['compiler_generated'] ), 'true')
			      in  call 'erlang':'and'
				      (_18, _34)
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_35> =
		  call %% Line 820
		       'erlang':%% Line 820
				'+'
		      (%% Line 820
		       Col, %% Line 820
			    1)
	      in  %% Line 820
		  apply 'scan_string_col'/6
		      (Cs, St, Line, _35, Q, [C|Wcs])
	  %% Line 821
	  <Cs,_X_St,Line,Col,Q,Wcs> when 'true' ->
	      %% Line 822
	      apply 'scan_string1'/6
		  (Cs, Line, Col, Q, Wcs, Wcs)
	end
'scan_string1'/6 =
    %% Line 829
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[Q|Cs],Line,Col,_63,Str0,Wcs0>
	      when call 'erlang':'=:='
		    (_63,
		     Q) ->
	      let <Wcs> =
		  call %% Line 830
		       'lists':%% Line 830
			       'reverse'
		      (%% Line 830
		       Wcs0)
	      in  let <_7> =
		      call %% Line 831
			   'lists':%% Line 831
				   'reverse'
			  (%% Line 831
			   Str0, %% Line 831
				 [Q|[]])
		  in  let <Str> =
			  [%% Line 831
			   Q|_7]
		      in  let <_9> =
			      case %% Line 832
				   Col of
				%% Line 1159
				( <( _66 = ( 'no_col'
					     -| ['compiler_generated'] )
				     -| ['compiler_generated'] )> when ( 'true'
									 -| ['compiler_generated'] ) ->
				      _66
				  -| ['compiler_generated'] )
				%% Line 1161
				( <_67>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_integer'
									       -| ['compiler_generated'] )
					      (Col)
					  -| ['compiler_generated'] ) ->
				      %% Line 1162
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( '+'
									     -| ['compiler_generated'] )
					    (_67, ( 1
						    -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_68> when ( 'true'
					       -| ['compiler_generated'] ) ->
				      %% Line 1159
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),_68,( 1
										    -| ['compiler_generated'] )}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 832
			      {Cs,Line,_9,Str,Wcs}
	  %% Line 833
	  <[C = 10|Cs],Line,Col,Q,Str,Wcs> when 'true' ->
	      let <Ncol> =
		  case %% Line 834
		       Col of
		    %% Line 1164
		    ( <( _72 = ( 'no_col'
				 -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _72
		      -| ['compiler_generated'] )
		    %% Line 1166
		    ( <_73>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  ( 1
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_74> when ( 'true'
				   -| ['compiler_generated'] ) ->
			  %% Line 1164
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_74,( 1
									-| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  let <_11> =
		      call %% Line 835
			   'erlang':%% Line 835
				    '+'
			  (%% Line 835
			   Line, %% Line 835
				 1)
		  in  %% Line 835
		      apply 'scan_string1'/6
			  (Cs, _11, Ncol, Q, [C|Str], [C|Wcs])
	  %% Line 836
	  <Cs0 = [92|Cs],Line,Col,Q,Str,Wcs> when 'true' ->
	      %% Line 837
	      case apply 'scan_escape'/2
		       (Cs, Col) of
		%% Line 838
		<'more'> when 'true' ->
		    %% Line 839
		    {'more',Cs0,Line,Col,Str,Wcs}
		%% Line 840
		<{'error',Ncs,Error,Ncol}> when 'true' ->
		    let <_12> =
			case %% Line 841
			     Ncol of
			  %% Line 1159
			  ( <( _78 = ( 'no_col'
				       -| ['compiler_generated'] )
			       -| ['compiler_generated'] )> when ( 'true'
								   -| ['compiler_generated'] ) ->
				_78
			    -| ['compiler_generated'] )
			  %% Line 1161
			  ( <_79>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_integer'
									 -| ['compiler_generated'] )
					(Ncol)
				    -| ['compiler_generated'] ) ->
				%% Line 1162
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( '+'
								       -| ['compiler_generated'] )
				      (_79, ( 1
					      -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_80> when ( 'true'
					 -| ['compiler_generated'] ) ->
				%% Line 1159
				( primop ( 'match_fail'
					   -| ['compiler_generated'] )
				      (( {( 'function_clause'
					    -| ['compiler_generated'] ),_80,( 1
									      -| ['compiler_generated'] )}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		    in  %% Line 841
			{'char_error',Ncs,Error,Line,Col,_12}
		%% Line 842
		<{'eof',Ncol}> when 'true' ->
		    let <_14> =
			case %% Line 843
			     Ncol of
			  %% Line 1159
			  ( <( _84 = ( 'no_col'
				       -| ['compiler_generated'] )
			       -| ['compiler_generated'] )> when ( 'true'
								   -| ['compiler_generated'] ) ->
				_84
			    -| ['compiler_generated'] )
			  %% Line 1161
			  ( <_85>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_integer'
									 -| ['compiler_generated'] )
					(Ncol)
				    -| ['compiler_generated'] ) ->
				%% Line 1162
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( '+'
								       -| ['compiler_generated'] )
				      (_85, ( 1
					      -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_86> when ( 'true'
					 -| ['compiler_generated'] ) ->
				%% Line 1159
				( primop ( 'match_fail'
					   -| ['compiler_generated'] )
				      (( {( 'function_clause'
					    -| ['compiler_generated'] ),_86,( 1
									      -| ['compiler_generated'] )}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		    in  let <_13> =
			    call %% Line 843
				 'lists':%% Line 843
					 'reverse'
				(%% Line 843
				 Wcs)
			in  %% Line 843
			    {'error',Line,_14,_13,'eof'}
		%% Line 844
		<{'nl',Val,ValStr,Ncs,Ncol}> when 'true' ->
		    let <Nstr> =
			call %% Line 845
			     'lists':%% Line 845
				     'reverse'
			    (%% Line 845
			     ValStr, %% Line 845
				     [92|Str])
		    in  let <Nwcs> =
			    [%% Line 846
			     Val|%% Line 846
				 Wcs]
			in  let <_17> =
				call %% Line 847
				     'erlang':%% Line 847
					      '+'
				    (%% Line 847
				     Line, %% Line 847
					   1)
			    in  %% Line 847
				apply 'scan_string1'/6
				    (Ncs, _17, Ncol, Q, Nstr, Nwcs)
		%% Line 848
		<{Val,ValStr,Ncs,Ncol}> when 'true' ->
		    let <Nstr> =
			call %% Line 849
			     'lists':%% Line 849
				     'reverse'
			    (%% Line 849
			     ValStr, %% Line 849
				     [92|Str])
		    in  let <Nwcs> =
			    [%% Line 850
			     Val|%% Line 850
				 Wcs]
			in  let <_20> =
				case %% Line 851
				     Ncol of
				  %% Line 1159
				  ( <( _90 = ( 'no_col'
					       -| ['compiler_generated'] )
				       -| ['compiler_generated'] )> when ( 'true'
									   -| ['compiler_generated'] ) ->
					_90
				    -| ['compiler_generated'] )
				  %% Line 1161
				  ( <_91>
					when ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'is_integer'
										 -| ['compiler_generated'] )
						(Ncol)
					    -| ['compiler_generated'] ) ->
					%% Line 1162
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( '+'
									       -| ['compiler_generated'] )
					      (_91, ( 1
						      -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_92> when ( 'true'
						 -| ['compiler_generated'] ) ->
					%% Line 1159
					( primop ( 'match_fail'
						   -| ['compiler_generated'] )
					      (( {( 'function_clause'
						    -| ['compiler_generated'] ),_92,( 1
										      -| ['compiler_generated'] )}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    in  %% Line 851
				apply 'scan_string1'/6
				    (Ncs, Line, _20, Q, Nstr, Nwcs)
		( <_21> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_21})
		  -| ['compiler_generated'] )
	      end
	  %% Line 853
	  <[C|Cs],Line,Col = 'no_col',Q,Str,Wcs>
	      when try
		    ( let <_36> =
			  case call 'erlang':'is_integer'
				   (C) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_26> =
				      case call 'erlang':'>='
					       (C, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'<'
						  (C, 55296)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_24> when 'true' ->
					      _24
					  -| ['compiler_generated'] )
				      end
				  in  ( case _26 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						let <_30> =
						    case call 'erlang':'>'
							     (C, 57343) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    call 'erlang':'<'
								(C, 65534)
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_28> when 'true' ->
							    _28
							-| ['compiler_generated'] )
						    end
						in  ( case _30 of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      'true'
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      ( case call 'erlang':'>'
									 (C, 65535) of
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									call 'erlang':'=<'
									    (C, 1114111)
								    -| ['compiler_generated'] )
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									'false'
								    -| ['compiler_generated'] )
								  ( <_31> when 'true' ->
									_31
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
							( <_27> when 'true' ->
							      _27
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_23> when 'true' ->
						_23
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_22> when 'true' ->
				  _22
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _36
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 854
	      apply 'scan_string1'/6
		  (Cs, Line, Col, Q, [C|Str], [C|Wcs])
	  %% Line 855
	  <[C|Cs],Line,Col,Q,Str,Wcs>
	      when try
		    ( let <_51> =
			  case call 'erlang':'is_integer'
				   (C) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_41> =
				      case call 'erlang':'>='
					       (C, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'<'
						  (C, 55296)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_39> when 'true' ->
					      _39
					  -| ['compiler_generated'] )
				      end
				  in  ( case _41 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						let <_45> =
						    case call 'erlang':'>'
							     (C, 57343) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    call 'erlang':'<'
								(C, 65534)
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_43> when 'true' ->
							    _43
							-| ['compiler_generated'] )
						    end
						in  ( case _45 of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      'true'
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      ( case call 'erlang':'>'
									 (C, 65535) of
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									call 'erlang':'=<'
									    (C, 1114111)
								    -| ['compiler_generated'] )
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									'false'
								    -| ['compiler_generated'] )
								  ( <_46> when 'true' ->
									_46
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
							( <_42> when 'true' ->
							      _42
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_38> when 'true' ->
						_38
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_37> when 'true' ->
				  _37
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _51
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_52> =
		  call %% Line 856
		       'erlang':%% Line 856
				'+'
		      (%% Line 856
		       Col, %% Line 856
			    1)
	      in  %% Line 856
		  apply 'scan_string1'/6
		      (Cs, Line, _52, Q, [C|Str], [C|Wcs])
	  %% Line 857
	  <[C|Cs],Line,Col,_X_Q,_X_Str,_X_Wcs>
	      when let <_53> =
		    call 'erlang':'is_integer'
			(C)
		in  let <_54> =
			call 'erlang':'>='
			    (C, 0)
		    in  call 'erlang':'and'
			    (_53, _54) ->
	      let <_55> =
		  case %% Line 858
		       Col of
		    %% Line 1159
		    ( <( _96 = ( 'no_col'
				 -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _96
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_97>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_97, ( 1
					-| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_98> when ( 'true'
				   -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_98,( 1
									-| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 858
		  {'char_error',Cs,{'illegal','character'},Line,Col,_55}
	  %% Line 859
	  <Cs = [],Line,Col,_X_Q,Str,Wcs> when 'true' ->
	      %% Line 860
	      {'more',Cs,Line,Col,Str,Wcs}
	  %% Line 861
	  <'eof',Line,Col,_X_Q,_X_Str,Wcs> when 'true' ->
	      let <_56> =
		  call %% Line 862
		       'lists':%% Line 862
			       'reverse'
		      (%% Line 862
		       Wcs)
	      in  %% Line 862
		  {'error',Line,Col,_56,'eof'}
	  ( <_62,_61,_60,_59,_58,_57> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_62,_61,_60,_59,_58,_57})
		  -| [{'function_name',{'scan_string1',6}}] )
	    -| ['compiler_generated'] )
	end
'scan_escape'/2 =
    %% Line 870
    fun (_0,_1) ->
	case <_0,_1> of
	  <[O1|[O2|[O3|Cs]]],Col>
	      when try
		    let <_2> =
			call 'erlang':'>='
			    (O1, 48)
		    in  let <_3> =
			    call 'erlang':'=<'
				(O1, 55)
			in  let <_4> =
				call 'erlang':'>='
				    (O2, 48)
			    in  let <_5> =
				    call 'erlang':'=<'
					(O2, 55)
				in  let <_6> =
					call 'erlang':'>='
					    (O3, 48)
				    in  let <_7> =
					    call 'erlang':'=<'
						(O3, 55)
					in  let <_8> =
						call 'erlang':'and'
						    (_6, _7)
					    in  let <_9> =
						    call 'erlang':'and'
							(_5, _8)
						in  let <_10> =
							call 'erlang':'and'
							    (_4, _9)
						    in  let <_11> =
							    call 'erlang':'and'
								(_3, _10)
							in  call 'erlang':'and'
								(_2, _11)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_13> =
		  call %% Line 871
		       'erlang':%% Line 871
				'*'
		      (%% Line 871
		       O1, %% Line 871
			   8)
	      in  let <_14> =
		      call %% Line 871
			   'erlang':%% Line 871
				    '+'
			  (_13, %% Line 871
				O2)
		  in  let <_15> =
			  call %% Line 871
			       'erlang':%% Line 871
					'*'
			      (_14, %% Line 871
				    8)
		      in  let <_16> =
			      call %% Line 871
				   'erlang':%% Line 871
					    '+'
				  (_15, %% Line 871
					O3)
			  in  let <Val> =
				  call %% Line 871
				       'erlang':%% Line 871
						'-'
				      (_16, %% Line 871
					    3504)
			      in  let <_18> =
				      case %% Line 872
					   Col of
					%% Line 1159
					( <( _119 = ( 'no_col'
						      -| ['compiler_generated'] )
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      _119
					  -| ['compiler_generated'] )
					%% Line 1161
					( <_120>
					      when ( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'is_integer'
										       -| ['compiler_generated'] )
						      (Col)
						  -| ['compiler_generated'] ) ->
					      %% Line 1162
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( '+'
										     -| ['compiler_generated'] )
						    (_120, ( 3
							     -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_3> when ( 'true'
						      -| ['compiler_generated'] ) ->
					      %% Line 1159
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'function_clause'
							  -| ['compiler_generated'] ),_3,( 3
											   -| ['compiler_generated'] )}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  in  %% Line 872
				      {Val,[O1|[O2|[O3|[]]]],Cs,_18}
	  %% Line 873
	  <[O1|[O2|[]]],_X_Col>
	      when try
		    let <_19> =
			call 'erlang':'>='
			    (O1, 48)
		    in  let <_20> =
			    call 'erlang':'=<'
				(O1, 55)
			in  let <_21> =
				call 'erlang':'>='
				    (O2, 48)
			    in  let <_22> =
				    call 'erlang':'=<'
					(O2, 55)
				in  let <_23> =
					call 'erlang':'and'
					    (_21, _22)
				    in  let <_24> =
					    call 'erlang':'and'
						(_20, _23)
					in  call 'erlang':'and'
						(_19, _24)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 874
	      'more'
	  %% Line 875
	  <[O1|[O2|Cs]],Col>
	      when try
		    let <_25> =
			call 'erlang':'>='
			    (O1, 48)
		    in  let <_26> =
			    call 'erlang':'=<'
				(O1, 55)
			in  let <_27> =
				call 'erlang':'>='
				    (O2, 48)
			    in  let <_28> =
				    call 'erlang':'=<'
					(O2, 55)
				in  let <_29> =
					call 'erlang':'and'
					    (_27, _28)
				    in  let <_30> =
					    call 'erlang':'and'
						(_26, _29)
					in  call 'erlang':'and'
						(_25, _30)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_32> =
		  call %% Line 876
		       'erlang':%% Line 876
				'*'
		      (%% Line 876
		       O1, %% Line 876
			   8)
	      in  let <_33> =
		      call %% Line 876
			   'erlang':%% Line 876
				    '+'
			  (_32, %% Line 876
				O2)
		  in  let <Val> =
			  call %% Line 876
			       'erlang':%% Line 876
					'-'
			      (_33, %% Line 876
				    432)
		      in  let <_35> =
			      case %% Line 877
				   Col of
				%% Line 1159
				( <( _123 = ( 'no_col'
					      -| ['compiler_generated'] )
				     -| ['compiler_generated'] )> when ( 'true'
									 -| ['compiler_generated'] ) ->
				      _123
				  -| ['compiler_generated'] )
				%% Line 1161
				( <_124>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_integer'
									       -| ['compiler_generated'] )
					      (Col)
					  -| ['compiler_generated'] ) ->
				      %% Line 1162
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( '+'
									     -| ['compiler_generated'] )
					    (_124, ( 2
						     -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_3> when ( 'true'
					      -| ['compiler_generated'] ) ->
				      %% Line 1159
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),_3,( 2
										   -| ['compiler_generated'] )}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 877
			      {Val,[O1|[O2|[]]],Cs,_35}
	  %% Line 878
	  <[O1|[]],_X_Col>
	      when let <_36> =
		    call 'erlang':'>='
			(O1, 48)
		in  let <_37> =
			call 'erlang':'=<'
			    (O1, 55)
		    in  call 'erlang':'and'
			    (_36, _37) ->
	      %% Line 879
	      'more'
	  %% Line 880
	  <[O1|Cs],Col>
	      when let <_38> =
		    call 'erlang':'>='
			(O1, 48)
		in  let <_39> =
			call 'erlang':'=<'
			    (O1, 55)
		    in  call 'erlang':'and'
			    (_38, _39) ->
	      let <_41> =
		  call %% Line 881
		       'erlang':%% Line 881
				'-'
		      (%% Line 881
		       O1, %% Line 881
			   48)
	      in  let <_40> =
		      case %% Line 881
			   Col of
			%% Line 1159
			( <( _127 = ( 'no_col'
				      -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _127
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_128>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_128, ( 1
					     -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_3> when ( 'true'
				      -| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_3,( 1
									   -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 881
		      {_41,[O1|[]],Cs,_40}
	  %% Line 883
	  <[120|[123|Cs]],Col> when 'true' ->
	      let <_42> =
		  case %% Line 884
		       Col of
		    %% Line 1159
		    ( <( _131 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _131
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_132>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_132, ( 2
					 -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_3> when ( 'true'
				  -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_3,( 2
								       -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 884
		  apply 'scan_hex'/3
		      (Cs, _42, [])
	  %% Line 885
	  <[120],_X_Col> when 'true' ->
	      %% Line 886
	      'more'
	  %% Line 887
	  <[120|'eof'],Col> when 'true' ->
	      let <_43> =
		  case %% Line 888
		       Col of
		    %% Line 1159
		    ( <( _135 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _135
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_136>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_136, ( 1
					 -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_3> when ( 'true'
				  -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_3,( 1
								       -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 888
		  {'eof',_43}
	  %% Line 890
	  <[120|[H1|[H2|Cs]]],Col>
	      when try
		    let <_47> =
			case call 'erlang':'>='
				 (H1, 48) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=<'
				    (H1, 57)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_45> when 'true' ->
				_45
			    -| ['compiler_generated'] )
			end
		    in  ( let <_56> =
			      case _47 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_51> =
					  case call 'erlang':'>='
						   (H1, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'=<'
						      (H1, 70)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_49> when 'true' ->
						  _49
					      -| ['compiler_generated'] )
					  end
				      in  ( case _51 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (H1, 97) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      call 'erlang':'=<'
								  (H1, 102)
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_52> when 'true' ->
							      _52
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_48> when 'true' ->
						    _48
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_44> when 'true' ->
				      _44
				  -| ['compiler_generated'] )
			      end
			  in  let <_57> =
				  call 'erlang':'=:='
				      (( _56
					 -| ['compiler_generated'] ), 'true')
			      in  let <_61> =
				      case call 'erlang':'>='
					       (H2, 48) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'=<'
						  (H2, 57)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_59> when 'true' ->
					      _59
					  -| ['compiler_generated'] )
				      end
				  in  ( let <_70> =
					    case _61 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_65> =
							case call 'erlang':'>='
								 (H2, 65) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erlang':'=<'
								    (H2, 70)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_63> when 'true' ->
								_63
							    -| ['compiler_generated'] )
							end
						    in  ( case _65 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  ( case call 'erlang':'>='
									     (H2, 97) of
								      ( <( 'true'
									   -| ['compiler_generated'] )> when 'true' ->
									    call 'erlang':'=<'
										(H2, 102)
									-| ['compiler_generated'] )
								      ( <( 'false'
									   -| ['compiler_generated'] )> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								      ( <_66> when 'true' ->
									    _66
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_62> when 'true' ->
								  _62
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_58> when 'true' ->
						    _58
						-| ['compiler_generated'] )
					    end
					in  let <_71> =
						call 'erlang':'=:='
						    (( _70
						       -| ['compiler_generated'] ), 'true')
					    in  call 'erlang':'and'
						    (_57, _71)
					-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <Val> =
		  call %% Line 891
		       'erlang':%% Line 891
				'list_to_integer'
		      (%% Line 891
		       [H1|[H2|[]]], %% Line 891
				     16)
	      in  let <_73> =
		      case %% Line 892
			   Col of
			%% Line 1159
			( <( _139 = ( 'no_col'
				      -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _139
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_140>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_140, ( 3
					     -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_3> when ( 'true'
				      -| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_3,( 3
									   -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 892
		      {Val,[120|[H1|[H2|[]]]],Cs,_73}
	  %% Line 893
	  <[120|[H1|[]]],_X_Col>
	      when try
		    let <_77> =
			case call 'erlang':'>='
				 (H1, 48) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=<'
				    (H1, 57)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_75> when 'true' ->
				_75
			    -| ['compiler_generated'] )
			end
		    in  ( let <_86> =
			      case _77 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_81> =
					  case call 'erlang':'>='
						   (H1, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'=<'
						      (H1, 70)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_79> when 'true' ->
						  _79
					      -| ['compiler_generated'] )
					  end
				      in  ( case _81 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (H1, 97) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      call 'erlang':'=<'
								  (H1, 102)
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_82> when 'true' ->
							      _82
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_78> when 'true' ->
						    _78
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_74> when 'true' ->
				      _74
				  -| ['compiler_generated'] )
			      end
			  in  ( call 'erlang':'=:='
				    (( _86
				       -| ['compiler_generated'] ), 'true')
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 894
	      'more'
	  %% Line 895
	  <[120|Cs],Col> when 'true' ->
	      let <_87> =
		  case %% Line 896
		       Col of
		    %% Line 1159
		    ( <( _143 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _143
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_144>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_144, ( 1
					 -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_3> when ( 'true'
				  -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_3,( 1
								       -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 896
		  {'error',Cs,{'illegal','character'},_87}
	  %% Line 898
	  <[C0 = 94|[C = 10|Cs]],Col> when 'true' ->
	      let <_88> =
		  case %% Line 899
		       Col of
		    %% Line 1164
		    ( <( _147 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _147
		      -| ['compiler_generated'] )
		    %% Line 1166
		    ( <_148>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  ( 1
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_3> when ( 'true'
				  -| ['compiler_generated'] ) ->
			  %% Line 1164
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_3,( 1
								       -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 899
		  {'nl',C,[C0|[C|[]]],Cs,_88}
	  %% Line 900
	  <[C0 = 94|[C|Cs]],Col>
	      when let <_89> =
		    call 'erlang':'is_integer'
			(C)
		in  let <_90> =
			call 'erlang':'>='
			    (C, 0)
		    in  call 'erlang':'and'
			    (_89, _90) ->
	      let <Val> =
		  call %% Line 901
		       'erlang':%% Line 901
				'band'
		      (%% Line 901
		       C, %% Line 901
			  31)
	      in  let <_92> =
		      case %% Line 902
			   Col of
			%% Line 1159
			( <( _151 = ( 'no_col'
				      -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _151
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_152>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_152, ( 2
					     -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_3> when ( 'true'
				      -| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_3,( 2
									   -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 902
		      {Val,[C0|[C|[]]],Cs,_92}
	  %% Line 903
	  <[94],_X_Col> when 'true' ->
	      %% Line 904
	      'more'
	  %% Line 905
	  <[94|'eof'],Col> when 'true' ->
	      let <_93> =
		  case %% Line 906
		       Col of
		    %% Line 1159
		    ( <( _155 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _155
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_156>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_156, ( 1
					 -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_3> when ( 'true'
				  -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_3,( 1
								       -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 906
		  {'eof',_93}
	  %% Line 907
	  <[C = 10|Cs],Col> when 'true' ->
	      let <_94> =
		  case %% Line 908
		       Col of
		    %% Line 1164
		    ( <( _159 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _159
		      -| ['compiler_generated'] )
		    %% Line 1166
		    ( <_160>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  ( 1
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_3> when ( 'true'
				  -| ['compiler_generated'] ) ->
			  %% Line 1164
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_3,( 1
								       -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 908
		  {'nl',C,[C|[]],Cs,_94}
	  %% Line 909
	  <[C0|Cs],Col>
	      when try
		    ( let <_109> =
			  case call 'erlang':'is_integer'
				   (C0) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_99> =
				      case call 'erlang':'>='
					       (C0, 0) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erlang':'<'
						  (C0, 55296)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_97> when 'true' ->
					      _97
					  -| ['compiler_generated'] )
				      end
				  in  ( case _99 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						let <_103> =
						    case call 'erlang':'>'
							     (C0, 57343) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    call 'erlang':'<'
								(C0, 65534)
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_101> when 'true' ->
							    _101
							-| ['compiler_generated'] )
						    end
						in  ( case _103 of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      'true'
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      ( case call 'erlang':'>'
									 (C0, 65535) of
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									call 'erlang':'=<'
									    (C0, 1114111)
								    -| ['compiler_generated'] )
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									'false'
								    -| ['compiler_generated'] )
								  ( <_104> when 'true' ->
									_104
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
							( <_100> when 'true' ->
							      _100
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_96> when 'true' ->
						_96
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_95> when 'true' ->
				  _95
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _109
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <C> =
		  apply %% Line 910
			'escape_char'/1
		      (%% Line 910
		       C0)
	      in  let <_111> =
		      case %% Line 911
			   Col of
			%% Line 1159
			( <( _163 = ( 'no_col'
				      -| ['compiler_generated'] )
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      _163
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_164>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (Col)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_164, ( 1
					     -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_3> when ( 'true'
				      -| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_3,( 1
									   -| ['compiler_generated'] )}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 911
		      {C,[C0|[]],Cs,_111}
	  %% Line 912
	  <[C|Cs],Col>
	      when let <_112> =
		    call 'erlang':'is_integer'
			(C)
		in  let <_113> =
			call 'erlang':'>='
			    (C, 0)
		    in  call 'erlang':'and'
			    (_112, _113) ->
	      let <_114> =
		  case %% Line 913
		       Col of
		    %% Line 1159
		    ( <( _167 = ( 'no_col'
				  -| ['compiler_generated'] )
			 -| ['compiler_generated'] )> when ( 'true'
							     -| ['compiler_generated'] ) ->
			  _167
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_168>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (Col)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_168, ( 1
					 -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_3> when ( 'true'
				  -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_3,( 1
								       -| ['compiler_generated'] )}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 913
		  {'error',Cs,{'illegal','character'},_114}
	  %% Line 914
	  <[],_X_Col> when 'true' ->
	      %% Line 915
	      'more'
	  %% Line 916
	  <'eof',Col> when 'true' ->
	      %% Line 917
	      {'eof',Col}
	  ( <_116,_115> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_116,_115})
		  -| [{'function_name',{'scan_escape',2}}] )
	    -| ['compiler_generated'] )
	end
'scan_hex'/3 =
    %% Line 919
    fun (_0,_1,_2) ->
	case <_0,_1,_2> of
	  <[C|Cs],Col = 'no_col',Wcs>
	      when try
		    let <_6> =
			case call 'erlang':'>='
				 (C, 48) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=<'
				    (C, 57)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_4> when 'true' ->
				_4
			    -| ['compiler_generated'] )
			end
		    in  ( let <_15> =
			      case _6 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_10> =
					  case call 'erlang':'>='
						   (C, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'=<'
						      (C, 70)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_8> when 'true' ->
						  _8
					      -| ['compiler_generated'] )
					  end
				      in  ( case _10 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (C, 97) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      call 'erlang':'=<'
								  (C, 102)
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_11> when 'true' ->
							      _11
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_7> when 'true' ->
						    _7
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_3> when 'true' ->
				      _3
				  -| ['compiler_generated'] )
			      end
			  in  ( call 'erlang':'=:='
				    (( _15
				       -| ['compiler_generated'] ), 'true')
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 920
	      apply 'scan_hex'/3
		  (Cs, Col, [C|Wcs])
	  %% Line 921
	  <[C|Cs],Col,Wcs>
	      when try
		    let <_19> =
			case call 'erlang':'>='
				 (C, 48) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=<'
				    (C, 57)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_17> when 'true' ->
				_17
			    -| ['compiler_generated'] )
			end
		    in  ( let <_28> =
			      case _19 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_23> =
					  case call 'erlang':'>='
						   (C, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erlang':'=<'
						      (C, 70)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_21> when 'true' ->
						  _21
					      -| ['compiler_generated'] )
					  end
				      in  ( case _23 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (C, 97) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      call 'erlang':'=<'
								  (C, 102)
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_24> when 'true' ->
							      _24
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_20> when 'true' ->
						    _20
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_16> when 'true' ->
				      _16
				  -| ['compiler_generated'] )
			      end
			  in  ( call 'erlang':'=:='
				    (( _28
				       -| ['compiler_generated'] ), 'true')
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_29> =
		  call %% Line 922
		       'erlang':%% Line 922
				'+'
		      (%% Line 922
		       Col, %% Line 922
			    1)
	      in  %% Line 922
		  apply 'scan_hex'/3
		      (Cs, _29, [C|Wcs])
	  %% Line 923
	  <Cs,Col,Wcs> when 'true' ->
	      %% Line 924
	      apply 'scan_esc_end'/5
		  (Cs, Col, Wcs, 16, [120|[123]])
	end
'scan_esc_end'/5 =
    %% Line 926
    fun (_0,_1,_2,_3,_4) ->
	case <_0,_1,_2,_3,_4> of
	  <[125|Cs],Col,Wcs0,B,Str0> when 'true' ->
	      let <Wcs> =
		  call %% Line 927
		       'lists':%% Line 927
			       'reverse'
		      (%% Line 927
		       Wcs0)
	      in  let <_6> =
		      catch
			  %% Line 928
			  call 'erlang':'list_to_integer'
			      (Wcs, B)
		  in  %% Line 928
		      case _6 of
			%% Line 929
			<Val>
			    when try
				  ( let <_21> =
					case call 'erlang':'is_integer'
						 (_6) of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						let <_11> =
						    case call 'erlang':'>='
							     (_6, 0) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    call 'erlang':'<'
								(_6, 55296)
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_9> when 'true' ->
							    _9
							-| ['compiler_generated'] )
						    end
						in  ( case _11 of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      'true'
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      let <_15> =
								  case call 'erlang':'>'
									   (_6, 57343) of
								    ( <( 'true'
									 -| ['compiler_generated'] )> when 'true' ->
									  call 'erlang':'<'
									      (_6, 65534)
								      -| ['compiler_generated'] )
								    ( <( 'false'
									 -| ['compiler_generated'] )> when 'true' ->
									  'false'
								      -| ['compiler_generated'] )
								    ( <_13> when 'true' ->
									  _13
								      -| ['compiler_generated'] )
								  end
							      in  ( case _15 of
								      ( <( 'true'
									   -| ['compiler_generated'] )> when 'true' ->
									    'true'
									-| ['compiler_generated'] )
								      ( <( 'false'
									   -| ['compiler_generated'] )> when 'true' ->
									    ( case call 'erlang':'>'
										       (_6, 65535) of
										( <( 'true'
										     -| ['compiler_generated'] )> when 'true' ->
										      call 'erlang':'=<'
											  (_6, 1114111)
										  -| ['compiler_generated'] )
										( <( 'false'
										     -| ['compiler_generated'] )> when 'true' ->
										      'false'
										  -| ['compiler_generated'] )
										( <_16> when 'true' ->
										      _16
										  -| ['compiler_generated'] )
									      end
									      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								      ( <_12> when 'true' ->
									    _12
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							  -| ['compiler_generated'] )
							( <_8> when 'true' ->
							      _8
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						'false'
					    -| ['compiler_generated'] )
					  ( <_7> when 'true' ->
						_7
					    -| ['compiler_generated'] )
					end
				    in  ( call 'erlang':'=:='
					      (( _21
						 -| ['compiler_generated'] ), 'true')
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
			      of <Try> ->
				  Try
			      catch <T,R> ->
				  'false' ->
			    let <_23> =
				call %% Line 930
				     'erlang':%% Line 930
					      '++'
				    (%% Line 930
				     Wcs, %% Line 930
					  [125])
			    in  let <_24> =
				    call %% Line 930
					 'erlang':%% Line 930
						  '++'
					(%% Line 930
					 Str0, _23)
				in  let <_22> =
					case %% Line 930
					     Col of
					  %% Line 1159
					  ( <( _35 = ( 'no_col'
						       -| ['compiler_generated'] )
					       -| ['compiler_generated'] )> when ( 'true'
										   -| ['compiler_generated'] ) ->
						_35
					    -| ['compiler_generated'] )
					  %% Line 1161
					  ( <_36>
						when ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'is_integer'
											 -| ['compiler_generated'] )
							(Col)
						    -| ['compiler_generated'] ) ->
						%% Line 1162
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( '+'
										       -| ['compiler_generated'] )
						      (_36, ( 1
							      -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_37> when ( 'true'
							 -| ['compiler_generated'] ) ->
						%% Line 1159
						( primop ( 'match_fail'
							   -| ['compiler_generated'] )
						      (( {( 'function_clause'
							    -| ['compiler_generated'] ),_37,( 1
											      -| ['compiler_generated'] )}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				    in  %% Line 930
					{Val,_24,Cs,_22}
			%% Line 931
			<_32> when 'true' ->
			    let <_25> =
				case %% Line 932
				     Col of
				  %% Line 1159
				  ( <( _41 = ( 'no_col'
					       -| ['compiler_generated'] )
				       -| ['compiler_generated'] )> when ( 'true'
									   -| ['compiler_generated'] ) ->
					_41
				    -| ['compiler_generated'] )
				  %% Line 1161
				  ( <_42>
					when ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'is_integer'
										 -| ['compiler_generated'] )
						(Col)
					    -| ['compiler_generated'] ) ->
					%% Line 1162
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( '+'
									       -| ['compiler_generated'] )
					      (_42, ( 1
						      -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_43> when ( 'true'
						 -| ['compiler_generated'] ) ->
					%% Line 1159
					( primop ( 'match_fail'
						   -| ['compiler_generated'] )
					      (( {( 'function_clause'
						    -| ['compiler_generated'] ),_43,( 1
										      -| ['compiler_generated'] )}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    in  %% Line 932
				{'error',Cs,{'illegal','character'},_25}
		      end
	  %% Line 934
	  <[],_X_Col,_X_Wcs,_X_B,_X_Str0> when 'true' ->
	      %% Line 935
	      'more'
	  %% Line 936
	  <'eof',Col,_X_Wcs,_X_B,_X_Str0> when 'true' ->
	      %% Line 937
	      {'eof',Col}
	  %% Line 938
	  <Cs,Col,_X_Wcs,_X_B,_X_Str0> when 'true' ->
	      %% Line 939
	      {'error',Cs,{'illegal','character'},Col}
	end
'escape_char'/1 =
    %% Line 941
    fun (_0) ->
	case _0 of
	  <110> when 'true' ->
	      10
	  %% Line 942
	  <114> when 'true' ->
	      13
	  %% Line 943
	  <116> when 'true' ->
	      9
	  %% Line 944
	  <118> when 'true' ->
	      11
	  %% Line 945
	  <98> when 'true' ->
	      8
	  %% Line 946
	  <102> when 'true' ->
	      12
	  %% Line 947
	  <101> when 'true' ->
	      27
	  %% Line 948
	  <115> when 'true' ->
	      32
	  %% Line 949
	  <100> when 'true' ->
	      127
	  %% Line 950
	  <C> when 'true' ->
	      C
	end
'scan_number'/6 =
    %% Line 952
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs,St,Line,Col,Toks,{Ncs,Us}> when 'true' ->
	      %% Line 953
	      apply 'scan_number'/7
		  (Cs, St, Line, Col, Toks, Ncs, Us)
	  ( <_11,_10,_9,_8,_7,_6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_11,_10,_9,_8,_7,_6})
		  -| [{'function_name',{'scan_number',6}}] )
	    -| ['compiler_generated'] )
	end
'scan_number'/7 =
    %% Line 955
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	case <_0,_1,_2,_3,_4,_5,_6> of
	  <[C|Cs],St,Line,Col,Toks,Ncs,Us>
	      when try
		    ( let <_9> =
			  case call 'erlang':'>='
				   (C, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  call 'erlang':'=<'
				      (C, 57)
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_7> when 'true' ->
				  _7
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _9
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 956
	      apply 'scan_number'/7
		  (Cs, St, Line, Col, Toks, [C|Ncs], Us)
	  %% Line 957
	  <[95|[Next|Cs]],St,Line,Col,Toks,Ncs = [Prev|_48],_X_Us>
	      when %% Line 958
		try
		    ( let <_16> =
			  case call 'erlang':'>='
				   (Next, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case call 'erlang':'=<'
					     (Next, 57) of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    ( case call 'erlang':'>='
						       (Prev, 48) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      call 'erlang':'=<'
							  (Prev, 57)
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      'false'
						  -| ['compiler_generated'] )
						( <_12> when 'true' ->
						      _12
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    'false'
					-| ['compiler_generated'] )
				      ( <_11> when 'true' ->
					    _11
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_10> when 'true' ->
				  _10
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _16
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 959
	      apply 'scan_number'/7
		  (Cs, St, Line, Col, Toks, [Next|[95|Ncs]], 'with_underscore')
	  %% Line 960
	  <Cs = [95],_X_St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      let <_17> = 'scan_number'/6
	      in  %% Line 961
		  {'more',{Cs,Col,Toks,Line,{Ncs,Us},_17}}
	  %% Line 962
	  <[46|[C|Cs]],St,Line,Col,Toks,Ncs,Us>
	      when try
		    ( let <_20> =
			  case call 'erlang':'>='
				   (C, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  call 'erlang':'=<'
				      (C, 57)
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_18> when 'true' ->
				  _18
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _20
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 963
	      apply 'scan_fraction'/7
		  (Cs, St, Line, Col, Toks, [C|[46|Ncs]], Us)
	  %% Line 964
	  <Cs = [46],_X_St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      let <_21> = 'scan_number'/6
	      in  %% Line 965
		  {'more',{Cs,Col,Toks,Line,{Ncs,Us},_21}}
	  %% Line 966
	  <Cs0 = [35|Cs],St,Line,Col,Toks,Ncs0,Us> when 'true' ->
	      let <Ncs> =
		  call %% Line 967
		       'lists':%% Line 967
			       'reverse'
		      (%% Line 967
		       Ncs0)
	      in  let <_24> =
		      catch
			  let <_23> =
			      apply %% Line 968
				    'remove_digit_separators'/2
				  (%% Line 968
				   Ncs, %% Line 968
					Us)
			  in  %% Line 968
			      call 'erlang':'list_to_integer'
				  (_23)
		  in  %% Line 968
		      case _24 of
			%% Line 969
			<B>
			    when let <_25> =
				  call 'erlang':'>='
				      (_24, 2)
			      in  let <_29> =
				      call 'erlang':'=<'
					  (_24, 36)
				  in  call 'erlang':'and'
					  (_25, _29) ->
			    let <Bcs> =
				call %% Line 970
				     'erlang':%% Line 970
					      '++'
				    (%% Line 970
				     Ncs, %% Line 970
					  [35])
			    in  %% Line 971
				apply 'scan_based_int'/9
				    (Cs, St, Line, Col, Toks, B, [], Bcs, 'no_underscore')
			%% Line 972
			<B> when 'true' ->
			    let <Len> =
				call %% Line 973
				     'erlang':%% Line 973
					      'length'
				    (%% Line 973
				     Ncs)
			    in  let <_32> =
				    case %% Line 974
					 <Col,Len> of
				      %% Line 1159
				      ( <( _52 = ( 'no_col'
						   -| ['compiler_generated'] )
					   -| ['compiler_generated'] ),_X_N> when ( 'true'
										    -| ['compiler_generated'] ) ->
					    _52
					-| ['compiler_generated'] )
				      %% Line 1161
				      ( <_53,N>
					    when ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'is_integer'
										     -| ['compiler_generated'] )
						    (_53)
						-| ['compiler_generated'] ) ->
					    %% Line 1162
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( '+'
										   -| ['compiler_generated'] )
						  (_53, N)
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <_54,_55> when ( 'true'
							 -| ['compiler_generated'] ) ->
					    %% Line 1159
					    ( primop ( 'match_fail'
						       -| ['compiler_generated'] )
						  (( {( 'function_clause'
							-| ['compiler_generated'] ),_54,_55}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				in  %% Line 974
				    apply 'scan_error'/6
					({'base',B}, Line, Col, Line, _32, Cs0)
		      end
	  %% Line 976
	  <Cs = [],_X_St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      let <_34> = 'scan_number'/6
	      in  %% Line 977
		  {'more',{Cs,Col,Toks,Line,{Ncs,Us},_34}}
	  %% Line 978
	  <Cs,St,Line,Col,Toks,Ncs0,Us> when 'true' ->
	      let <Ncs> =
		  call %% Line 979
		       'lists':%% Line 979
			       'reverse'
		      (%% Line 979
		       Ncs0)
	      in  let <_37> =
		      catch
			  let <_36> =
			      apply %% Line 980
				    'remove_digit_separators'/2
				  (%% Line 980
				   Ncs, %% Line 980
					Us)
			  in  %% Line 980
			      call 'erlang':'list_to_integer'
				  (_36)
		  in  %% Line 980
		      case _37 of
			%% Line 981
			<N>
			    when call 'erlang':'is_integer'
				  (_37) ->
			    %% Line 982
			    apply 'tok3'/8
				(Cs, St, Line, Col, Toks, 'integer', Ncs, N)
			%% Line 983
			<_49> when 'true' ->
			    let <_38> =
				call %% Line 984
				     'erlang':%% Line 984
					      'length'
				    (%% Line 984
				     Ncs)
			    in  let <Ncol> =
				    case %% Line 984
					 <Col,_38> of
				      %% Line 1159
				      ( <( _58 = ( 'no_col'
						   -| ['compiler_generated'] )
					   -| ['compiler_generated'] ),_X_N> when ( 'true'
										    -| ['compiler_generated'] ) ->
					    _58
					-| ['compiler_generated'] )
				      %% Line 1161
				      ( <_59,N>
					    when ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'is_integer'
										     -| ['compiler_generated'] )
						    (_59)
						-| ['compiler_generated'] ) ->
					    %% Line 1162
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( '+'
										   -| ['compiler_generated'] )
						  (_59, N)
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <_60,_61> when ( 'true'
							 -| ['compiler_generated'] ) ->
					    %% Line 1159
					    ( primop ( 'match_fail'
						       -| ['compiler_generated'] )
						  (( {( 'function_clause'
							-| ['compiler_generated'] ),_60,_61}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				in  %% Line 985
				    apply 'scan_error'/6
					({'illegal','integer'}, Line, Col, Line, Ncol, Cs)
		      end
	end
'remove_digit_separators'/2 =
    %% Line 988
    fun (_0,_1) ->
	case <_0,_1> of
	  <Number,'no_underscore'> when 'true' ->
	      %% Line 989
	      Number
	  %% Line 990
	  <Number,'with_underscore'> when 'true' ->
	      %% Line 991
	      ( letrec
		    'lc$^0'/1 =
			fun (_4) ->
			    case _4 of
			      <[C|_3]>
				  when call 'erlang':'=/='
					(C,
					 95) ->
				  let <_5> =
				      apply 'lc$^0'/1
					  (_3)
				  in  ( [C|_5]
					-| ['compiler_generated'] )
			      ( <[C|_3]> when 'true' ->
				    apply 'lc$^0'/1
					(_3)
				-| ['compiler_generated'] )
			      <[]> when 'true' ->
				  []
			      ( <_8> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_8})
				      -| [{'function_name',{'lc$^0',1}}] )
				-| ['compiler_generated'] )
			    end
		in  apply 'lc$^0'/1
			(Number)
		-| ['list_comprehension'] )
	  ( <_7,_6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_7,_6})
		  -| [{'function_name',{'remove_digit_separators',2}}] )
	    -| ['compiler_generated'] )
	end
'scan_based_int'/6 =
    %% Line 998
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs,St,Line,Col,Toks,{B,NCs,BCs,Us}> when 'true' ->
	      %% Line 999
	      apply 'scan_based_int'/9
		  (Cs, St, Line, Col, Toks, B, NCs, BCs, Us)
	  ( <_11,_10,_9,_8,_7,_6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_11,_10,_9,_8,_7,_6})
		  -| [{'function_name',{'scan_based_int',6}}] )
	    -| ['compiler_generated'] )
	end
'scan_based_int'/9 =
    %% Line 1001
    fun (_0,_1,_2,_3,_4,_5,_6,_7,_8) ->
	case <_0,_1,_2,_3,_4,_5,_6,_7,_8> of
	  <[C|Cs],St,Line,Col,Toks,B,Ncs,Bcs,Us>
	      when %% Line 1002
		try
		    let <_15> =
			case call 'erlang':'>='
				 (C, 48) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				( case call 'erlang':'=<'
					   (C, 57) of
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_12> =
					      call 'erlang':'+'
						  (48, B)
					  in  call 'erlang':'<'
						  (C, _12)
				      -| ['compiler_generated'] )
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  'false'
				      -| ['compiler_generated'] )
				    ( <_11> when 'true' ->
					  _11
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_10> when 'true' ->
				_10
			    -| ['compiler_generated'] )
			end
		    in  ( let <_32> =
			      case _15 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_23> =
					  case call 'erlang':'>='
						   (C, 65) of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  ( case call 'erlang':'>'
							     (B, 10) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    let <_19> =
								call 'erlang':'+'
								    (65, B)
							    in  let <_20> =
								    call 'erlang':'-'
									(_19, 10)
								in  call 'erlang':'<'
									(C, _20)
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_18> when 'true' ->
							    _18
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_17> when 'true' ->
						  _17
					      -| ['compiler_generated'] )
					  end
				      in  ( case _23 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case call 'erlang':'>='
							       (C, 97) of
							( <( 'true'
							     -| ['compiler_generated'] )> when 'true' ->
							      ( case call 'erlang':'>'
									 (B, 10) of
								  ( <( 'true'
								       -| ['compiler_generated'] )> when 'true' ->
									let <_26> =
									    call 'erlang':'+'
										(97, B)
									in  let <_27> =
										call 'erlang':'-'
										    (_26, 10)
									    in  call 'erlang':'<'
										    (C, _27)
								    -| ['compiler_generated'] )
								  ( <( 'false'
								       -| ['compiler_generated'] )> when 'true' ->
									'false'
								    -| ['compiler_generated'] )
								  ( <_25> when 'true' ->
									_25
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
							( <( 'false'
							     -| ['compiler_generated'] )> when 'true' ->
							      'false'
							  -| ['compiler_generated'] )
							( <_24> when 'true' ->
							      _24
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_16> when 'true' ->
						    _16
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_9> when 'true' ->
				      _9
				  -| ['compiler_generated'] )
			      end
			  in  ( call 'erlang':'=:='
				    (( _32
				       -| ['compiler_generated'] ), 'true')
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1003
	      apply 'scan_based_int'/9
		  (Cs, St, Line, Col, Toks, B, [C|Ncs], Bcs, Us)
	  %% Line 1004
	  <[95|[Next|Cs]],St,Line,Col,Toks,B,Ncs = [Prev|_103],Bcs,_X_Us>
	      when %% Line 1005
		try
		    let <_40> =
			case call 'erlang':'>='
				 (Next, 48) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				( case call 'erlang':'=<'
					   (Next, 57) of
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_37> =
					      call 'erlang':'+'
						  (48, B)
					  in  call 'erlang':'<'
						  (Next, _37)
				      -| ['compiler_generated'] )
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  'false'
				      -| ['compiler_generated'] )
				    ( <_36> when 'true' ->
					  _36
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_35> when 'true' ->
				_35
			    -| ['compiler_generated'] )
			end
		    in  let <_57> =
			    case _40 of
			      ( <( 'true'
				   -| ['compiler_generated'] )> when 'true' ->
				    'true'
				-| ['compiler_generated'] )
			      ( <( 'false'
				   -| ['compiler_generated'] )> when 'true' ->
				    let <_48> =
					case call 'erlang':'>='
						 (Next, 65) of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						( case call 'erlang':'>'
							   (B, 10) of
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_44> =
							      call 'erlang':'+'
								  (65, B)
							  in  let <_45> =
								  call 'erlang':'-'
								      (_44, 10)
							      in  call 'erlang':'<'
								      (Next, _45)
						      -| ['compiler_generated'] )
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						    ( <_43> when 'true' ->
							  _43
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						'false'
					    -| ['compiler_generated'] )
					  ( <_42> when 'true' ->
						_42
					    -| ['compiler_generated'] )
					end
				    in  ( case _48 of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  'true'
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  ( case call 'erlang':'>='
							     (Next, 97) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    ( case call 'erlang':'>'
								       (B, 10) of
								( <( 'true'
								     -| ['compiler_generated'] )> when 'true' ->
								      let <_51> =
									  call 'erlang':'+'
									      (97, B)
								      in  let <_52> =
									      call 'erlang':'-'
										  (_51, 10)
									  in  call 'erlang':'<'
										  (Next, _52)
								  -| ['compiler_generated'] )
								( <( 'false'
								     -| ['compiler_generated'] )> when 'true' ->
								      'false'
								  -| ['compiler_generated'] )
								( <_50> when 'true' ->
								      _50
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    'false'
							-| ['compiler_generated'] )
						      ( <_49> when 'true' ->
							    _49
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					    ( <_41> when 'true' ->
						  _41
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <_34> when 'true' ->
				    _34
				-| ['compiler_generated'] )
			    end
			in  ( let <_82> =
				  case _57 of
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_64> =
					      case call 'erlang':'>='
						       (Prev, 48) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case call 'erlang':'=<'
								 (Prev, 57) of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								let <_61> =
								    call 'erlang':'+'
									(48, B)
								in  call 'erlang':'<'
									(Prev, _61)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_60> when 'true' ->
								_60
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      'false'
						  -| ['compiler_generated'] )
						( <_59> when 'true' ->
						      _59
						  -| ['compiler_generated'] )
					      end
					  in  ( case _64 of
						  ( <( 'true'
						       -| ['compiler_generated'] )> when 'true' ->
							'true'
						    -| ['compiler_generated'] )
						  ( <( 'false'
						       -| ['compiler_generated'] )> when 'true' ->
							let <_72> =
							    case call 'erlang':'>='
								     (Prev, 65) of
							      ( <( 'true'
								   -| ['compiler_generated'] )> when 'true' ->
								    ( case call 'erlang':'>'
									       (B, 10) of
									( <( 'true'
									     -| ['compiler_generated'] )> when 'true' ->
									      let <_68> =
										  call 'erlang':'+'
										      (65, B)
									      in  let <_69> =
										      call 'erlang':'-'
											  (_68, 10)
										  in  call 'erlang':'<'
											  (Prev, _69)
									  -| ['compiler_generated'] )
									( <( 'false'
									     -| ['compiler_generated'] )> when 'true' ->
									      'false'
									  -| ['compiler_generated'] )
									( <_67> when 'true' ->
									      _67
									  -| ['compiler_generated'] )
								      end
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							      ( <( 'false'
								   -| ['compiler_generated'] )> when 'true' ->
								    'false'
								-| ['compiler_generated'] )
							      ( <_66> when 'true' ->
								    _66
								-| ['compiler_generated'] )
							    end
							in  ( case _72 of
								( <( 'true'
								     -| ['compiler_generated'] )> when 'true' ->
								      'true'
								  -| ['compiler_generated'] )
								( <( 'false'
								     -| ['compiler_generated'] )> when 'true' ->
								      ( case call 'erlang':'>='
										 (Prev, 97) of
									  ( <( 'true'
									       -| ['compiler_generated'] )> when 'true' ->
										( case call 'erlang':'>'
											   (B, 10) of
										    ( <( 'true'
											 -| ['compiler_generated'] )> when 'true' ->
											  let <_75> =
											      call 'erlang':'+'
												  (97, B)
											  in  let <_76> =
												  call 'erlang':'-'
												      (_75, 10)
											      in  call 'erlang':'<'
												      (Prev, _76)
										      -| ['compiler_generated'] )
										    ( <( 'false'
											 -| ['compiler_generated'] )> when 'true' ->
											  'false'
										      -| ['compiler_generated'] )
										    ( <_74> when 'true' ->
											  _74
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									  ( <( 'false'
									       -| ['compiler_generated'] )> when 'true' ->
										'false'
									    -| ['compiler_generated'] )
									  ( <_73> when 'true' ->
										_73
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
								( <_65> when 'true' ->
								      _65
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						  ( <_58> when 'true' ->
							_58
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  'false'
				      -| ['compiler_generated'] )
				    ( <_33> when 'true' ->
					  _33
				      -| ['compiler_generated'] )
				  end
			      in  ( call 'erlang':'=:='
					(( _82
					   -| ['compiler_generated'] ), 'true')
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1006
	      apply 'scan_based_int'/9
		  (Cs, St, Line, Col, Toks, B, [Next|[95|Ncs]], Bcs, %% Line 1007
								     'with_underscore')
	  %% Line 1008
	  <Cs = [95],_X_St,Line,Col,Toks,B,NCs,BCs,Us> when 'true' ->
	      let <_83> = 'scan_based_int'/6
	      in  %% Line 1009
		  {'more',{Cs,Col,Toks,Line,{B,NCs,BCs,Us},_83}}
	  %% Line 1010
	  <Cs = [],_X_St,Line,Col,Toks,B,NCs,BCs,Us> when 'true' ->
	      let <_84> = 'scan_based_int'/6
	      in  %% Line 1011
		  {'more',{Cs,Col,Toks,Line,{B,NCs,BCs,Us},_84}}
	  %% Line 1012
	  <Cs,St,Line,Col,Toks,B,Ncs0,Bcs,Us> when 'true' ->
	      let <Ncs> =
		  call %% Line 1013
		       'lists':%% Line 1013
			       'reverse'
		      (%% Line 1013
		       Ncs0)
	      in  let <_87> =
		      catch
			  let <_86> =
			      apply %% Line 1014
				    'remove_digit_separators'/2
				  (%% Line 1014
				   Ncs, %% Line 1014
					Us)
			  in  %% Line 1014
			      call 'erlang':'list_to_integer'
				  (_86, B)
		  in  %% Line 1014
		      case _87 of
			%% Line 1015
			<N>
			    when call 'erlang':'is_integer'
				  (_87) ->
			    let <_88> =
				call %% Line 1016
				     'erlang':%% Line 1016
					      '++'
				    (%% Line 1016
				     Bcs, %% Line 1016
					  Ncs)
			    in  %% Line 1016
				apply 'tok3'/8
				    (Cs, St, Line, Col, Toks, 'integer', _88, N)
			%% Line 1017
			<_104> when 'true' ->
			    let <_90> =
				call %% Line 1018
				     'erlang':%% Line 1018
					      'length'
				    (%% Line 1018
				     Bcs)
			    in  let <_89> =
				    call %% Line 1018
					 'erlang':%% Line 1018
						  'length'
					(%% Line 1018
					 Ncs)
				in  let <Len> =
					call %% Line 1018
					     'erlang':%% Line 1018
						      '+'
					    (_90, _89)
				    in  let <Ncol> =
					    case %% Line 1019
						 <Col,Len> of
					      %% Line 1159
					      ( <( _107 = ( 'no_col'
							    -| ['compiler_generated'] )
						   -| ['compiler_generated'] ),_X_N> when ( 'true'
											    -| ['compiler_generated'] ) ->
						    _107
						-| ['compiler_generated'] )
					      %% Line 1161
					      ( <_108,N>
						    when ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'is_integer'
											     -| ['compiler_generated'] )
							    (_108)
							-| ['compiler_generated'] ) ->
						    %% Line 1162
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( '+'
											   -| ['compiler_generated'] )
							  (_108, N)
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_109,_110> when ( 'true'
								   -| ['compiler_generated'] ) ->
						    %% Line 1159
						    ( primop ( 'match_fail'
							       -| ['compiler_generated'] )
							  (( {( 'function_clause'
								-| ['compiler_generated'] ),_109,_110}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					in  %% Line 1020
					    apply 'scan_error'/6
						({'illegal','integer'}, Line, Col, Line, Ncol, Cs)
		      end
	end
'scan_fraction'/6 =
    %% Line 1023
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs,St,Line,Col,Toks,{Ncs,Us}> when 'true' ->
	      %% Line 1024
	      apply 'scan_fraction'/7
		  (Cs, St, Line, Col, Toks, Ncs, Us)
	  ( <_11,_10,_9,_8,_7,_6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_11,_10,_9,_8,_7,_6})
		  -| [{'function_name',{'scan_fraction',6}}] )
	    -| ['compiler_generated'] )
	end
'scan_fraction'/7 =
    %% Line 1026
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	case <_0,_1,_2,_3,_4,_5,_6> of
	  <[C|Cs],St,Line,Col,Toks,Ncs,Us>
	      when try
		    ( let <_9> =
			  case call 'erlang':'>='
				   (C, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  call 'erlang':'=<'
				      (C, 57)
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_7> when 'true' ->
				  _7
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _9
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1027
	      apply 'scan_fraction'/7
		  (Cs, St, Line, Col, Toks, [C|Ncs], Us)
	  %% Line 1028
	  <[95|[Next|Cs]],St,Line,Col,Toks,Ncs = [Prev|_28],_X_Us>
	      when %% Line 1029
		try
		    ( let <_16> =
			  case call 'erlang':'>='
				   (Next, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case call 'erlang':'=<'
					     (Next, 57) of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    ( case call 'erlang':'>='
						       (Prev, 48) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      call 'erlang':'=<'
							  (Prev, 57)
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      'false'
						  -| ['compiler_generated'] )
						( <_12> when 'true' ->
						      _12
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    'false'
					-| ['compiler_generated'] )
				      ( <_11> when 'true' ->
					    _11
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_10> when 'true' ->
				  _10
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _16
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1030
	      apply 'scan_fraction'/7
		  (Cs, St, Line, Col, Toks, [Next|[95|Ncs]], 'with_underscore')
	  %% Line 1031
	  <Cs = [95],_X_St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      let <_17> = 'scan_fraction'/6
	      in  %% Line 1032
		  {'more',{Cs,Col,Toks,Line,{Ncs,Us},_17}}
	  %% Line 1033
	  <[E|Cs],St,Line,Col,Toks,Ncs,Us>
	      when let <_18> =
		    call 'erlang':'=:='
			(E, 101)
		in  let <_19> =
			call 'erlang':'=:='
			    (E, 69)
		    in  call 'erlang':'or'
			    (_18, _19) ->
	      %% Line 1034
	      apply 'scan_exponent_sign'/7
		  (Cs, St, Line, Col, Toks, [E|Ncs], Us)
	  %% Line 1035
	  <Cs = [],_X_St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      let <_20> = 'scan_fraction'/6
	      in  %% Line 1036
		  {'more',{Cs,Col,Toks,Line,{Ncs,Us},_20}}
	  %% Line 1037
	  <Cs,St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      %% Line 1038
	      apply 'float_end'/7
		  (Cs, St, Line, Col, Toks, Ncs, Us)
	end
'scan_exponent_sign'/6 =
    %% Line 1040
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs,St,Line,Col,Toks,{Ncs,Us}> when 'true' ->
	      %% Line 1041
	      apply 'scan_exponent_sign'/7
		  (Cs, St, Line, Col, Toks, Ncs, Us)
	  ( <_11,_10,_9,_8,_7,_6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_11,_10,_9,_8,_7,_6})
		  -| [{'function_name',{'scan_exponent_sign',6}}] )
	    -| ['compiler_generated'] )
	end
'scan_exponent_sign'/7 =
    %% Line 1043
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	case <_0,_1,_2,_3,_4,_5,_6> of
	  <[C|Cs],St,Line,Col,Toks,Ncs,Us>
	      when let <_7> =
		    call %% Line 1044
			 'erlang':%% Line 1044
				  '=:='
			(%% Line 1044
			 C, %% Line 1044
			    43)
		in  let <_8> =
			call %% Line 1044
			     'erlang':%% Line 1044
				      '=:='
			    (%% Line 1044
			     C, %% Line 1044
				45)
		    in  %% Line 1044
			call 'erlang':'or'
			    (_7, _8) ->
	      %% Line 1045
	      apply 'scan_exponent'/7
		  (Cs, St, Line, Col, Toks, [C|Ncs], Us)
	  %% Line 1046
	  <Cs = [],_X_St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      let <_9> = 'scan_exponent_sign'/6
	      in  %% Line 1047
		  {'more',{Cs,Col,Toks,Line,{Ncs,Us},_9}}
	  %% Line 1048
	  <Cs,St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      %% Line 1049
	      apply 'scan_exponent'/7
		  (Cs, St, Line, Col, Toks, Ncs, Us)
	end
'scan_exponent'/6 =
    %% Line 1051
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <Cs,St,Line,Col,Toks,{Ncs,Us}> when 'true' ->
	      %% Line 1052
	      apply 'scan_exponent'/7
		  (Cs, St, Line, Col, Toks, Ncs, Us)
	  ( <_11,_10,_9,_8,_7,_6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_11,_10,_9,_8,_7,_6})
		  -| [{'function_name',{'scan_exponent',6}}] )
	    -| ['compiler_generated'] )
	end
'scan_exponent'/7 =
    %% Line 1054
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	case <_0,_1,_2,_3,_4,_5,_6> of
	  <[C|Cs],St,Line,Col,Toks,Ncs,Us>
	      when try
		    ( let <_9> =
			  case call 'erlang':'>='
				   (C, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  call 'erlang':'=<'
				      (C, 57)
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_7> when 'true' ->
				  _7
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _9
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1055
	      apply 'scan_exponent'/7
		  (Cs, St, Line, Col, Toks, [C|Ncs], Us)
	  %% Line 1056
	  <[95|[Next|Cs]],St,Line,Col,Toks,Ncs = [Prev|_26],_27>
	      when %% Line 1057
		try
		    ( let <_16> =
			  case call 'erlang':'>='
				   (Next, 48) of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case call 'erlang':'=<'
					     (Next, 57) of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    ( case call 'erlang':'>='
						       (Prev, 48) of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      call 'erlang':'=<'
							  (Prev, 57)
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      'false'
						  -| ['compiler_generated'] )
						( <_12> when 'true' ->
						      _12
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    'false'
					-| ['compiler_generated'] )
				      ( <_11> when 'true' ->
					    _11
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			    ( <_10> when 'true' ->
				  _10
			      -| ['compiler_generated'] )
			  end
		      in  ( call 'erlang':'=:='
				(( _16
				   -| ['compiler_generated'] ), 'true')
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1058
	      apply 'scan_exponent'/7
		  (Cs, St, Line, Col, Toks, [Next|[95|Ncs]], 'with_underscore')
	  %% Line 1059
	  <Cs = [95],_X_St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      let <_17> = 'scan_exponent'/6
	      in  %% Line 1060
		  {'more',{Cs,Col,Toks,Line,{Ncs,Us},_17}}
	  %% Line 1061
	  <Cs = [],_X_St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      let <_18> = 'scan_exponent'/6
	      in  %% Line 1062
		  {'more',{Cs,Col,Toks,Line,{Ncs,Us},_18}}
	  %% Line 1063
	  <Cs,St,Line,Col,Toks,Ncs,Us> when 'true' ->
	      %% Line 1064
	      apply 'float_end'/7
		  (Cs, St, Line, Col, Toks, Ncs, Us)
	end
'float_end'/7 =
    %% Line 1066
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	let <Ncs> =
	    call %% Line 1067
		 'lists':%% Line 1067
			 'reverse'
		(_5)
	in  let <_9> =
		catch
		    let <_8> =
			apply %% Line 1068
			      'remove_digit_separators'/2
			    (%% Line 1068
			     Ncs, _6)
		    in  %% Line 1068
			call 'erlang':'list_to_float'
			    (_8)
	    in  %% Line 1068
		case _9 of
		  %% Line 1069
		  <F>
		      when call 'erlang':'is_float'
			    (_9) ->
		      %% Line 1070
		      apply 'tok3'/8
			  (_0, _1, _2, _3, _4, 'float', Ncs, F)
		  %% Line 1071
		  <_20> when 'true' ->
		      let <_10> =
			  call %% Line 1072
			       'erlang':%% Line 1072
					'length'
			      (%% Line 1072
			       Ncs)
		      in  let <Ncol> =
			      case <_3,_10> of
				%% Line 1159
				( <( _23 = ( 'no_col'
					     -| ['compiler_generated'] )
				     -| ['compiler_generated'] ),_X_N> when ( 'true'
									      -| ['compiler_generated'] ) ->
				      _23
				  -| ['compiler_generated'] )
				%% Line 1161
				( <_24,N>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_integer'
									       -| ['compiler_generated'] )
					      (_24)
					  -| ['compiler_generated'] ) ->
				      %% Line 1162
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( '+'
									     -| ['compiler_generated'] )
					    (_24, N)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_25,_26> when ( 'true'
						   -| ['compiler_generated'] ) ->
				      %% Line 1159
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),_25,_26}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 1073
			      apply 'scan_error'/6
				  ({'illegal','float'}, _2, _3, _2, Ncol, _0)
		end
'skip_comment'/6 =
    %% Line 1076
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[C|Cs],St,Line,Col,Toks,N>
	      when try
		    let <_6> =
			call 'erlang':'=/='
			    (C, 10)
		    in  let <_7> =
			    call 'erlang':'is_integer'
				(C)
			in  let <_8> =
				call 'erlang':'>='
				    (C, 0)
			    in  let <_9> =
				    call 'erlang':'and'
					(_7, _8)
				in  call 'erlang':'and'
					(_6, _9)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_24> =
		  case <> of
		    %% Line 1077
		    ( <>
			  when call 'erlang':'is_integer'
				(C) ->
			  let <_14> =
			      case <> of
				( <>
				      when call 'erlang':'>='
					    (C,
					     0) ->
				      call 'erlang':'<'
					  (C, 55296)
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			  in  ( case _14 of
				  ( <( 'true'
				       -| ['compiler_generated'] )> when 'true' ->
					'true'
				    -| ['compiler_generated'] )
				  ( <( 'false'
				       -| ['compiler_generated'] )> when 'true' ->
					let <_18> =
					    case <> of
					      ( <>
						    when call 'erlang':'>'
							  (C,
							   57343) ->
						    call 'erlang':'<'
							(C, 65534)
						-| ['compiler_generated'] )
					      ( <> when 'true' ->
						    'false'
						-| ['compiler_generated'] )
					    end
					in  ( case _18 of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case <> of
							  ( <>
								when call 'erlang':'>'
								      (C,
								       65535) ->
								call 'erlang':'=<'
								    (C, 1114111)
							    -| ['compiler_generated'] )
							  ( <> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_15> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {( 'badarg'
								  -| ['compiler_generated'] ),_15}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_11> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {( 'badarg'
						    -| ['compiler_generated'] ),_11}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1077
		    ( <> when 'true' ->
			  'false'
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 1077
		  case _24 of
		    %% Line 1078
		    <'true'> when 'true' ->
			let <_25> =
			    call %% Line 1079
				 'erlang':%% Line 1079
					  '+'
				(%% Line 1079
				 N, %% Line 1079
				    1)
			in  %% Line 1079
			    apply 'skip_comment'/6
				(Cs, St, Line, Col, Toks, _25)
		    %% Line 1080
		    <'false'> when 'true' ->
			let <_26> =
			    call %% Line 1081
				 'erlang':%% Line 1081
					  '+'
				(%% Line 1081
				 N, %% Line 1081
				    1)
			in  let <Ncol> =
				case %% Line 1081
				     <Col,_26> of
				  %% Line 1159
				  ( <( _39 = ( 'no_col'
					       -| ['compiler_generated'] )
				       -| ['compiler_generated'] ),_X_N> when ( 'true'
										-| ['compiler_generated'] ) ->
					_39
				    -| ['compiler_generated'] )
				  %% Line 1161
				  ( <_40,_41>
					when ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'is_integer'
										 -| ['compiler_generated'] )
						(_40)
					    -| ['compiler_generated'] ) ->
					%% Line 1162
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( '+'
									       -| ['compiler_generated'] )
					      (_40, _41)
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_42,_43> when ( 'true'
						     -| ['compiler_generated'] ) ->
					%% Line 1159
					( primop ( 'match_fail'
						   -| ['compiler_generated'] )
					      (( {( 'function_clause'
						    -| ['compiler_generated'] ),_42,_43}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    in  %% Line 1082
				apply 'scan_error'/6
				    ({'illegal','character'}, Line, Col, Line, Ncol, Cs)
		    ( <_28> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_28})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1084
	  <Cs = [],_X_St,Line,Col,Toks,N> when 'true' ->
	      let <_29> = 'skip_comment'/6
	      in  %% Line 1085
		  {'more',{Cs,Col,Toks,Line,N,_29}}
	  %% Line 1086
	  <Cs,St,Line,Col,Toks,N> when 'true' ->
	      let <_30> =
		  case %% Line 1087
		       <Col,N> of
		    %% Line 1159
		    ( <( _46 = ( 'no_col'
				 -| ['compiler_generated'] )
			 -| ['compiler_generated'] ),_X_N> when ( 'true'
								  -| ['compiler_generated'] ) ->
			  _46
		      -| ['compiler_generated'] )
		    %% Line 1161
		    ( <_47,_48>
			  when ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_integer'
								   -| ['compiler_generated'] )
				  (_47)
			      -| ['compiler_generated'] ) ->
			  %% Line 1162
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '+'
								 -| ['compiler_generated'] )
				(_47, _48)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_49,_50> when ( 'true'
				       -| ['compiler_generated'] ) ->
			  %% Line 1159
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_49,_50}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 1087
		  apply 'scan1'/5
		      (Cs, St, Line, _30, Toks)
	end
'scan_comment'/6 =
    %% Line 1089
    fun (_0,_1,_2,_3,_4,_5) ->
	case <_0,_1,_2,_3,_4,_5> of
	  <[C|Cs],St,Line,Col,Toks,Ncs>
	      when try
		    let <_6> =
			call 'erlang':'=/='
			    (C, 10)
		    in  let <_7> =
			    call 'erlang':'is_integer'
				(C)
			in  let <_8> =
				call 'erlang':'>='
				    (C, 0)
			    in  let <_9> =
				    call 'erlang':'and'
					(_7, _8)
				in  call 'erlang':'and'
					(_6, _9)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_24> =
		  case <> of
		    %% Line 1090
		    ( <>
			  when call 'erlang':'is_integer'
				(C) ->
			  let <_14> =
			      case <> of
				( <>
				      when call 'erlang':'>='
					    (C,
					     0) ->
				      call 'erlang':'<'
					  (C, 55296)
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			  in  ( case _14 of
				  ( <( 'true'
				       -| ['compiler_generated'] )> when 'true' ->
					'true'
				    -| ['compiler_generated'] )
				  ( <( 'false'
				       -| ['compiler_generated'] )> when 'true' ->
					let <_18> =
					    case <> of
					      ( <>
						    when call 'erlang':'>'
							  (C,
							   57343) ->
						    call 'erlang':'<'
							(C, 65534)
						-| ['compiler_generated'] )
					      ( <> when 'true' ->
						    'false'
						-| ['compiler_generated'] )
					    end
					in  ( case _18 of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case <> of
							  ( <>
								when call 'erlang':'>'
								      (C,
								       65535) ->
								call 'erlang':'=<'
								    (C, 1114111)
							    -| ['compiler_generated'] )
							  ( <> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_15> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {( 'badarg'
								  -| ['compiler_generated'] ),_15}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_11> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {( 'badarg'
						    -| ['compiler_generated'] ),_11}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1090
		    ( <> when 'true' ->
			  'false'
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 1090
		  case _24 of
		    %% Line 1091
		    <'true'> when 'true' ->
			%% Line 1092
			apply 'scan_comment'/6
			    (Cs, St, Line, Col, Toks, [C|Ncs])
		    %% Line 1093
		    <'false'> when 'true' ->
			let <_25> =
			    call %% Line 1094
				 'erlang':%% Line 1094
					  'length'
				(%% Line 1094
				 Ncs)
			in  let <_26> =
				call %% Line 1094
				     'erlang':%% Line 1094
					      '+'
				    (_25, %% Line 1094
					  1)
			    in  let <Ncol> =
				    case %% Line 1094
					 <Col,_26> of
				      %% Line 1159
				      ( <( _39 = ( 'no_col'
						   -| ['compiler_generated'] )
					   -| ['compiler_generated'] ),_X_N> when ( 'true'
										    -| ['compiler_generated'] ) ->
					    _39
					-| ['compiler_generated'] )
				      %% Line 1161
				      ( <_40,N>
					    when ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'is_integer'
										     -| ['compiler_generated'] )
						    (_40)
						-| ['compiler_generated'] ) ->
					    %% Line 1162
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( '+'
										   -| ['compiler_generated'] )
						  (_40, N)
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <_41,_42> when ( 'true'
							 -| ['compiler_generated'] ) ->
					    %% Line 1159
					    ( primop ( 'match_fail'
						       -| ['compiler_generated'] )
						  (( {( 'function_clause'
							-| ['compiler_generated'] ),_41,_42}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				in  %% Line 1095
				    apply 'scan_error'/6
					({'illegal','character'}, Line, Col, Line, Ncol, Cs)
		    ( <_28> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_28})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1097
	  <Cs = [],_X_St,Line,Col,Toks,Ncs> when 'true' ->
	      let <_29> = 'scan_comment'/6
	      in  %% Line 1098
		  {'more',{Cs,Col,Toks,Line,Ncs,_29}}
	  %% Line 1099
	  <Cs,St,Line,Col,Toks,Ncs0> when 'true' ->
	      let <Ncs> =
		  call %% Line 1100
		       'lists':%% Line 1100
			       'reverse'
		      (%% Line 1100
		       Ncs0)
	      in  %% Line 1101
		  apply 'tok3'/8
		      (Cs, St, Line, Col, Toks, 'comment', Ncs, Ncs)
	end
'tok2'/7 =
    %% Line 1103
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	case <_0,_1,_2,_3,_4,_5,_6> of
	  <Cs,St = {'erl_scan',_18,_19,_20,'false'},Line,Col = 'no_col',Toks,_X_Wcs,P> when 'true' ->
	      let <_7> =
		  call %% Line 1157
		       ( 'erl_anno'
			 -| ['compiler_generated'] ):%% Line 1157
						     ( 'new'
						       -| ['compiler_generated'] )
		      (%% Line 1104
		       Line)
	      in  %% Line 1104
		  apply 'scan1'/5
		      (Cs, St, Line, Col, [{P,_7}|Toks])
	  %% Line 1105
	  <Cs,St,Line,Col,Toks,Wcs,P> when 'true' ->
	      let <Anno> =
		  case %% Line 1106
		       <Line,Col,St,Wcs> of
		    %% Line 1138
		    ( <_28,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),_X_String> when ( 'true'
													 -| ['compiler_generated'] ) ->
			  %% Line 1157
			  ( call ( 'erl_anno'
				   -| ['compiler_generated'] ):( 'new'
								 -| ['compiler_generated'] )
				(_28)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1140
		    ( <_31,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),String> when ( 'true'
												      -| ['compiler_generated'] ) ->
			  ( let <Anno> =
				call %% Line 1157
				     ( 'erl_anno'
				       -| ['compiler_generated'] ):%% Line 1157
								   ( 'new'
								     -| ['compiler_generated'] )
				    (_31)
			    in  %% Line 1142
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'set_text'
								       -| ['compiler_generated'] )
				      (String, Anno)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1143
		    ( <_34,_35,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_16,_17,_18,( 'false'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),_X_String> when ( 'true'
									       -| ['compiler_generated'] ) ->
			  ( let <_36> = {_34,_35}
			    in  %% Line 1157
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'new'
								       -| ['compiler_generated'] )
				      (_36)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1145
		    ( <_38,_39,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_19,_20,_21,( 'true'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),String> when ( 'true'
									    -| ['compiler_generated'] ) ->
			  ( let <_40> = {_38,_39}
			    in  ( let <Anno> =
				      call %% Line 1157
					   ( 'erl_anno'
					     -| ['compiler_generated'] ):%% Line 1157
									 ( 'new'
									   -| ['compiler_generated'] )
					  (_40)
				  in  %% Line 1147
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'set_text'
									     -| ['compiler_generated'] )
					    (String, Anno)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_9,_8,_7,_42> when ( 'true'
					    -| ['compiler_generated'] ) ->
			  %% Line 1138
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_9,_8,_7,_42}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  let <_9> =
		      call %% Line 1107
			   'erlang':%% Line 1107
				    'length'
			  (%% Line 1107
			   Wcs)
		  in  let <_10> =
			  case %% Line 1107
			       <Col,_9> of
			    %% Line 1159
			    ( <( _45 = ( 'no_col'
					 -| ['compiler_generated'] )
				 -| ['compiler_generated'] ),_X_N> when ( 'true'
									  -| ['compiler_generated'] ) ->
				  _45
			      -| ['compiler_generated'] )
			    %% Line 1161
			    ( <_46,N>
				  when ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'is_integer'
									   -| ['compiler_generated'] )
					  (_46)
				      -| ['compiler_generated'] ) ->
				  %% Line 1162
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( '+'
									 -| ['compiler_generated'] )
					(_46, N)
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_47,_48> when ( 'true'
					       -| ['compiler_generated'] ) ->
				  %% Line 1159
				  ( primop ( 'match_fail'
					     -| ['compiler_generated'] )
					(( {( 'function_clause'
					      -| ['compiler_generated'] ),_47,_48}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 1107
			  apply 'scan1'/5
			      (Cs, St, Line, _10, [{P,Anno}|Toks])
	end
'tok2'/8 =
    %% Line 1109
    fun (_0,_1,_2,_3,_4,_5,_6,_7) ->
	case <_0,_1,_2,_3,_4,_5,_6,_7> of
	  <Cs,St = {'erl_scan',_19,_20,_21,'false'},Line,Col = 'no_col',Toks,_X_Wcs,P,_X_N> when 'true' ->
	      let <_8> =
		  call %% Line 1157
		       ( 'erl_anno'
			 -| ['compiler_generated'] ):%% Line 1157
						     ( 'new'
						       -| ['compiler_generated'] )
		      (%% Line 1110
		       Line)
	      in  %% Line 1110
		  apply 'scan1'/5
		      (Cs, St, Line, Col, [{P,_8}|Toks])
	  %% Line 1111
	  <Cs,St,Line,Col,Toks,Wcs,P,N> when 'true' ->
	      let <Anno> =
		  case %% Line 1112
		       <Line,Col,St,Wcs> of
		    %% Line 1138
		    ( <_28,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),_X_String> when ( 'true'
													 -| ['compiler_generated'] ) ->
			  %% Line 1157
			  ( call ( 'erl_anno'
				   -| ['compiler_generated'] ):( 'new'
								 -| ['compiler_generated'] )
				(_28)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1140
		    ( <_31,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),String> when ( 'true'
												      -| ['compiler_generated'] ) ->
			  ( let <Anno> =
				call %% Line 1157
				     ( 'erl_anno'
				       -| ['compiler_generated'] ):%% Line 1157
								   ( 'new'
								     -| ['compiler_generated'] )
				    (_31)
			    in  %% Line 1142
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'set_text'
								       -| ['compiler_generated'] )
				      (String, Anno)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1143
		    ( <_34,_35,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_16,_17,_18,( 'false'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),_X_String> when ( 'true'
									       -| ['compiler_generated'] ) ->
			  ( let <_36> = {_34,_35}
			    in  %% Line 1157
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'new'
								       -| ['compiler_generated'] )
				      (_36)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1145
		    ( <_38,_39,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_19,_20,_21,( 'true'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),String> when ( 'true'
									    -| ['compiler_generated'] ) ->
			  ( let <_40> = {_38,_39}
			    in  ( let <Anno> =
				      call %% Line 1157
					   ( 'erl_anno'
					     -| ['compiler_generated'] ):%% Line 1157
									 ( 'new'
									   -| ['compiler_generated'] )
					  (_40)
				  in  %% Line 1147
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'set_text'
									     -| ['compiler_generated'] )
					    (String, Anno)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_9,_8,_42,_43> when ( 'true'
					     -| ['compiler_generated'] ) ->
			  %% Line 1138
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_9,_8,_42,_43}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  let <_10> =
		      case %% Line 1113
			   <Col,N> of
			%% Line 1159
			( <( _46 = ( 'no_col'
				     -| ['compiler_generated'] )
			     -| ['compiler_generated'] ),_X_N> when ( 'true'
								      -| ['compiler_generated'] ) ->
			      _46
			  -| ['compiler_generated'] )
			%% Line 1161
			( <_47,_48>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_integer'
								       -| ['compiler_generated'] )
				      (_47)
				  -| ['compiler_generated'] ) ->
			      %% Line 1162
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '+'
								     -| ['compiler_generated'] )
				    (_47, _48)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_49,_50> when ( 'true'
					   -| ['compiler_generated'] ) ->
			      %% Line 1159
			      ( primop ( 'match_fail'
					 -| ['compiler_generated'] )
				    (( {( 'function_clause'
					  -| ['compiler_generated'] ),_49,_50}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 1113
		      apply 'scan1'/5
			  (Cs, St, Line, _10, [{P,Anno}|Toks])
	end
'tok3'/8 =
    %% Line 1115
    fun (_0,_1,_2,_3,_4,_5,_6,_7) ->
	case <_0,_1,_2,_3,_4,_5,_6,_7> of
	  <Cs,St = {'erl_scan',_21,_22,_23,'false'},Line,Col = 'no_col',Toks,Item,_X_S,Sym> when 'true' ->
	      let <_8> =
		  call %% Line 1157
		       ( 'erl_anno'
			 -| ['compiler_generated'] ):%% Line 1157
						     ( 'new'
						       -| ['compiler_generated'] )
		      (%% Line 1116
		       Line)
	      in  %% Line 1116
		  apply 'scan1'/5
		      (Cs, St, Line, Col, [{Item,_8,Sym}|Toks])
	  %% Line 1117
	  <Cs,St,Line,Col,Toks,Item,String,Sym> when 'true' ->
	      let <_9> =
		  case %% Line 1118
		       <Line,Col,St,String> of
		    %% Line 1138
		    ( <_30,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),_X_String> when ( 'true'
													 -| ['compiler_generated'] ) ->
			  %% Line 1157
			  ( call ( 'erl_anno'
				   -| ['compiler_generated'] ):( 'new'
								 -| ['compiler_generated'] )
				(_30)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1140
		    ( <_33,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),_34> when ( 'true'
												   -| ['compiler_generated'] ) ->
			  ( let <Anno> =
				call %% Line 1157
				     ( 'erl_anno'
				       -| ['compiler_generated'] ):%% Line 1157
								   ( 'new'
								     -| ['compiler_generated'] )
				    (_33)
			    in  %% Line 1142
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'set_text'
								       -| ['compiler_generated'] )
				      (_34, Anno)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1143
		    ( <_37,_38,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_16,_17,_18,( 'false'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),_X_String> when ( 'true'
									       -| ['compiler_generated'] ) ->
			  ( let <_39> = {_37,_38}
			    in  %% Line 1157
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'new'
								       -| ['compiler_generated'] )
				      (_39)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1145
		    ( <_41,_42,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_19,_20,_21,( 'true'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),_43> when ( 'true'
									 -| ['compiler_generated'] ) ->
			  ( let <_44> = {_41,_42}
			    in  ( let <Anno> =
				      call %% Line 1157
					   ( 'erl_anno'
					     -| ['compiler_generated'] ):%% Line 1157
									 ( 'new'
									   -| ['compiler_generated'] )
					  (_44)
				  in  %% Line 1147
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'set_text'
									     -| ['compiler_generated'] )
					    (_43, Anno)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_9,_8,_46,_47> when ( 'true'
					     -| ['compiler_generated'] ) ->
			  %% Line 1138
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_9,_8,_46,_47}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  let <Token> = {%% Line 1118
		       Item,_9,%% Line 1118
			       Sym}
		  in  let <_11> =
			  call %% Line 1119
			       'erlang':%% Line 1119
					'length'
			      (%% Line 1119
			       String)
		      in  let <_12> =
			      case %% Line 1119
				   <Col,_11> of
				%% Line 1159
				( <( _50 = ( 'no_col'
					     -| ['compiler_generated'] )
				     -| ['compiler_generated'] ),_X_N> when ( 'true'
									      -| ['compiler_generated'] ) ->
				      _50
				  -| ['compiler_generated'] )
				%% Line 1161
				( <_51,N>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_integer'
									       -| ['compiler_generated'] )
					      (_51)
					  -| ['compiler_generated'] ) ->
				      %% Line 1162
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( '+'
									     -| ['compiler_generated'] )
					    (_51, N)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_52,_53> when ( 'true'
						   -| ['compiler_generated'] ) ->
				      %% Line 1159
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),_52,_53}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 1119
			      apply 'scan1'/5
				  (Cs, St, Line, _12, [Token|Toks])
	end
'tok3'/9 =
    %% Line 1121
    fun (_0,_1,_2,_3,_4,_5,_6,_7,_8) ->
	case <_0,_1,_2,_3,_4,_5,_6,_7,_8> of
	  <Cs,St = {'erl_scan',_22,_23,_24,'false'},Line,Col = 'no_col',Toks,Item,%% Line 1122
										  _X_String,%% Line 1122
											    Sym,%% Line 1122
												_X_Length> when 'true' ->
	      let <_9> =
		  call %% Line 1157
		       ( 'erl_anno'
			 -| ['compiler_generated'] ):%% Line 1157
						     ( 'new'
						       -| ['compiler_generated'] )
		      (%% Line 1123
		       Line)
	      in  %% Line 1123
		  apply 'scan1'/5
		      (Cs, St, Line, Col, [{Item,_9,Sym}|Toks])
	  %% Line 1124
	  <Cs,St,Line,Col,Toks,Item,String,Sym,Length> when 'true' ->
	      let <_10> =
		  case %% Line 1125
		       <Line,Col,St,String> of
		    %% Line 1138
		    ( <_31,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_10,_11,_12,( 'false'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),_X_String> when ( 'true'
													 -| ['compiler_generated'] ) ->
			  %% Line 1157
			  ( call ( 'erl_anno'
				   -| ['compiler_generated'] ):( 'new'
								 -| ['compiler_generated'] )
				(_31)
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1140
		    ( <_34,( 'no_col'
			     -| ['compiler_generated'] ),( {( 'erl_scan'
							      -| ['compiler_generated'] ),_13,_14,_15,( 'true'
													-| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),_35> when ( 'true'
												   -| ['compiler_generated'] ) ->
			  ( let <Anno> =
				call %% Line 1157
				     ( 'erl_anno'
				       -| ['compiler_generated'] ):%% Line 1157
								   ( 'new'
								     -| ['compiler_generated'] )
				    (_34)
			    in  %% Line 1142
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'set_text'
								       -| ['compiler_generated'] )
				      (_35, Anno)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1143
		    ( <_38,_39,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_16,_17,_18,( 'false'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),_X_String> when ( 'true'
									       -| ['compiler_generated'] ) ->
			  ( let <_40> = {_38,_39}
			    in  %% Line 1157
				( call ( 'erl_anno'
					 -| ['compiler_generated'] ):( 'new'
								       -| ['compiler_generated'] )
				      (_40)
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1145
		    ( <_42,_43,( {( 'erl_scan'
				    -| ['compiler_generated'] ),_19,_20,_21,( 'true'
									      -| ['compiler_generated'] )}
				 -| ['compiler_generated'] ),_44> when ( 'true'
									 -| ['compiler_generated'] ) ->
			  ( let <_45> = {_42,_43}
			    in  ( let <Anno> =
				      call %% Line 1157
					   ( 'erl_anno'
					     -| ['compiler_generated'] ):%% Line 1157
									 ( 'new'
									   -| ['compiler_generated'] )
					  (_45)
				  in  %% Line 1147
				      ( call ( 'erl_anno'
					       -| ['compiler_generated'] ):( 'set_text'
									     -| ['compiler_generated'] )
					    (_44, Anno)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_9,_47,_48,_49> when ( 'true'
					      -| ['compiler_generated'] ) ->
			  %% Line 1138
			  ( primop ( 'match_fail'
				     -| ['compiler_generated'] )
				(( {( 'function_clause'
				      -| ['compiler_generated'] ),_9,_47,_48,_49}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      in  let <Token> = {%% Line 1125
		       Item,_10,%% Line 1125
				Sym}
		  in  let <_12> =
			  case %% Line 1126
			       <Col,Length> of
			    %% Line 1159
			    ( <( _52 = ( 'no_col'
					 -| ['compiler_generated'] )
				 -| ['compiler_generated'] ),_X_N> when ( 'true'
									  -| ['compiler_generated'] ) ->
				  _52
			      -| ['compiler_generated'] )
			    %% Line 1161
			    ( <_53,N>
				  when ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'is_integer'
									   -| ['compiler_generated'] )
					  (_53)
				      -| ['compiler_generated'] ) ->
				  %% Line 1162
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( '+'
									 -| ['compiler_generated'] )
					(_53, N)
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_54,_55> when ( 'true'
					       -| ['compiler_generated'] ) ->
				  %% Line 1159
				  ( primop ( 'match_fail'
					     -| ['compiler_generated'] )
					(( {( 'function_clause'
					      -| ['compiler_generated'] ),_54,_55}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 1126
			  apply 'scan1'/5
			      (Cs, St, Line, _12, [Token|Toks])
	end
'scan_error'/6 =
    %% Line 1128
    fun (_0,_1,_2,_3,_4,_5) ->
	let <Loc> =
	    apply %% Line 1129
		  'location'/2
		(_1, _2)
	in  let <EndLoc> =
		apply %% Line 1130
		      'location'/2
		    (_3, _4)
	    in  %% Line 1131
		apply 'scan_error'/4
		    (_0, Loc, EndLoc, _5)
'scan_error'/4 =
    %% Line 1133
    fun (_0,_1,_2,_3) ->
	%% Line 1134
	{{'error',{_1,'erl_scan',_0},_2},_3}
'anno'/4 =
    %% Line 1138
    fun (_0,_1,_2,_3) ->
	case <_0,_1,_2,_3> of
	  <Line,'no_col',{'erl_scan',_10,_11,_12,'false'},_X_String> when 'true' ->
	      %% Line 1157
	      ( call ( 'erl_anno'
		       -| ['compiler_generated'] ):( 'new'
						     -| ['compiler_generated'] )
		    (Line)
		-| ['compiler_generated'] )
	  %% Line 1140
	  <Line,'no_col',{'erl_scan',_13,_14,_15,'true'},String> when 'true' ->
	      let <Anno> =
		  call %% Line 1157
		       ( 'erl_anno'
			 -| ['compiler_generated'] ):%% Line 1157
						     ( 'new'
						       -| ['compiler_generated'] )
		      (%% Line 1141
		       Line)
	      in  %% Line 1142
		  call 'erl_anno':'set_text'
		      (String, Anno)
	  %% Line 1143
	  <Line,Col,{'erl_scan',_16,_17,_18,'false'},_X_String> when 'true' ->
	      let <_26> = {%% Line 1144
		   Line,%% Line 1144
			Col}
	      in  %% Line 1157
		  ( call ( 'erl_anno'
			   -| ['compiler_generated'] ):( 'new'
							 -| ['compiler_generated'] )
			(_26)
		    -| ['compiler_generated'] )
	  %% Line 1145
	  <Line,Col,{'erl_scan',_19,_20,_21,'true'},String> when 'true' ->
	      let <_28> = {%% Line 1146
		   Line,%% Line 1146
			Col}
	      in  let <Anno> =
		      call %% Line 1157
			   ( 'erl_anno'
			     -| ['compiler_generated'] ):%% Line 1157
							 ( 'new'
							   -| ['compiler_generated'] )
			  (_28)
		  in  %% Line 1147
		      call 'erl_anno':'set_text'
			  (String, Anno)
	  ( <_9,_8,_7,_6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_9,_8,_7,_6})
		  -| [{'function_name',{'anno',4}}] )
	    -| ['compiler_generated'] )
	end
'location'/2 =
    %% Line 1149
    fun (_0,_1) ->
	case <_0,_1> of
	  <Line,'no_col'> when 'true' ->
	      %% Line 1150
	      Line
	  %% Line 1151
	  <Line,Col>
	      when call 'erlang':'is_integer'
		    (Col) ->
	      %% Line 1152
	      {Line,Col}
	  ( <_3,_2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_3,_2})
		  -| [{'function_name',{'location',2}}] )
	    -| ['compiler_generated'] )
	end
'anno'/1 =
    %% Line 1156
    fun (_0) ->
	%% Line 1157
	call 'erl_anno':'new'
	    (_0)
'incr_column'/2 =
    %% Line 1159
    fun (_0,_1) ->
	case <_0,_1> of
	  <Col = 'no_col',_X_N> when 'true' ->
	      %% Line 1160
	      Col
	  %% Line 1161
	  <Col,N>
	      when call 'erlang':'is_integer'
		    (Col) ->
	      %% Line 1162
	      call 'erlang':'+'
		  (Col, N)
	  ( <_3,_2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_3,_2})
		  -| [{'function_name',{'incr_column',2}}] )
	    -| ['compiler_generated'] )
	end
'new_column'/2 =
    %% Line 1164
    fun (_0,_1) ->
	case <_0,_1> of
	  <Col = 'no_col',_X_Ncol> when 'true' ->
	      %% Line 1165
	      Col
	  %% Line 1166
	  <Col,Ncol>
	      when call 'erlang':'is_integer'
		    (Col) ->
	      %% Line 1167
	      Ncol
	  ( <_3,_2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_3,_2})
		  -| [{'function_name',{'new_column',2}}] )
	    -| ['compiler_generated'] )
	end
'nl_spcs'/1 =
    %% Line 1169
    fun (_0) ->
	case _0 of
	  <2> when 'true' ->
	      [10|[32]]
	  %% Line 1170
	  <3> when 'true' ->
	      [10|[32|[32]]]
	  %% Line 1171
	  <4> when 'true' ->
	      [10|[32|[32|[32]]]]
	  %% Line 1172
	  <5> when 'true' ->
	      [10|[32|[32|[32|[32]]]]]
	  %% Line 1173
	  <6> when 'true' ->
	      [10|[32|[32|[32|[32|[32]]]]]]
	  %% Line 1174
	  <7> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32]]]]]]]
	  %% Line 1175
	  <8> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32]]]]]]]]
	  %% Line 1176
	  <9> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]
	  %% Line 1177
	  <10> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]
	  %% Line 1178
	  <11> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]
	  %% Line 1179
	  <12> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]
	  %% Line 1180
	  <13> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]
	  %% Line 1181
	  <14> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]
	  %% Line 1182
	  <15> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]
	  %% Line 1183
	  <16> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]]
	  %% Line 1184
	  <17> when 'true' ->
	      [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]]]
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'nl_spcs',1}}] )
	    -| ['compiler_generated'] )
	end
'spcs'/1 =
    %% Line 1186
    fun (_0) ->
	case _0 of
	  <1> when 'true' ->
	      [32]
	  %% Line 1187
	  <2> when 'true' ->
	      [32|[32]]
	  %% Line 1188
	  <3> when 'true' ->
	      [32|[32|[32]]]
	  %% Line 1189
	  <4> when 'true' ->
	      [32|[32|[32|[32]]]]
	  %% Line 1190
	  <5> when 'true' ->
	      [32|[32|[32|[32|[32]]]]]
	  %% Line 1191
	  <6> when 'true' ->
	      [32|[32|[32|[32|[32|[32]]]]]]
	  %% Line 1192
	  <7> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32]]]]]]]
	  %% Line 1193
	  <8> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]
	  %% Line 1194
	  <9> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]
	  %% Line 1195
	  <10> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]
	  %% Line 1196
	  <11> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]
	  %% Line 1197
	  <12> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]
	  %% Line 1198
	  <13> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]
	  %% Line 1199
	  <14> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]
	  %% Line 1200
	  <15> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]
	  %% Line 1201
	  <16> when 'true' ->
	      [32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]]
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'spcs',1}}] )
	    -| ['compiler_generated'] )
	end
'nl_tabs'/1 =
    %% Line 1203
    fun (_0) ->
	case _0 of
	  <2> when 'true' ->
	      [10|[9]]
	  %% Line 1204
	  <3> when 'true' ->
	      [10|[9|[9]]]
	  %% Line 1205
	  <4> when 'true' ->
	      [10|[9|[9|[9]]]]
	  %% Line 1206
	  <5> when 'true' ->
	      [10|[9|[9|[9|[9]]]]]
	  %% Line 1207
	  <6> when 'true' ->
	      [10|[9|[9|[9|[9|[9]]]]]]
	  %% Line 1208
	  <7> when 'true' ->
	      [10|[9|[9|[9|[9|[9|[9]]]]]]]
	  %% Line 1209
	  <8> when 'true' ->
	      [10|[9|[9|[9|[9|[9|[9|[9]]]]]]]]
	  %% Line 1210
	  <9> when 'true' ->
	      [10|[9|[9|[9|[9|[9|[9|[9|[9]]]]]]]]]
	  %% Line 1211
	  <10> when 'true' ->
	      [10|[9|[9|[9|[9|[9|[9|[9|[9|[9]]]]]]]]]]
	  %% Line 1212
	  <11> when 'true' ->
	      [10|[9|[9|[9|[9|[9|[9|[9|[9|[9|[9]]]]]]]]]]]
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'nl_tabs',1}}] )
	    -| ['compiler_generated'] )
	end
'tabs'/1 =
    %% Line 1214
    fun (_0) ->
	case _0 of
	  <1> when 'true' ->
	      [9]
	  %% Line 1215
	  <2> when 'true' ->
	      [9|[9]]
	  %% Line 1216
	  <3> when 'true' ->
	      [9|[9|[9]]]
	  %% Line 1217
	  <4> when 'true' ->
	      [9|[9|[9|[9]]]]
	  %% Line 1218
	  <5> when 'true' ->
	      [9|[9|[9|[9|[9]]]]]
	  %% Line 1219
	  <6> when 'true' ->
	      [9|[9|[9|[9|[9|[9]]]]]]
	  %% Line 1220
	  <7> when 'true' ->
	      [9|[9|[9|[9|[9|[9|[9]]]]]]]
	  %% Line 1221
	  <8> when 'true' ->
	      [9|[9|[9|[9|[9|[9|[9|[9]]]]]]]]
	  %% Line 1222
	  <9> when 'true' ->
	      [9|[9|[9|[9|[9|[9|[9|[9|[9]]]]]]]]]
	  %% Line 1223
	  <10> when 'true' ->
	      [9|[9|[9|[9|[9|[9|[9|[9|[9|[9]]]]]]]]]]
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'tabs',1}}] )
	    -| ['compiler_generated'] )
	end
'reserved_word'/1 =
    %% Line 1226
    fun (_0) ->
	case _0 of
	  <'after'> when 'true' ->
	      'true'
	  %% Line 1227
	  <'begin'> when 'true' ->
	      'true'
	  %% Line 1228
	  <'case'> when 'true' ->
	      'true'
	  %% Line 1229
	  <'try'> when 'true' ->
	      'true'
	  %% Line 1230
	  <'cond'> when 'true' ->
	      'true'
	  %% Line 1231
	  <'catch'> when 'true' ->
	      'true'
	  %% Line 1232
	  <'andalso'> when 'true' ->
	      'true'
	  %% Line 1233
	  <'orelse'> when 'true' ->
	      'true'
	  %% Line 1234
	  <'end'> when 'true' ->
	      'true'
	  %% Line 1235
	  <'fun'> when 'true' ->
	      'true'
	  %% Line 1236
	  <'if'> when 'true' ->
	      'true'
	  %% Line 1237
	  <'let'> when 'true' ->
	      'true'
	  %% Line 1238
	  <'of'> when 'true' ->
	      'true'
	  %% Line 1239
	  <'receive'> when 'true' ->
	      'true'
	  %% Line 1240
	  <'when'> when 'true' ->
	      'true'
	  %% Line 1241
	  <'bnot'> when 'true' ->
	      'true'
	  %% Line 1242
	  <'not'> when 'true' ->
	      'true'
	  %% Line 1243
	  <'div'> when 'true' ->
	      'true'
	  %% Line 1244
	  <'rem'> when 'true' ->
	      'true'
	  %% Line 1245
	  <'band'> when 'true' ->
	      'true'
	  %% Line 1246
	  <'and'> when 'true' ->
	      'true'
	  %% Line 1247
	  <'bor'> when 'true' ->
	      'true'
	  %% Line 1248
	  <'bxor'> when 'true' ->
	      'true'
	  %% Line 1249
	  <'bsl'> when 'true' ->
	      'true'
	  %% Line 1250
	  <'bsr'> when 'true' ->
	      'true'
	  %% Line 1251
	  <'or'> when 'true' ->
	      'true'
	  %% Line 1252
	  <'xor'> when 'true' ->
	      'true'
	  %% Line 1253
	  <_2> when 'true' ->
	      'false'
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('erl_scan')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('erl_scan', _0)
end